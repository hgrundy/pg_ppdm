\qecho 'CREATING TABLE APPLICATION'
CREATE table application (
APPLICATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
APPLICATION_TYPE  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
CURRENT_STATUS  VARCHAR(20),
DECISION  VARCHAR(20),
DECISION_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_ID  VARCHAR(20),
FEES_DESC  VARCHAR(240),
FEES_PAID_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PREVIOUS_APPLICATION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
RECEIVED_DATE TIMESTAMP(0),
REFERENCE_NUM  VARCHAR(40),
REMARK  VARCHAR(2000),
RESUBMISSION_IND  VARCHAR(1),
SECTION_OF_ACT  VARCHAR(240),
SECTION_OF_ACT_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
SUBMISSION_COMPLETE_IND  VARCHAR(1),
SUBMISSION_DESC  VARCHAR(240),
SUBMITTED_BY  VARCHAR(40),
SUBMITTED_DATE TIMESTAMP(0),
SUBMITTED_TO  VARCHAR(40),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE APPLICATION_COMPONENT'
CREATE table application_component (
APPLICATION_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_COMPONENT_TYPE  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20)
,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE APPLIC_ALIAS'
CREATE table applic_alias (
APPLICATION_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE APPLIC_AREA'
CREATE table applic_area (
APPLICATION_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE APPLIC_ATTACH'
CREATE table applic_attach (
APPLICATION_ID  VARCHAR(20) NOT NULL,
ATTACHMENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ATTACHMENT_DESCRIPTION  VARCHAR(240),
ATTACHMENT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PHYSICAL_ITEM_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECEIVED_DATE TIMESTAMP(0),
RECEIVED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SENT_BY  VARCHAR(20),
SENT_DATE TIMESTAMP(0),
SENT_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE APPLIC_BA'
CREATE table applic_ba (
APPLICATION_ID  VARCHAR(20) NOT NULL,
APPLICATION_BA_ID  VARCHAR(20) NOT NULL,
APPLICATION_BA_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
APPLICATION_BA_ROLE  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE APPLIC_DESC'
CREATE table applic_desc (
APPLICATION_ID  VARCHAR(20) NOT NULL,
DESCRIPTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
APPLICATION_TYPE  VARCHAR(20),
APPLIC_DESC_TYPE  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
DESC_DATE TIMESTAMP(0),
DESC_VALUE DECIMAL(10,5),
DESC_VALUE_OUOM  VARCHAR(20),
DESC_VALUE_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_COST DECIMAL(12,2),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_COST DECIMAL(12,2),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE APPLIC_REMARK'
CREATE table applic_remark (
APPLICATION_ID  VARCHAR(20) NOT NULL,
REMARK_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE AREA'
CREATE table area (
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_MAX_LATITUDE DECIMAL(14,9),
AREA_MAX_LONGITUDE DECIMAL(14,9),
AREA_MIN_LATITUDE DECIMAL(14,9),
AREA_MIN_LONGITUDE DECIMAL(14,9),
AREA_NUMERIC_ID BIGINT,
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE AREA_ALIAS'
CREATE table area_alias (
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
AREA_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE AREA_COMPONENT'
CREATE table area_component (
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_COMPONENT_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20)
,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE AREA_CONTAIN'
CREATE table area_contain (
CONTAINING_AREA_ID  VARCHAR(20) NOT NULL,
CONTAINING_AREA_TYPE  VARCHAR(20) NOT NULL,
CONTAINED_AREA_ID  VARCHAR(20) NOT NULL,
CONTAINED_AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONTAIN_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE AREA_DESCRIPTION'
CREATE table area_description (
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
DESCRIPTION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AREA_DESCRIPTION  VARCHAR(2000),
AREA_DESCRIPTION_DATE TIMESTAMP(0),
AREA_DESC_CODE  VARCHAR(20),
AREA_DESC_TYPE  VARCHAR(20),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_ADDRESS'
CREATE table ba_address (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ADDRESS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ADDRESSEE_TEXT  VARCHAR(240),
ADDRESS_TYPE  VARCHAR(20),
CITY_AREA_ID  VARCHAR(20),
CITY_AREA_TYPE  VARCHAR(20),
COUNTRY_AREA_ID  VARCHAR(20),
COUNTRY_AREA_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_ADDRESS_LINE  VARCHAR(80),
OFFICE_TYPE  VARCHAR(20),
POSTAL_ZIP_CODE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE_AREA_ID  VARCHAR(20),
PROVINCE_STATE_AREA_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SECOND_ADDRESS_LINE  VARCHAR(80),
SERVICE_PERIOD  VARCHAR(240),
SERVICE_QUALITY  VARCHAR(20),
THIRD_ADDRESS_LINE  VARCHAR(80),
WITHHOLDING_TAX_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_ALIAS'
CREATE table ba_alias (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
BA_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PASSWORD  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_AUTHORITY'
CREATE table ba_authority (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
AUTHORITY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AUTHORITY_LIMIT DECIMAL(12,2),
AUTHORITY_TYPE  VARCHAR(20),
AUTHORIZED_BY  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_AUTHORITY_COMP'
CREATE table ba_authority_comp (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
AUTHORITY_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_TYPE  VARCHAR(20),
BA_AUTHORITY_COMPONENT_TYPE  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20)
,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_COMPONENT'
CREATE table ba_component (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_COMPONENT_TYPE  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20)
,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_CONSORTIUM_SERVICE'
CREATE table ba_consortium_service (
CONSORTIUM_BA_ID  VARCHAR(20) NOT NULL,
PROVIDED_BY  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CONTACT_BA_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SERVICE_QUALITY  VARCHAR(20),
SERVICE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_CONTACT_INFO'
CREATE table ba_contact_info (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
LOCATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
CONTACT_LOC_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCATION_NAME  VARCHAR(500),
ORDER_LEVEL BIGINT,
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_CREW'
CREATE table ba_crew (
CREW_COMPANY_BA_ID  VARCHAR(20) NOT NULL,
CREW_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COST_PER_UNIT DECIMAL(12,2),
COST_PER_UNIT_CURRENCY_UOM_UOM  VARCHAR(20),
COST_PER_UNIT_UOM  VARCHAR(20),
CREW_ABBREVIATION  VARCHAR(12),
CREW_LONG_NAME  VARCHAR(255),
CREW_SHORT_NAME  VARCHAR(30),
CREW_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_CREW_MEMBER'
CREATE table ba_crew_member (
CREW_COMPANY_BA_ID  VARCHAR(20) NOT NULL,
CREW_ID  VARCHAR(20) NOT NULL,
MEMBER_OBS_NO INT,
CREW_MEMBER_BA_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CREW_POSITION  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_DESCRIPTION'
CREATE table ba_description (
BUSINESS_ASSOCIATE_ID  VARCHAR(20) NOT NULL,
DESCRIPTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
BA_DESC_CODE  VARCHAR(20),
BA_DESCRIPTION  VARCHAR(1024),
BA_DESC_TYPE  VARCHAR(20),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM  VARCHAR(20),
REFERENCE_VALUE_TYPE  VARCHAR(20),
REFERENCE_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_EMPLOYEE'
CREATE table ba_employee (
EMPLOYER_BA_ID  VARCHAR(20) NOT NULL,
EMPLOYEE_BA_ID  VARCHAR(20) NOT NULL,
EMPLOYEE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_POSITION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATUS  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE'
CREATE table ba_license (
LICENSEE_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
APPLICATION_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENDED_DATE TIMESTAMP(0),
FEES_PAID_IND  VARCHAR(1),
GRANTED_BY_BA_ID  VARCHAR(20),
GRANTED_BY_CONTACT_ID  VARCHAR(20),
GRANTED_DATE TIMESTAMP(0),
GRANTED_TO_BA_ID  VARCHAR(20),
GRANTED_TO_CONTACT_ID  VARCHAR(20),
LICENSE_NUM  VARCHAR(40),
LICENSE_TERM DECIMAL(5,3),
LICENSE_TERM_UOM  VARCHAR(20),
LICENSE_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RATE_SCHEDULE_ID  VARCHAR(20),
REL_LICENSEE_BA_ID  VARCHAR(20),
REL_LICENSE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SECONDARY_TERM DECIMAL(5,3),
SECONDARY_TERM_UOM  VARCHAR(20),
SOURCE  VARCHAR(20),
VIOLATION_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE_ALIAS'
CREATE table ba_license_alias (
LICENSEE_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE_AREA'
CREATE table ba_license_area (
LICENSEE_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE_COND'
CREATE table ba_license_cond (
LICENSEE_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
CONDITION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_CODE  VARCHAR(20),
CONDITION_DESC  VARCHAR(240),
CONDITION_TYPE  VARCHAR(20),
CONDITION_VALUE DOUBLE PRECISION,
CONDITION_VALUE_OUOM  VARCHAR(20),
CONDITION_VALUE_UOM  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
DUE_CONDITION  VARCHAR(20),
DUE_DATE TIMESTAMP(0),
DUE_FREQUENCY  VARCHAR(20),
DUE_TERM SMALLINT,
DUE_TERM_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPT_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_BY_BA_ID  VARCHAR(20),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND  VARCHAR(1),
GRANTED_BY_BA_ID  VARCHAR(20),
LICENSE_TYPE  VARCHAR(20),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE_COND_CODE'
CREATE table ba_license_cond_code (
GRANTED_BY_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_TYPE  VARCHAR(20) NOT NULL,
CONDITION_TYPE  VARCHAR(20) NOT NULL,
CONDITION_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE_COND_TYPE'
CREATE table ba_license_cond_type (
GRANTED_BY_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_TYPE  VARCHAR(20) NOT NULL,
CONDITION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE_REMARK'
CREATE table ba_license_remark (
LICENSEE_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
REMARK_ID  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AUTHOR  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE_STATUS'
CREATE table ba_license_status (
LICENSEE_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_STATUS  VARCHAR(20),
LICENSE_STATUS_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE_TYPE'
CREATE table ba_license_type (
GRANTED_BY_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_LICENSE_VIOLATION'
CREATE table ba_license_violation (
LICENSEE_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
VIOLATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESOLVE_DATE TIMESTAMP(0),
RESOLVE_DESC  VARCHAR(1024),
RESOLVE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
VIOLATION_DATE TIMESTAMP(0),
VIOLATION_DESC  VARCHAR(1024),
VIOLATION_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_ORGANIZATION'
CREATE table ba_organization (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ORGANIZATION_ID  VARCHAR(20) NOT NULL,
ORGANIZATION_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
CREATED_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORGANIZATION_NAME  VARCHAR(255),
ORGANIZATION_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMOVED_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_ORGANIZATION_COMP'
CREATE table ba_organization_comp (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ORGANIZATION_ID  VARCHAR(20) NOT NULL,
ORGANIZATION_SEQ_NO INT,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_COMPONENT_TYPE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
ORGANIZATION_ID2  VARCHAR(20),
ORGANIZATION_SEQ_NO2 INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20)
,
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_PERMIT'
CREATE table ba_permit (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
JURISDICTION  VARCHAR(20) NOT NULL,
PERMIT_TYPE  VARCHAR(20) NOT NULL,
PERMIT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERMIT_NUM  VARCHAR(40),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_PREFERENCE'
CREATE table ba_preference (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
PREFERENCE_TYPE  VARCHAR(20) NOT NULL,
PREFERENCE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
WL_CURVE_CLASS_ID  VARCHAR(20),
WL_PARAMETER_CLASS_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_PREFERENCE_LEVEL'
CREATE table ba_preference_level (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
PREFERENCE_TYPE  VARCHAR(20) NOT NULL,
PREFERENCE_OBS_NO INT,
LEVEL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CURRENCY_UOM  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERENCE_LEVEL SMALLINT,
PREFERENCE_RULE  VARCHAR(240),
PREFERRED_BA_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
WL_DICTIONARY_ID  VARCHAR(20),
WL_DICT_CURVE_ID  VARCHAR(20),
WL_PARAMETER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_SERVICE'
CREATE table ba_service (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
BA_SERVICE_TYPE  VARCHAR(20) NOT NULL,
BA_SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SERVICE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_SERVICE_ADDRESS'
CREATE table ba_service_address (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ADDRESS_OBS_NO INT,
BA_SERVICE_TYPE  VARCHAR(20) NOT NULL,
BA_SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
ADDRESS_SOURCE  VARCHAR(20),
ALIAS_SOURCE  VARCHAR(20),
BA_ALIAS_ID  VARCHAR(20),
BA_SERVICE_SOURCE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SERVICE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BA_XREF'
CREATE table ba_xref (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
NEW_BA_ID  VARCHAR(20) NOT NULL,
BA_XREF_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_XREF_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE BUSINESS_ASSOCIATE'
CREATE table business_associate (
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BA_ABBREVIATION  VARCHAR(12),
BA_CATEGORY  VARCHAR(20),
BA_CODE  VARCHAR(20),
BA_NAME  VARCHAR(255),
BA_SHORT_NAME  VARCHAR(30),
BA_TYPE  VARCHAR(20),
CREDIT_CHECK_DATE TIMESTAMP(0),
CREDIT_CHECK_IND  VARCHAR(1),
CREDIT_CHECK_SOURCE  VARCHAR(20),
CREDIT_RATING  VARCHAR(20),
CREDIT_RATING_SOURCE  VARCHAR(20),
CURRENT_STATUS  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NAME  VARCHAR(255),
LAST_NAME  VARCHAR(255),
MIDDLE_INITIAL  VARCHAR(3),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SERVICE_PERIOD  VARCHAR(240),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CAT_ADDITIVE'
CREATE table cat_additive (
CATALOGUE_ADDITIVE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADDITIVE_GROUP  VARCHAR(20),
ADDITIVE_NAME  VARCHAR(255),
ADDITIVE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MANUFACTURER  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PURCHASE_QUANTITY DOUBLE PRECISION,
PURCHASE_QUANTITY_TYPE  VARCHAR(20),
PURCHASE_QUANTITY_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UPC_CODE  VARCHAR(255),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CAT_ADDITIVE_ALIAS'
CREATE table cat_additive_alias (
CATALOGUE_ADDITIVE_ID  VARCHAR(20) NOT NULL,
CAT_ADDITIVE_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CAT_ADDITIVE_SPEC'
CREATE table cat_additive_spec (
CATALOGUE_ADDITIVE_ID  VARCHAR(20) NOT NULL,
SPEC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADDITIVE_COMPONENT_ID  VARCHAR(20),
ADDITIVE_SPEC_TYPE  VARCHAR(20),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPEC_CODE  VARCHAR(20),
SPEC_DESC  VARCHAR(1024),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CAT_ADDITIVE_TYPE'
CREATE table cat_additive_type (
ADDITIVE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
ADDITIVE_GROUP  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CAT_ADDITIVE_XREF'
CREATE table cat_additive_xref (
CATALOGUE_ADDITIVE_ID  VARCHAR(20) NOT NULL,
CATALOGUE_ADDITIVE_ID2  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ADDITIVE_XREF_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CAT_EQUIPMENT'
CREATE table cat_equipment (
CATALOGUE_EQUIP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CAT_EQUIP_GROUP  VARCHAR(20),
CAT_EQUIP_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_NAME  VARCHAR(255),
EXPIRY_DATE TIMESTAMP(0),
INSTALL_LOC_TYPE  VARCHAR(20),
MANUFACTURER  VARCHAR(20),
MODEL_NUM  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CAT_EQUIP_ALIAS'
CREATE table cat_equip_alias (
CATALOGUE_EQUIP_ID  VARCHAR(20) NOT NULL,
CAT_EQUIP_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CAT_EQUIP_SPEC'
CREATE table cat_equip_spec (
CATALOGUE_EQUIP_ID  VARCHAR(20) NOT NULL,
SPEC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM  VARCHAR(20),
REFERENCE_VALUE_TYPE  VARCHAR(20),
REFERENCE_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPEC_CODE  VARCHAR(20),
SPEC_DESC  VARCHAR(1024),
SPEC_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CLASS_LEVEL'
CREATE table class_level (
CLASSIFICATION_SYSTEM_ID  VARCHAR(20) NOT NULL,
CLASS_LEVEL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_DEFINITION  VARCHAR(2000),
LEVEL_NAME  VARCHAR(255),
LEVEL_REF_NUM  VARCHAR(30),
LEVEL_SEQ_NO INT,
LEVEL_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RETENTION_PERIOD  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CLASS_LEVEL_ALIAS'
CREATE table class_level_alias (
CLASSIFICATION_SYSTEM_ID  VARCHAR(20) NOT NULL,
CLASS_LEVEL_ID  VARCHAR(20) NOT NULL,
CLASS_LEVEL_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
ALIAS_VERSION  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
COLUMN_NAME  VARCHAR(30),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REFERENCED_GUID  VARCHAR(38),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SCHEMA_ENTITY_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
SYSTEM_ID  VARCHAR(20),
TABLE_NAME  VARCHAR(30),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CLASS_LEVEL_COMPONENT'
CREATE table class_level_component (
CLASSIFICATION_SYSTEM_ID  VARCHAR(20) NOT NULL,
CLASS_LEVEL_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASS_LEVEL_COMPONENT_TYPE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20)
,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CLASS_LEVEL_DESC'
CREATE table class_level_desc (
CLASSIFICATION_SYSTEM_ID  VARCHAR(20) NOT NULL,
CLASS_LEVEL_ID  VARCHAR(20) NOT NULL,
DESC_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
DESC_CODE  VARCHAR(20),
DESC_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CLASS_LEVEL_TYPE'
CREATE table class_level_type (
CLASSIFICATION_SYSTEM_ID  VARCHAR(20) NOT NULL,
LEVEL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_ORDER_SEQ_NO INT,
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
SELECTION_CRITERIA  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CLASS_LEVEL_XREF'
CREATE table class_level_xref (
CLASSIFICATION_SYSTEM_ID  VARCHAR(20) NOT NULL,
CLASS_LEVEL_ID  VARCHAR(20) NOT NULL,
CLASSIFICATION_SYSTEM_ID2  VARCHAR(20) NOT NULL,
CLASS_LEVEL_ID2  VARCHAR(20) NOT NULL,
XREF_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_XREF_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CLASS_SYSTEM'
CREATE table class_system (
CLASSIFICATION_SYSTEM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CLASS_DIMENSION  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SYSTEM_DEFINITION  VARCHAR(2000),
SYSTEM_NAME  VARCHAR(255),
SYSTEM_OWNER  VARCHAR(20),
SYSTEM_REF_NUM  VARCHAR(30),
SYSTEM_VERSION  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CLASS_SYSTEM_ALIAS'
CREATE table class_system_alias (
CLASSIFICATION_SYSTEM_ID  VARCHAR(20) NOT NULL,
CLASS_SYSTEM_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
ALIAS_VERSION  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CLASS_SYSTEM_XREF'
CREATE table class_system_xref (
CLASSIFICATION_SYSTEM_ID  VARCHAR(20) NOT NULL,
CLASSIFICATION_SYSTEM_ID2  VARCHAR(20) NOT NULL,
EQUIV_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SYSTEM_XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSENT'
CREATE table consent (
CONSENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONSENT_DESC  VARCHAR(240),
CONSENT_METHOD_DESC  VARCHAR(240),
CONSENT_TYPE  VARCHAR(20),
CURRENT_STATUS  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RECEIVE_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
REQUEST_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
STATUS_REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSENT_BA'
CREATE table consent_ba (
CONSENT_ID  VARCHAR(20) NOT NULL,
CONSENT_BA_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROLE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSENT_COMPONENT'
CREATE table consent_component (
CONSENT_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_COMPONENT_TYPE  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_LICENSE_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_LICENSE_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20)
,
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_LICENSE_ID  VARCHAR(20),
WELL_LICENSE_SOURCE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSENT_COND'
CREATE table consent_cond (
CONSENT_ID  VARCHAR(20) NOT NULL,
CONDITION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPONENT_ID  VARCHAR(20),
CONSENT_CONDITION  VARCHAR(20),
CONSENT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSENT_REMARK'
CREATE table consent_remark (
CONSENT_ID  VARCHAR(20) NOT NULL,
REMARK_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_ABOUT_BA_ID  VARCHAR(20),
MADE_BY_BA_ID  VARCHAR(20),
MADE_FOR_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSULT'
CREATE table consult (
CONSULT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPLETE_DATE TIMESTAMP(0),
CONSULT_REASON  VARCHAR(20),
CONSULT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSULT_BA'
CREATE table consult_ba (
CONSULT_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONSULT_ROLE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSULT_COMPONENT'
CREATE table consult_component (
CONSULT_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_LICENSE_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FIELD_STATION_ID BIGINT,
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
HSE_INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_JURISDICTION  VARCHAR(20),
LAND_SALE_NUMBER  VARCHAR(30),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
PLATFORM_ID  VARCHAR(20),
PLATFORM_SOURCE  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_LICENSE_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20)
,
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_LICENSE_ID  VARCHAR(20),
WELL_LICENSE_SOURCE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSULT_DISC'
CREATE table consult_disc (
CONSULT_ID  VARCHAR(20) NOT NULL,
DISCUSSION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPLETE_DATE TIMESTAMP(0),
DISCUSSION_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSULT_DISC_BA'
CREATE table consult_disc_ba (
CONSULT_ID  VARCHAR(20) NOT NULL,
DISCUSSION_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ATTEND_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSULT_DISC_ISSUE'
CREATE table consult_disc_issue (
CONSULT_ID  VARCHAR(20) NOT NULL,
DISCUSSION_ID  VARCHAR(20) NOT NULL,
DETAIL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSULT_ISSUE'
CREATE table consult_issue (
CONSULT_ID  VARCHAR(20) NOT NULL,
DETAIL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DETAIL_DESC  VARCHAR(240),
DISCUSSION_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ISSUE_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
RESOLUTION  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONSULT_XREF'
CREATE table consult_xref (
CONSULT_ID  VARCHAR(20) NOT NULL,
CONSULT_ID2  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONSULT_XREF_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONTEST'
CREATE table contest (
CONTEST_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LR_CONTEST_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REASON  VARCHAR(2000),
REMARK  VARCHAR(2000),
RESOLUTION_DATE TIMESTAMP(0),
RESOLUTION_METHOD  VARCHAR(20),
RESOLUTION_REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONTEST_COMPONENT'
CREATE table contest_component (
CONTEST_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_COMPONENT_TYPE  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20)
,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONTEST_PARTY'
CREATE table contest_party (
CONTEST_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
BA_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARTY_ROLE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONTEST_REMARK'
CREATE table contest_remark (
CONTEST_ID  VARCHAR(20) NOT NULL,
REMARK_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_SEQ_NO INT,
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONTRACT'
CREATE table contract (
CONTRACT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AMI_AOE_IND  VARCHAR(1),
ASSIGNMENT_PROC_IND  VARCHAR(1),
CASING_POINT_ELECTION  VARCHAR(20),
CLOSING_DATE TIMESTAMP(0),
CONFIDENTIAL_IND  VARCHAR(1),
CONTRACT_NAME  VARCHAR(100),
CONTRACT_NUM  VARCHAR(20),
COUNTRY  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_CONDITION  VARCHAR(20),
GOVERNING_CONTRACT_IND  VARCHAR(1),
LIABILITY_PERIOD INT,
LIABILITY_PERIOD_OUOM  VARCHAR(20),
LIABILITY_RELEASE_DATE TIMESTAMP(0),
NAT_CURRENCY_CONVERSION DECIMAL(10,5),
NAT_CURRENCY_UOM  VARCHAR(20),
OPERATING_PROC_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PRIMARY_TERM INT,
PRIMARY_TERM_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
ROFR_IND  VARCHAR(1),
SECONDARY_TERM INT,
SECONDARY_TERM_OUOM  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SURRENDER_NOTICE_TERM  VARCHAR(20),
SURRENDER_NOTICE_TERM_OUOM  VARCHAR(20),
TERMINATION_DATE TIMESTAMP(0),
VOTING_PROC_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONTRACT_COMPONENT'
CREATE table contract_component (
CONTRACT_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BA_SERVICE_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_COMPONENT_TYPE  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_OFFERING_BID_ID  VARCHAR(20),
LAND_REQUEST_ID  VARCHAR(20),
LAND_RIGHT_ACQTN_ID  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LAND_SALE_OFFERING_ID  VARCHAR(20),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REASON_TYPE  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_PROC_PLAN_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SEIS_TRANSACTION_ID  VARCHAR(20),
SEIS_TRANSACTION_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20)
,
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
SUPPORT_FACILITY_TYPE  VARCHAR(30),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_ACCOUNT_PROC'
CREATE table cont_account_proc (
CONTRACT_ID  VARCHAR(20) NOT NULL,
ACCOUNT_PROC_TYPE  VARCHAR(20) NOT NULL,
ACCOUNT_PROC_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ADVANCE_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INVENTORY_PERIOD SMALLINT,
INVENTORY_PERIOD_UOM  VARCHAR(20),
MATERIAL_SALE_LIMIT DECIMAL(12,2),
PPDM_GUID  VARCHAR(38),
QUORUM_COUNT DECIMAL(5,1),
QUORUM_PERCENT DECIMAL(15,12),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_ALIAS'
CREATE table cont_alias (
CONTRACT_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_ALLOW_EXPENSE'
CREATE table cont_allow_expense (
CONTRACT_ID  VARCHAR(20) NOT NULL,
ALLOW_EXPENSE_TYPE  VARCHAR(20) NOT NULL,
ALLOW_EXPENSE_OBS_NO INT,
ACCOUNT_PROC_OBS_NO INT,
ACCOUNT_PROC_TYPE  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
ALLOW_PERCENT DECIMAL(15,12),
ALLOW_PERCENT_QUALIFIER  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPENSE_FREQUENCY DECIMAL(5,2),
EXPENSE_FREQUENCY_UOM  VARCHAR(20),
EXPENSE_RATE DECIMAL(12,2),
EXPENSE_RATE_QUALIFIER  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INELIGIBLE_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_AREA'
CREATE table cont_area (
CONTRACT_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_BA'
CREATE table cont_ba (
CONTRACT_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ROLE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_ROLE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_BA_SERVICE'
CREATE table cont_ba_service (
CONTRACT_ID  VARCHAR(20) NOT NULL,
PROVIDED_BY  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_SERVICE_TYPE  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORIGINAL_PARTY_NAME  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SERVICE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_EXEMPTION'
CREATE table cont_exemption (
CONTRACT_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
EXEMPTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPTION_DESC  VARCHAR(240),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_EXTENSION'
CREATE table cont_extension (
CONTRACT_ID  VARCHAR(20) NOT NULL,
EXTENSION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_TYPE  VARCHAR(20),
ISSUED_BY  VARCHAR(20),
ISSUED_DATE TIMESTAMP(0),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_JURISDICTION'
CREATE table cont_jurisdiction (
CONTRACT_ID  VARCHAR(20) NOT NULL,
JURISDICTION  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_KEY_WORD'
CREATE table cont_key_word (
CONTRACT_ID  VARCHAR(20) NOT NULL,
PROVISION_ID  VARCHAR(20) NOT NULL,
KEY_WORD  VARCHAR(60) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAGE_REFERENCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_MKTG_ELECT_SUBST'
CREATE table cont_mktg_elect_subst (
CONTRACT_ID  VARCHAR(20) NOT NULL,
OPERATING_PROCEDURE_ID  VARCHAR(20) NOT NULL,
SUBSTANCE_ID  VARCHAR(20) NOT NULL,
SUBSTANCE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BOTH_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ELECTION_COST DECIMAL(12,2),
ELECTION_COST_QUALIFIER  VARCHAR(20),
ELECTION_PERCENT DECIMAL(15,12),
ELECTION_PERCENT_QUALIFIER  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SUBSTANCE_OUOM  VARCHAR(20),
SUBSTANCE_UOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_OPER_PROC'
CREATE table cont_oper_proc (
CONTRACT_ID  VARCHAR(20) NOT NULL,
OPERATING_PROCEDURE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADJUST_13_MONTH_DESC  VARCHAR(240),
ADJUST_13_MONTH_IND  VARCHAR(1),
CASING_POINT_ELECTION  VARCHAR(20),
CLAIM_AMOUNT_LIMIT DECIMAL(12,2),
CLAIM_AMOUNT_LIMIT_OUOM  VARCHAR(20),
DEV_PENALTY_COST DECIMAL(12,2),
DEV_PENALTY_COST_OUOM  VARCHAR(20),
DEV_PENALTY_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_PENALTY_COST DECIMAL(12,2),
EQUIP_PENALTY_COST_OUOM  VARCHAR(20),
EQUIP_PENALTY_PERCENT DECIMAL(15,12),
EXPIRY_DATE TIMESTAMP(0),
EXPL_PENALTY_COST DECIMAL(12,2),
EXPL_PENALTY_COST_OUOM  VARCHAR(20),
EXPL_PENALTY_PERCENT DECIMAL(15,12),
INFLATION_ADJUSTMENT_IND  VARCHAR(1),
INSURANCE_ELECTION  VARCHAR(20),
MKTG_FEE_ELECT_COST DECIMAL(12,2),
MKTG_FEE_ELECT_COST_OUOM  VARCHAR(20),
MKTG_FEE_ELECT_PERCENT DECIMAL(15,12),
NAT_CURRENCY_CONVERSION DECIMAL(10,5),
NAT_CURRENCY_UOM  VARCHAR(20),
OPERATING_PROCEDURE_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECOG_ON_ASSIGNMENT_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
ROFR_IND  VARCHAR(1),
ROFR_REPLY_TERM INT,
ROFR_REPLY_TERM_UOM  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STATUTE_LIMIT_PERIOD SMALLINT,
STATUTE_LIMIT_PERIOD_UOM  VARCHAR(20),
SURRENDER_NOTICE SMALLINT,
SURRENDER_NOTICE_UOM  VARCHAR(20),
TITLE_PRESERVE_DESC  VARCHAR(240),
UNAUTHORIZED_AMOUNT DECIMAL(12,2),
UNAUTHORIZED_AMOUNT_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_PROVISION'
CREATE table cont_provision (
CONTRACT_ID  VARCHAR(20) NOT NULL,
PROVISION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CLAUSE_HEADING  VARCHAR(100),
CLAUSE_NUMBER  VARCHAR(20),
CONT_PROVISION_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MODIFIED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PROVISION_DESC  VARCHAR(240),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_PROVISION_TEXT'
CREATE table cont_provision_text (
CONTRACT_ID  VARCHAR(20) NOT NULL,
PROVISION_ID  VARCHAR(20) NOT NULL,
PROVISION_TEXT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVISION_TEXT  VARCHAR(240),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_PROVISION_XREF'
CREATE table cont_provision_xref (
CONTRACT_ID  VARCHAR(20) NOT NULL,
PROVISION_ID  VARCHAR(20) NOT NULL,
CONTRACT_ID_2  VARCHAR(20) NOT NULL,
PROVISION_ID_2  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVISION_XREF_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_REMARK'
CREATE table cont_remark (
CONTRACT_ID  VARCHAR(20) NOT NULL,
REMARK_ID  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AUTHOR  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_STATUS'
CREATE table cont_status (
CONTRACT_ID  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONTRACT_STATUS  VARCHAR(20),
CONTRACT_STATUS_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_TYPE'
CREATE table cont_type (
CONTRACT_ID  VARCHAR(20) NOT NULL,
CONTRACT_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_VOTING_PROC'
CREATE table cont_voting_proc (
CONTRACT_ID  VARCHAR(20) NOT NULL,
VOTING_PROCEDURE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DEFEAT_COUNT SMALLINT,
DEFEAT_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTEREST_PERCENT DECIMAL(15,12),
NO_VOTE_RESPONSE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
QUORUM_COUNT SMALLINT,
REMARK  VARCHAR(2000),
RESPONSE_PERIOD DECIMAL(5,2),
RESPONSE_PERIOD_UOM  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
VOTE_PROCEDURE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CONT_XREF'
CREATE table cont_xref (
CONTRACT_ID  VARCHAR(20) NOT NULL,
CONTRACT_ID_2  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONTRACT_XREF_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORDER_OF_SUPERCEDENCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_ALIAS'
CREATE table cs_alias (
COORD_SYSTEM_ID  VARCHAR(20) NOT NULL,
COORD_SYSTEM_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_COORDINATE_SYSTEM'
CREATE table cs_coordinate_system (
COORD_SYSTEM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORDINATE_SYSTEM_TYPE  VARCHAR(20),
COORD_SYSTEM_ABBREVIATION  VARCHAR(12),
COORD_SYSTEM_AREA  VARCHAR(60),
COORD_SYSTEM_NAME  VARCHAR(255),
COORD_SYSTEM_SHORT_NAME  VARCHAR(30),
COORD_SYSTEM_UOM  VARCHAR(20),
DATUM_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEODETIC_DATUM  VARCHAR(20),
N_VALUE DECIMAL(13,9),
N_VALUE_OUOM  VARCHAR(20),
OWNER_BA_ID  VARCHAR(20),
PARENT_COORD_SYSTEM_ID  VARCHAR(20),
PERSPECTIVE_HEIGHT DECIMAL(15,7),
PPDM_GUID  VARCHAR(38),
PRIME_MERIDIAN  VARCHAR(20),
PRINCIPAL_MERIDIAN  VARCHAR(20),
PROJECTION_TYPE  VARCHAR(20),
REFERENCE_ELEV DECIMAL(10,5),
REFERENCE_ELEV_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
ROTATION_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
VERTICAL_DATUM_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_COORD_ACQUISITION'
CREATE table cs_coord_acquisition (
ACQUISITION_ID  VARCHAR(20) NOT NULL,
ACQUIRED_BY_BA_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
CAPTURE_METHOD  VARCHAR(20),
COMPUTE_METHOD  VARCHAR(20),
COORDINATE_QUALITY  VARCHAR(20),
DATA_CREATE_DATE TIMESTAMP(0),
DIGITIZED_SCALE BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HORIZONTAL_ACCURACY BIGINT,
HORIZONTAL_ACCURACY_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_SCALE BIGINT,
SURVEY_ACCURACY BIGINT,
TRANSFORM_ID  VARCHAR(20),
VERTICAL_ACCURACY DECIMAL(7,2),
VERTICAL_ACCURACY_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_COORD_TRANSFORM'
CREATE table cs_coord_transform (
TRANSFORM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_COORD_SYSTEM_ID  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
TARGET_COORD_SYSTEM_ID  VARCHAR(20),
TRANSFORM_NAME  VARCHAR(255),
TRANSFORM_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_COORD_TRANS_PARM'
CREATE table cs_coord_trans_parm (
TRANSFORM_TYPE  VARCHAR(20) NOT NULL,
PARAMETER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DIGITAL_OUTPUT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
TRANSFORM_PARM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_COORD_TRANS_VALUE'
CREATE table cs_coord_trans_value (
TRANSFORM_ID  VARCHAR(20) NOT NULL,
TRANSFORM_TYPE  VARCHAR(20) NOT NULL,
PARAMETER_ID  VARCHAR(20) NOT NULL,
VALUE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
TEXT_VALUE  VARCHAR(240),
TRANS_VALUE DECIMAL(15,5),
TRANS_VALUE_UOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_ELLIPSOID'
CREATE table cs_ellipsoid (
ELLIPSOID_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AXIS_OUOM  VARCHAR(20),
ECCENTRICITY DECIMAL(18,17),
EFFECTIVE_DATE TIMESTAMP(0),
ELLIPSOID_NAME  VARCHAR(255),
EXPIRY_DATE TIMESTAMP(0),
INVERSE_FLATTENING DECIMAL(15,11),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEMI_MAJOR_AXIS DECIMAL(22,9),
SEMI_MAJOR_AXIS_ACCURACY SMALLINT,
SEMI_MINOR_AXIS DECIMAL(22,9),
SEMI_MINOR_AXIS_ACCURACY SMALLINT,
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_GEODETIC_DATUM'
CREATE table cs_geodetic_datum (
GEODETIC_DATUM  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATUM_ORIGIN  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELLIPSOID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GEODETIC_DATUM_AREA_ID  VARCHAR(20),
GEODETIC_DATUM_AREA_TYPE  VARCHAR(20),
GEODETIC_DATUM_NAME  VARCHAR(255),
ORIGIN_ANGULAR_OUOM  VARCHAR(20),
ORIGIN_LATITUDE DECIMAL(14,9),
ORIGIN_LONGITUDE DECIMAL(14,9),
ORIGIN_NAME  VARCHAR(60),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_PRIME_MERIDIAN'
CREATE table cs_prime_meridian (
PRIME_MERIDIAN_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GREENWICH_LONGITUDE DECIMAL(14,9),
LONGITUDE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRIME_MERIDIAN_ABBREVIATION  VARCHAR(20),
PRIME_MERIDIAN_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE CS_PRINCIPAL_MERIDIAN'
CREATE table cs_principal_meridian (
PRINCIPAL_MERIDIAN  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONGITUDE DECIMAL(14,9),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ECOZONE'
CREATE table ecozone (
ECOZONE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
DEPTH_OUOM  VARCHAR(20),
ECOZONE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ECOZONE_ALIAS'
CREATE table ecozone_alias (
ECOZONE_ID  VARCHAR(20) NOT NULL,
ECOZONE_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ECOZONE_HIERARCHY'
CREATE table ecozone_hierarchy (
ECOZONE_SET_ID  VARCHAR(20) NOT NULL,
PARENT_ECOZONE_ID  VARCHAR(20) NOT NULL,
CHILD_ECOZONE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIERARCHY_LEVEL  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ECOZONE_SET'
CREATE table ecozone_set (
ECOZONE_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ECOZONE_SET_PART'
CREATE table ecozone_set_part (
ECOZONE_SET_ID  VARCHAR(20) NOT NULL,
ECOZONE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ECOZONE_XREF'
CREATE table ecozone_xref (
ECOZONE_ID1  VARCHAR(20) NOT NULL,
ECOZONE_ID2  VARCHAR(20) NOT NULL,
ECOZONE_XREF_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ECOZONE_XREF_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ENTITLEMENT'
CREATE table entitlement (
ENTITLEMENT_ID  VARCHAR(20) NOT NULL,
ACCESS_CONDITION  VARCHAR(1024),
ACCESS_COND_CODE  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
ENTITLEMENT_NAME  VARCHAR(255),
ENTITLEMENT_TYPE  VARCHAR(20),
EXPIRY_ACTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PRIMARY_TERM SMALLINT,
PRIMARY_TERM_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SECURITY_DESC  VARCHAR(1024),
SOURCE  VARCHAR(20),
USE_CONDITION  VARCHAR(1024),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ENT_COMPONENT'
CREATE table ent_component (
ENTITLEMENT_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACCESS_COND_CODE  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENT_COMP_TYPE  VARCHAR(20),
ENT_RULE  VARCHAR(2000),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_ACTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
ORGANIZATION_ID  VARCHAR(20),
ORGANIZATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
REPORT_HIERARCHY_ID  VARCHAR(20),
REPORT_HIER_COMPONENT_ID  VARCHAR(20),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SEIS_TRANSACTION_ID  VARCHAR(20),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20)
,
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
TRANSACTION_TYPE  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_LOG_CURVE_ID  VARCHAR(20),
WELL_LOG_ID  VARCHAR(20),
WELL_LOG_SOURCE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ENT_GROUP'
CREATE table ent_group (
ENTITLEMENT_ID  VARCHAR(20) NOT NULL,
SECURITY_GROUP_ID  VARCHAR(20) NOT NULL,
GROUP_OBS_NO INT,
ACCESS_CONDITION  VARCHAR(1024),
ACCESS_TYPE  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESTRICTION_DESC  VARCHAR(2000),
SECURITY_DESC  VARCHAR(1024),
SOURCE  VARCHAR(20),
USE_DESC  VARCHAR(1024),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ENT_SECURITY_BA'
CREATE table ent_security_ba (
SECURITY_GROUP_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
BA_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ENT_SECURITY_GROUP'
CREATE table ent_security_group (
SECURITY_GROUP_ID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_DESC  VARCHAR(1024),
GROUP_NAME  VARCHAR(255),
GROUP_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ENT_SECURITY_GROUP_XREF'
CREATE table ent_security_group_xref (
SECURITY_GROUP_ID1  VARCHAR(20) NOT NULL,
SECURITY_GROUP_ID2  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT'
CREATE table equipment (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CATALOGUE_EQUIP_ID  VARCHAR(20),
COMMISSION_DATE TIMESTAMP(0),
DECOMMISSION_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_GROUP  VARCHAR(20),
EQUIPMENT_NAME  VARCHAR(255),
EQUIPMENT_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PURCHASE_DATE TIMESTAMP(0),
REFERENCE_NUM  VARCHAR(255),
REMARK  VARCHAR(2000),
SERIAL_NUM  VARCHAR(255),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_ALIAS'
CREATE table equipment_alias (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
EQUIP_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_BA'
CREATE table equipment_ba (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
BA_OBS_NO INT,
ACQUIRE_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_BA_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
RELEASE_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
ROLE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_COMPONENT'
CREATE table equipment_component (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_COMPONENT_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20)
,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_MAINTAIN'
CREATE table equipment_maintain (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
EQUIP_MAINT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTUAL_END_DATE TIMESTAMP(0),
ACTUAL_START_DATE TIMESTAMP(0),
CATALOGUE_EQUIP_ID  VARCHAR(20),
COMPLETED_BY_BA_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FAILURE_IND  VARCHAR(1),
LOCATION_BA_ADDRESS_OBS_NO INT,
LOCATION_BA_ID  VARCHAR(20),
LOCATION_BA_SOURCE  VARCHAR(20),
MAINT_LOCATION_TYPE  VARCHAR(20),
MAINT_REASON  VARCHAR(20),
MAINT_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SCHEDULED_DATE TIMESTAMP(0),
SCHEDULED_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
SYSTEM_CONDITION  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_MAINT_STATUS'
CREATE table equipment_maint_status (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
EQUIP_MAINT_ID  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_STATUS  VARCHAR(20),
MAINTAIN_STATUS_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_MAINT_TYPE'
CREATE table equipment_maint_type (
CATALOGUE_EQUIP_ID  VARCHAR(20) NOT NULL,
MAINT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_SPEC'
CREATE table equipment_spec (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
SPEC_SET_ID  VARCHAR(20) NOT NULL,
SPEC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_MAINT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM  VARCHAR(20),
REFERENCE_VALUE_TYPE  VARCHAR(20),
REFERENCE_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPEC_CODE  VARCHAR(20),
SPEC_DESC  VARCHAR(1024),
SPEC_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_SPEC_SET'
CREATE table equipment_spec_set (
SPEC_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_SPEC_SET_SPEC'
CREATE table equipment_spec_set_spec (
SPEC_SET_ID  VARCHAR(20) NOT NULL,
SPEC_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
REFERENCE_VALUE_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_STATUS'
CREATE table equipment_status (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
EQUIP_STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EQUIP_STATUS  VARCHAR(20),
EQUIP_STATUS_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_TIME TIMESTAMP(0),
TIMEZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_USE_STAT'
CREATE table equipment_use_stat (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
SPEC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EQUIP_USE_STAT_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PERCENT_CAPACITY DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
TIMEZONE  VARCHAR(20),
USE_CODE  VARCHAR(20),
USE_DESC  VARCHAR(1024),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE EQUIPMENT_XREF'
CREATE table equipment_xref (
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
EQUIPMENT_PART_ID  VARCHAR(20) NOT NULL,
EQUIPMENT_XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
COMMISSION_DATE TIMESTAMP(0),
DECOMMISSION_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_XREF_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INTERCHANGABLE_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY'
CREATE table facility (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
ABANDONED_DATE TIMESTAMP(0),
ACTIVE_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CONSTRUCTED_DATE TIMESTAMP(0),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
CURRENT_OPERATOR  VARCHAR(20),
DEPTH DECIMAL(10,5),
DEPTH_OUOM  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
ELEVATION DECIMAL(10,5),
ELEVATION_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_DIAMETER DECIMAL(10,5),
FACILITY_DIAMETER_OUOM  VARCHAR(20),
FACILITY_FUNCTION  VARCHAR(20),
FACILITY_NAME  VARCHAR(255),
FACILITY_NO DECIMAL(20),
FACILITY_SHORT_NAME  VARCHAR(30),
H2S_IND  VARCHAR(1),
INACTIVE_DATE TIMESTAMP(0),
LAST_INJECTION_DATE TIMESTAMP(0),
LAST_PRODUCTION_DATE TIMESTAMP(0),
LAST_REPORTED_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
MANUFACTURED_BY  VARCHAR(20),
ON_INJECTION_DATE TIMESTAMP(0),
ON_PRODUCTION_DATE TIMESTAMP(0),
PIPELINE_MATERIAL  VARCHAR(20),
PIPELINE_TYPE  VARCHAR(20),
PIPE_COVER_TYPE  VARCHAR(20),
PLOT_NAME  VARCHAR(30),
PLOT_SYMBOL  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRIMARY_FIELD_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UNIT_OPERATED_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_ALIAS'
CREATE table facility_alias (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
FACILITY_ALIAS_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_AREA'
CREATE table facility_area (
FACILITY_TYPE  VARCHAR(20) NOT NULL,
FACILITY_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_BA_SERVICE'
CREATE table facility_ba_service (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
PROVIDED_BY  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_SERVICE_TYPE  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SERVICE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_CLASS'
CREATE table facility_class (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
FACILITY_CLASS_TYPE  VARCHAR(20) NOT NULL,
FACILITY_CLASS_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_COMPONENT'
CREATE table facility_component (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_COMPONENT_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20)
,
WELL_ACTIVITY_UWI  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_DESCRIPTION'
CREATE table facility_description (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
SPEC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM  VARCHAR(20),
REFERENCE_VALUE_TYPE  VARCHAR(20),
REFERENCE_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPEC_CODE  VARCHAR(20),
SPEC_DESC  VARCHAR(1024),
SPEC_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_EQUIPMENT'
CREATE table facility_equipment (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
INSTALL_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTALL_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
REMOVE_REASON  VARCHAR(20),
SOURCE  VARCHAR(20),
USE_DESCRIPTION  VARCHAR(1024),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_FIELD'
CREATE table facility_field (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
FIELD_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_LICENSE'
CREATE table facility_license (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADJUST_13_MONTH_DESC  VARCHAR(240),
ADJUST_13_MONTH_IND  VARCHAR(1),
APPLICATION_ID  VARCHAR(20),
APPROVED_FACILITY_CLASS  VARCHAR(20),
ASSIGNED_FIELD_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_LICENSE_TYPE  VARCHAR(20),
FEES_PAID_IND  VARCHAR(1),
GRANTED_BY_BA_ID  VARCHAR(20),
GRANTED_BY_CONTACT_ID  VARCHAR(20),
GRANTED_DATE TIMESTAMP(0),
GRANTED_TO_BA_ID  VARCHAR(20),
GRANTED_TO_CONTACT_ID  VARCHAR(20),
LICENSE_EXTENSION_COND  VARCHAR(20),
LICENSE_LATITUDE DECIMAL(14,9),
LICENSE_LOCATION  VARCHAR(60),
LICENSE_LONGITUDE DECIMAL(14,9),
LICENSE_NUM  VARCHAR(30),
LICENSE_TERM DECIMAL(5,2),
LICENSE_TERM_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RATE_SCHEDULE_ID  VARCHAR(20),
REL_LICENSE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
RENEWAL_CONDITION  VARCHAR(20),
SECONDARY_TERM DECIMAL(5,3),
SECONDARY_TERM_UOM  VARCHAR(20),
SOURCE  VARCHAR(20),
VIOLATION_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_LIC_ALIAS'
CREATE table facility_lic_alias (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_LIC_AREA'
CREATE table facility_lic_area (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_LIC_COND'
CREATE table facility_lic_cond (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
CONDITION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_CODE  VARCHAR(20),
CONDITION_TYPE  VARCHAR(20),
CONDITION_VALUE DECIMAL(12,2),
CONDITION_VALUE_UOM  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
DUE_CONDITION  VARCHAR(20),
DUE_DATE TIMESTAMP(0),
DUE_FREQUENCY  VARCHAR(20),
DUE_TERM SMALLINT,
DUE_TERM_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPT_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_BY_BA_ID  VARCHAR(20),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PRODUCT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_LIC_REMARK'
CREATE table facility_lic_remark (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
REMARK_ID  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AUTHOR  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_LIC_STATUS'
CREATE table facility_lic_status (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_STATUS  VARCHAR(20),
LICENSE_STATUS_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_LIC_TYPE'
CREATE table facility_lic_type (
GRANTED_BY_BA_ID  VARCHAR(20) NOT NULL,
FACILITY_LICENSE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_LIC_VIOLATION'
CREATE table facility_lic_violation (
LICENSE_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
FACILITY_ID  VARCHAR(20) NOT NULL,
VIOLATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESOLVE_DATE TIMESTAMP(0),
RESOLVE_DESC  VARCHAR(1024),
RESOLVE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
VIOLATION_DATE TIMESTAMP(0),
VIOLATION_DESC  VARCHAR(1024),
VIOLATION_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_MAINTAIN'
CREATE table facility_maintain (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
MAINTAIN_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTUAL_END_DATE TIMESTAMP(0),
ACTUAL_START_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_BA_ID  VARCHAR(20),
MAINTAIN_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SCHEDULE_END_DATE TIMESTAMP(0),
SCHEDULE_START_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_MAINT_STATUS'
CREATE table facility_maint_status (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
MAINTAIN_ID  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_STATUS  VARCHAR(20),
MAINTAIN_STATUS_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_RATE'
CREATE table facility_rate (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
RATE_SCHEDULE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_RESTRICTION'
CREATE table facility_restriction (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_STATUS'
CREATE table facility_status (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_STATUS  VARCHAR(20),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_TIME TIMESTAMP(0),
STATUS_TYPE  VARCHAR(20),
TIMEZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_SUBSTANCE'
CREATE table facility_substance (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
SUBSTANCE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_CAPACITY DECIMAL(14,4),
CAPACITY_OUOM  VARCHAR(20),
CAPACITY_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_CAPACITY DECIMAL(14,4),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUBSTANCE_EXCLUDED_IND  VARCHAR(1),
SUBSTANCE_INCLUDED_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_VERSION'
CREATE table facility_version (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
CONSTRUCTED_DATE TIMESTAMP(0),
CURRENT_OPERATOR  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_NAME  VARCHAR(255),
FACILITY_SHORT_NAME  VARCHAR(30),
FACILITY_STATUS  VARCHAR(20),
INACTIVE_DATE TIMESTAMP(0),
LAST_INJECTION_DATE TIMESTAMP(0),
LAST_PRODUCTION_DATE TIMESTAMP(0),
LAST_REPORTED_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LONGITUDE DECIMAL(14,9),
ON_INJECTION_DATE TIMESTAMP(0),
ON_PRODUCTION_DATE TIMESTAMP(0),
PLOT_NAME  VARCHAR(20),
PLOT_SYMBOL  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STATUS_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FACILITY_XREF'
CREATE table facility_xref (
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
FACILITY_ID_2  VARCHAR(20) NOT NULL,
FACILITY_TYPE_2  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_XREF_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FIELD'
CREATE table field (
FIELD_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
DISCOVERY_DATE TIMESTAMP(0),
DISTRICT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ABBREVIATION  VARCHAR(20),
FIELD_NAME  VARCHAR(60),
FIELD_TYPE  VARCHAR(20),
GROUP_FIELD_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FIELD_ALIAS'
CREATE table field_alias (
FIELD_ID  VARCHAR(20) NOT NULL,
FIELD_ALIAS_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FIELD_AREA'
CREATE table field_area (
FIELD_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
AREA_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FIELD_COMPONENT'
CREATE table field_component (
FIELD_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_COMPONENT_TYPE  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20)
,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FIELD_INSTRUMENT'
CREATE table field_instrument (
FIELD_ID  VARCHAR(20) NOT NULL,
INSTRUMENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FIELD_VERSION'
CREATE table field_version (
FIELD_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
DISCOVERY_DATE TIMESTAMP(0),
DISTRICT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ABBREVIATION  VARCHAR(20),
FIELD_NAME  VARCHAR(60),
FIELD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FINANCE'
CREATE table finance (
FINANCE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTUAL_COST DECIMAL(12,2),
AUTHORIZED_BY_BA_ID  VARCHAR(20),
BUDGET_COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_TYPE  VARCHAR(20),
FIN_STATUS  VARCHAR(20),
ISSUE_DATE TIMESTAMP(0),
LIMIT_AMOUNT DECIMAL(12,2),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUMBER  VARCHAR(40),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TAX_CREDIT_CODE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FIN_COMPONENT'
CREATE table fin_component (
FINANCE_ID  VARCHAR(20) NOT NULL,
FINANCE_COMPONENT_ID  VARCHAR(20) NOT NULL,
ACQUISITION_COST_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EQUIP_MAINT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_LICENSE_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID2  VARCHAR(20),
FIN_COMPONENT_TABLE  VARCHAR(30),
FIN_COMPONENT_TYPE  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_BID_SET_ID  VARCHAR(20),
LAND_SALE_JURISDICTION  VARCHAR(20),
LAND_SALE_NUMBER  VARCHAR(30),
LAND_SALE_OFFERING_BID  VARCHAR(20),
LAND_SALE_OFFERING_ID  VARCHAR(20),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
REVISION_ID  VARCHAR(20),
REVISION_OBS_NO INT,
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_LICENSE_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20)
,
SEIS_SET_TYPE  VARCHAR(30),
SEIS_TRANSACTION_ID  VARCHAR(20),
SEIS_TRANSACTION_TYPE  VARCHAR(20),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_DRILL_PERIOD_OBS_NO INT,
WELL_LICENSE_ID  VARCHAR(20),
WELL_LICENSE_SOURCE  VARCHAR(20),
WELL_SERVICE_PROVIDED_BY  VARCHAR(20),
WELL_SERVICE_SEG_OBS_NO INT,
WELL_SERVICE_SEQ_NO INT,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FIN_COST_SUMMARY'
CREATE table fin_cost_summary (
COST_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AMI_IND  VARCHAR(1),
CONFIDENTIAL_IND  VARCHAR(1),
COST_AMOUNT DECIMAL(12,2),
COST_PER_SIZE DECIMAL(12,2),
COST_PER_SIZE_OUOM  VARCHAR(20),
COST_TYPE  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_COMPONENT_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
PAID_DATE TIMESTAMP(0),
PARENT_COST_ID  VARCHAR(20),
PERCENT_OF_PARENT DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORT_COST_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
SUBMIT_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FIN_XREF'
CREATE table fin_xref (
FINANCE_ID1  VARCHAR(20) NOT NULL,
FINANCE_ID2  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DISTRIBUTION_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIN_XREF_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL'
CREATE table fossil (
FOSSIL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CLIMATE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LIFE_HABIT  VARCHAR(20),
LOWER_ECOZONE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TAXON_GROUP  VARCHAR(20),
TAXON_LEAF_ID  VARCHAR(20),
UPPER_ECOZONE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_AGE'
CREATE table fossil_age (
FOSSIL_ID  VARCHAR(20) NOT NULL,
AGE_INTERP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AGE_CONFIDENCE_ID  VARCHAR(20),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET  VARCHAR(20),
AVERAGE_REL_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET  VARCHAR(20),
LOWER_REL_STRAT_UNIT_ID  VARCHAR(20),
MAX_AGE DECIMAL(15,5),
MAX_AGE_ERROR_MINUS DECIMAL(15,5),
MAX_AGE_ERROR_PLUS DECIMAL(15,5),
MIN_AGE DECIMAL(15,5),
MIN_AGE_ERROR_MINUS DECIMAL(15,5),
MIN_AGE_ERROR_PLUS DECIMAL(15,5),
POST_QUALIFIER  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PRE_QUALIFIER  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET  VARCHAR(20),
UPPER_REL_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_ASSEMBLAGE'
CREATE table fossil_assemblage (
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
TAXON_LEAF_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ASSEMBLAGE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OLDEST_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PRIMARY_MARKER_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_DESC'
CREATE table fossil_desc (
FOSSIL_ID  VARCHAR(20) NOT NULL,
FOSSIL_DESC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
DESCRIPTION_CODE  VARCHAR(20),
DESCRIPTION_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
VALUE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_DOCUMENT'
CREATE table fossil_document (
FOSSIL_ID  VARCHAR(20) NOT NULL,
SOURCE_DOCUMENT  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_EQUIVALENCE'
CREATE table fossil_equivalence (
FOSSIL_ID  VARCHAR(20) NOT NULL,
EQUIV_FOSSIL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_NAME_SET'
CREATE table fossil_name_set (
FOSSIL_NAME_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
CERTIFIED_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOSSIL_NAME_SET_TYPE  VARCHAR(20),
NAME_SET_NAME  VARCHAR(240),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_NAME_SET_FOSSIL'
CREATE table fossil_name_set_fossil (
FOSSIL_NAME_SET_ID  VARCHAR(20) NOT NULL,
FOSSIL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_TAXON_ALIAS'
CREATE table fossil_taxon_alias (
TAXON_LEAF_ID  VARCHAR(20) NOT NULL,
FOSSIL_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_FOSSIL_ID  VARCHAR(20),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_TAXON_HIER'
CREATE table fossil_taxon_hier (
PARENT_TAXON_LEAF_ID  VARCHAR(20) NOT NULL,
CHILD_TAXON_LEAF_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
TAXON_NAME  VARCHAR(240),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_TAXON_LEAF'
CREATE table fossil_taxon_leaf (
TAXON_LEAF_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
TAXON_LEVEL  VARCHAR(20),
TAXON_NAME  VARCHAR(240),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE FOSSIL_XREF'
CREATE table fossil_xref (
FOSSIL_ID1  VARCHAR(20) NOT NULL,
FOSSIL_ID2  VARCHAR(20) NOT NULL,
FOSSIL_XREF_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOSSIL_XREF_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT'
CREATE table hse_incident (
INCIDENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INCIDENT_CLASS_ID  VARCHAR(20),
INCIDENT_DATE TIMESTAMP(0),
INCIDENT_DURATION DECIMAL(10,5),
INCIDENT_DURATION_OUOM  VARCHAR(20),
INCIDENT_DURATION_UOM  VARCHAR(20),
LOST_TIME_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
RECORDED_TIME TIMESTAMP(0),
RECORDED_TIMEZONE  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORTED_BY_BA_ID  VARCHAR(20),
REPORTED_BY_NAME  VARCHAR(255),
REPORTED_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
WORK_RELATED_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_BA'
CREATE table hse_incident_ba (
INCIDENT_ID  VARCHAR(20) NOT NULL,
PARTY_OBS_NO INT,
PARTY_ROLE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
COMPANY_BA_ID  VARCHAR(20),
DETAIL_OBS_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INVOLVED_BA_ROLE  VARCHAR(20),
INVOLVED_BA_STATUS  VARCHAR(20),
INVOLVED_PARTY_BA_ID  VARCHAR(20),
PERIOD_OBS_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_CAUSE'
CREATE table hse_incident_cause (
INCIDENT_ID  VARCHAR(20) NOT NULL,
CAUSE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CAUSE_CODE  VARCHAR(20),
CAUSE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_CLASS'
CREATE table hse_incident_class (
INCIDENT_CLASS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME  VARCHAR(255),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUM  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_CLASS_ALIAS'
CREATE table hse_incident_class_alias (
INCIDENT_CLASS_ID  VARCHAR(20) NOT NULL,
ALIAS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_COMPONENT'
CREATE table hse_incident_component (
INCIDENT_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE  VARCHAR(20),
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_ROLE  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
CREW_COMPANY_BA_ID  VARCHAR(20),
CREW_ID  VARCHAR(20),
CREW_MEMBER_BA_ID  VARCHAR(20),
CREW_MEMBER_OBS_NO INT,
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ACTIVITY_TYPE  VARCHAR(20),
PDEN_AMENDMENT_SEQ_NO INT,
PDEN_ID  VARCHAR(40),
PDEN_PERIOD_TYPE  VARCHAR(20),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PDEN_VOLUME_DATE  VARCHAR(12),
PDEN_VOLUME_METHOD  VARCHAR(20),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PROJECT_PLAN_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30)
,
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
TOTAL_INCIDENT_COUNT BIGINT,
TOTAL_INCIDENT_PERIOD DECIMAL(10,5),
TOTAL_INCIDENT_PERIOD_UOM  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_DRILL_PERIOD_OBS_NO INT,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_DETAIL'
CREATE table hse_incident_detail (
INCIDENT_ID  VARCHAR(20) NOT NULL,
DETAIL_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DETAIL_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INCIDENT_DATE TIMESTAMP(0),
INCIDENT_DURATION DECIMAL(10,5),
INCIDENT_DURATION_OUOM  VARCHAR(20),
INCIDENT_DURATION_UOM  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_SEVERITY_ID  VARCHAR(20),
INCIDENT_TYPE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_EQUIP'
CREATE table hse_incident_equip (
INCIDENT_ID  VARCHAR(20) NOT NULL,
EQUIP_OBS_NO INT,
EQUIP_ROLE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CREW_ROLE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_GROUP  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EQUIPMENT_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_OBS_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_EQUIV'
CREATE table hse_incident_equiv (
INCIDENT_SET_ID  VARCHAR(20) NOT NULL,
INCIDENT_TYPE_ID  VARCHAR(20) NOT NULL,
INCIDENT_SET_ID2  VARCHAR(20) NOT NULL,
INCIDENT_TYPE_ID2  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_INTERACTION'
CREATE table hse_incident_interaction (
INCIDENT_ID  VARCHAR(20) NOT NULL,
INTERACTION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CAUSE_OBS_NO INT,
DESCRIPTION  VARCHAR(1024),
DETAIL_OBS_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EQUIP_OBS_NO INT,
EQUIP_ROLE_OBS_NO INT,
EXPIRY_DATE TIMESTAMP(0),
INCIDENT_SUBSTANCE  VARCHAR(20),
INTERACTION_TYPE  VARCHAR(20),
PARTY_OBS_NO INT,
PARTY_ROLE_OBS_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESPONSE_OBS_NO INT,
SOURCE  VARCHAR(20),
SUBSTANCE_SEQ_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_REMARK'
CREATE table hse_incident_remark (
INCIDENT_ID  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_BY_BA_ID  VARCHAR(20),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_RESPONSE'
CREATE table hse_incident_response (
INCIDENT_ID  VARCHAR(20) NOT NULL,
RESPONSE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
RESPONSE_RESULT  VARCHAR(20),
RESPONSE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_SET'
CREATE table hse_incident_set (
INCIDENT_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME  VARCHAR(255),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUM  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_SEVERITY'
CREATE table hse_incident_severity (
INCIDENT_SET_ID  VARCHAR(20) NOT NULL,
INCIDENT_TYPE_ID  VARCHAR(20) NOT NULL,
INCIDENT_SEVERITY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
DETERMINATION_METHOD  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_SEV_ALIAS'
CREATE table hse_incident_sev_alias (
INCIDENT_SET_ID  VARCHAR(20) NOT NULL,
INCIDENT_TYPE_ID  VARCHAR(20) NOT NULL,
INCIDENT_SEVERITY_ID  VARCHAR(20) NOT NULL,
SEVERITY_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_SUBSTANCE'
CREATE table hse_incident_substance (
INCIDENT_ID  VARCHAR(20) NOT NULL,
INCIDENT_SUBSTANCE  VARCHAR(20) NOT NULL,
SUBSTANCE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SUBSTANCE_ROLE  VARCHAR(20),
VOLUME DECIMAL(14,4),
VOLUME_OUOM  VARCHAR(20),
VOLUME_UOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_TYPE'
CREATE table hse_incident_type (
INCIDENT_SET_ID  VARCHAR(20) NOT NULL,
INCIDENT_TYPE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
DETERMINATION_METHOD  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROJECT_PLAN_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_TYPE_ALIAS'
CREATE table hse_incident_type_alias (
INCIDENT_SET_ID  VARCHAR(20) NOT NULL,
INCIDENT_TYPE_ID  VARCHAR(20) NOT NULL,
INCIDENT_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE HSE_INCIDENT_WEATHER'
CREATE table hse_incident_weather (
INCIDENT_ID  VARCHAR(20) NOT NULL,
WEATHER_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEAVE DECIMAL(10,5),
PITCH DECIMAL(10,5),
PPDM_GUID  VARCHAR(38),
RECORDED_TIME TIMESTAMP(0),
RECORDED_TIMEZONE  VARCHAR(20),
REMARK  VARCHAR(2000),
ROAD_CONDITION  VARCHAR(20),
ROLL DECIMAL(10,5),
SOURCE  VARCHAR(20),
SWELL_HEIGHT DECIMAL(10,5),
TEMPERATURE DECIMAL(10,5),
TEMPERATURE_OUOM  VARCHAR(20),
WATER_CONDITION  VARCHAR(20),
WAVE_HEIGHT DECIMAL(10,5),
WEATHER_CONDITION  VARCHAR(20),
WIND_DIRECTION  VARCHAR(20),
WIND_STRENGTH  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INSTRUMENT'
CREATE table instrument (
INSTRUMENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADD_FOR_SERVICE_BA_ID  VARCHAR(20),
BOOK_NAME  VARCHAR(30),
BOOK_NUMBER  VARCHAR(20),
CAVEATOR_BA_ID  VARCHAR(20),
COMPLETION_REPORT_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
DISCHARGE_DATE TIMESTAMP(0),
DISCHARGE_IND  VARCHAR(1),
DISCHARGE_NUM  VARCHAR(30),
DOCUMENT_NUM  VARCHAR(30),
DRILLING_INTENT_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTRUMENT_TYPE  VARCHAR(20),
JURISDICTION  VARCHAR(20),
JURISDICTION_ADD_OBS_NO INT,
JURISDICTION_ADD_SOURCE  VARCHAR(20),
LINE_NUMBER  VARCHAR(20),
PAGE_NUMBER  VARCHAR(20),
PLUG_AND_ABANDON_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PRODUCTION_LEASE_IND  VARCHAR(1),
PROVINCE_STATE  VARCHAR(20),
RECEIVED_DATE TIMESTAMP(0),
RECORDED_DATE TIMESTAMP(0),
REGISTERED_BY_BA_ID  VARCHAR(20),
REGISTRATION_DATE TIMESTAMP(0),
REGISTRATION_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VALID_LEASE_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INSTRUMENT_AREA'
CREATE table instrument_area (
INSTRUMENT_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INSTRUMENT_COMPONENT'
CREATE table instrument_component (
INSTRUMENT_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
INSTRUMENT_COMPONENT_TYPE  VARCHAR(20),
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PRODUCT_TYPE  VARCHAR(20),
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20)
,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INSTRUMENT_DETAIL'
CREATE table instrument_detail (
INSTRUMENT_ID  VARCHAR(20) NOT NULL,
DETAIL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
COST_VALUE DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DETAIL_DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTRUMENT_DETAIL_CODE  VARCHAR(20),
INSTRUMENT_DETAIL_TYPE  VARCHAR(20),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM  VARCHAR(20),
REFERENCE_VALUE_TYPE  VARCHAR(20),
REFERENCE_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INSTRUMENT_XREF'
CREATE table instrument_xref (
INSTRUMENT_ID  VARCHAR(20) NOT NULL,
PARENT_INSTRUMENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AMMENDMENT_DESC  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INTEREST_SET'
CREATE table interest_set (
INTEREST_SET_ID  VARCHAR(20) NOT NULL,
INTEREST_SET_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTEREST_SET_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INT_SET_COMPONENT'
CREATE table int_set_component (
INTEREST_SET_ID  VARCHAR(20) NOT NULL,
INTEREST_SET_SEQ_NO INT,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
JURISDICTION  VARCHAR(20),
LAND_OFFERING_BID  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LAND_SALE_OFFERING_ID  VARCHAR(20),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ACTIVITY_TYPE  VARCHAR(20),
PDEN_AMENDMENT_SEQ_NO INT,
PDEN_DISPOSITION_OBS_NO INT,
PDEN_ID  VARCHAR(40),
PDEN_PERIOD_TYPE  VARCHAR(20),
PDEN_PRODUCT_TYPE  VARCHAR(20),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PDEN_VOLUME_DATE  VARCHAR(12),
PDEN_VOLUME_METHOD  VARCHAR(20),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PROVISION_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
TRIGGER_DESC  VARCHAR(240),
TRIGGER_EVENT  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_LOG_CURVE_ID  VARCHAR(20),
WELL_LOG_ID  VARCHAR(20),
WELL_LOG_SOURCE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INT_SET_PARTNER'
CREATE table int_set_partner (
INTEREST_SET_ID  VARCHAR(20) NOT NULL,
INTEREST_SET_SEQ_NO INT,
PARTNER_BA_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE  VARCHAR(20),
BREACH_DESC  VARCHAR(240),
BREACH_IND  VARCHAR(1),
CHANGE_REASON  VARCHAR(240),
CONFIDENTIAL_IND  VARCHAR(1),
CONTRACT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ESCROW_DESC  VARCHAR(240),
ESCROW_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
GROSS_FRACT_INTEREST  VARCHAR(100),
GROSS_PERCENT_INTEREST DECIMAL(15,12),
INACTIVE_DATE TIMESTAMP(0),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ROLE  VARCHAR(20),
NET_FRACT_INTEREST  VARCHAR(100),
NET_PERCENT_INTEREST DECIMAL(15,12),
PENALTY_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
RIGHT_TO_EARN_DESC  VARCHAR(240),
RIGHT_TO_EARN_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
TITLE_OWN_TYPE  VARCHAR(20),
UNIT_OPERATED_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INT_SET_PARTNER_CONT'
CREATE table int_set_partner_cont (
INTEREST_SET_ID  VARCHAR(20) NOT NULL,
INTEREST_SET_SEQ_NO INT,
PARTNER_BA_ID  VARCHAR(20) NOT NULL,
CONTACT_BA_ID  VARCHAR(20) NOT NULL,
CONTACT_ID  VARCHAR(20) NOT NULL,
CONTACT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE  VARCHAR(20),
CONTACT_ORG_BA_ID  VARCHAR(20),
CONTACT_ORG_BA_SEQ_NO INT,
CONTACT_ORG_ORGANIZATION_ID  VARCHAR(20),
CONTACT_ROLE  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INACTIVE_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INT_SET_STATUS'
CREATE table int_set_status (
INTEREST_SET_ID  VARCHAR(20) NOT NULL,
INTEREST_SET_SEQ_NO INT,
STATUS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EFFECTIVE_TERM  VARCHAR(240),
EFFECTIVE_TERM_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INT_SET_STATUS  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REASON  VARCHAR(240),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
UNDETERMINED_TERM_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE INT_SET_XREF'
CREATE table int_set_xref (
INTEREST_SET_ID  VARCHAR(20) NOT NULL,
INTEREST_SET_SEQ_NO INT,
INTEREST_SET_ID_2  VARCHAR(20) NOT NULL,
INTEREST_SET_SEQ_NO_2 INT,
INT_SET_XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CONTRACT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INT_SET_XREF_TYPE  VARCHAR(20),
PARTNER_BA_ID  VARCHAR(20),
PARTNER_BA_ID_2  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_AGREEMENT'
CREATE table land_agreement (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_AGREE_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROFR_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_AGREE_PART'
CREATE table land_agree_part (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DEC_OF_TRUST_IND  VARCHAR(1),
DEC_OF_TRUST_REMARK  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_AGREE_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROFR_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_ALIAS'
CREATE table land_alias (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
LR_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_NUMBER  VARCHAR(30),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
LAND_REF_NUM_TYPE  VARCHAR(20),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REFERENCE_NUM  VARCHAR(30),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_AREA'
CREATE table land_area (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM  VARCHAR(20),
NET_SIZE DECIMAL(20,10),
NET_SIZE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_BA_SERVICE'
CREATE table land_ba_service (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
PROVIDED_BY  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_SERVICE_TYPE  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORGANIZATION_ID  VARCHAR(20),
ORGANIZATION_SEQ_NO INT,
PPDM_GUID  VARCHAR(38),
PROVIDED_FOR_BA_ID  VARCHAR(20),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SERVICE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_OCCUPANT'
CREATE table land_occupant (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
OCCUPANCY_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_REMARK'
CREATE table land_remark (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
REMARK_ID  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RECOMMEND_IMPL_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
REMARK_BA_ID  VARCHAR(20),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE  VARCHAR(20),
REMARK_USER  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT'
CREATE table land_right (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
ACQTN_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
CALCULATED_INTEREST DECIMAL(15,12),
CASE_SERIAL_NUM  VARCHAR(30),
CONFIDENTIAL_IND  VARCHAR(1),
COST_CENTER_NUM  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_PLATFORM_APPROVE_DATE TIMESTAMP(0),
FIRST_PLATFORM_INSTALL_DATE TIMESTAMP(0),
FIRST_PRODUCTION_DATE TIMESTAMP(0),
FRACTIONAL_INTEREST  VARCHAR(100),
GRANTED_RIGHT_TYPE  VARCHAR(20),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM  VARCHAR(20),
HIGH_WATER_DEPTH DECIMAL(10,2),
HIGH_WATER_DEPTH_OUOM  VARCHAR(20),
INACTIVATION_DATE TIMESTAMP(0),
INCENT_CERT_NO INT,
ISSUE_DATE TIMESTAMP(0),
JURISDICTION  VARCHAR(20),
LAND_ACQTN_METHOD  VARCHAR(20),
LAND_CASE_ACTION  VARCHAR(20),
LAND_CASE_TYPE  VARCHAR(20),
LAND_DISTRICT  VARCHAR(20),
LAND_PROPERTY_TYPE  VARCHAR(20),
LAND_RIGHT_CATEGORY  VARCHAR(20),
LAND_SALE_NUMBER  VARCHAR(30),
LAND_SALE_OFFERING_ID  VARCHAR(20),
LAST_ACTION_DATE TIMESTAMP(0),
LESSOR_NAME  VARCHAR(30),
LESSOR_NUM  VARCHAR(30),
LESSOR_TYPE  VARCHAR(20),
LOW_WATER_DEPTH DECIMAL(10,2),
LOW_WATER_DEPTH_OUOM  VARCHAR(20),
MUNICIPALITY  VARCHAR(20),
OCCUPANT_NAME  VARCHAR(30),
OFFSHORE_DISTANCE DECIMAL(10,3),
OFFSHORE_DISTANCE_OUOM  VARCHAR(20),
OIL_SAND_DEPOSIT  VARCHAR(20),
OVERLAP_IND  VARCHAR(1),
PLATFORM_COUNT SMALLINT,
PPDM_GUID  VARCHAR(38),
PRIMARY_TERM SMALLINT,
PRIMARY_TERM_OUOM  VARCHAR(20),
PRODUCING_IND  VARCHAR(1),
PROPRIETARY_NUM  VARCHAR(30),
PROVINCE_STATE  VARCHAR(20),
QUALIFICATION_DATE TIMESTAMP(0),
RECLAMATION_CERT_NUM  VARCHAR(40),
RECLAMATION_END_DATE TIMESTAMP(0),
RECLAMATION_START_DATE TIMESTAMP(0),
RELINQUISHABLE_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
RENTAL_ALLOCATION_IND  VARCHAR(1),
REPORT_ACREAGE_IND  VARCHAR(1),
SCHEME_APPROVAL_NUM  VARCHAR(6),
SCHEME_EXPIRY_DATE TIMESTAMP(0),
SECONDARY_TERM SMALLINT,
SECONDARY_TERM_OUOM  VARCHAR(20),
SOURCE  VARCHAR(20),
SUBSURFACE_IND  VARCHAR(1),
SURFACE_IND  VARCHAR(1),
TERMIN_NOTICE_PERIOD SMALLINT,
TERMIN_NOTICE_PERIOD_OUOM  VARCHAR(20),
TERM_EXIRY_DATE TIMESTAMP(0),
UNIT_OPERATED_IND  VARCHAR(1),
WELL_QUALIFIC_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_APPLIC'
CREATE table land_right_applic (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
APPLICATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_BA_LIC'
CREATE table land_right_ba_lic (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
LICENSEE_BA_ID  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_COMPONENT'
CREATE table land_right_component (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_COMPONENT_TYPE  VARCHAR(20),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20)
,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_FACILITY'
CREATE table land_right_facility (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UNIT_OPERATED_IND  VARCHAR(1),
XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_FIELD'
CREATE table land_right_field (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
FIELD_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UNIT_OPERATED_IND  VARCHAR(1),
XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_INSTRUMENT'
CREATE table land_right_instrument (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
INSTRUMENT_ID  VARCHAR(20) NOT NULL,
LR_INST_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
DISCHARGE_DATE TIMESTAMP(0),
DISCHARGE_IND  VARCHAR(1),
DISCHARGE_INSTRUMENT_ID  VARCHAR(20),
DISCHARGE_NUM  VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_POOL'
CREATE table land_right_pool (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
POOL_ID  VARCHAR(20) NOT NULL,
OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UNIT_OPERATED_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_REST'
CREATE table land_right_rest (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_REST_REM'
CREATE table land_right_rest_rem (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
REMARK_ID  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
RESTRICTION_REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_WELL'
CREATE table land_right_well (
UWI  VARCHAR(20) NOT NULL,
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
LR_WELL_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
COMPLETION_OBS_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_PERCENT_PSU DECIMAL(15,12),
KEY_WELL_IND  VARCHAR(1),
OIL_PERCENT_PSU DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
PR_STR_FORM_OBS_NO INT,
PR_STR_SOURCE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPACING_COMPLETE_IND  VARCHAR(1),
SPACING_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
WELL_IN_TRACT_IND  VARCHAR(1),
WELL_RELATIONSHIP_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_RIGHT_WELL_SUBST'
CREATE table land_right_well_subst (
UWI  VARCHAR(20) NOT NULL,
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
LR_WELL_SEQ_NO INT,
SUBSTANCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_PSU DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE'
CREATE table land_sale (
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CLOSE_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_SALE_NAME  VARCHAR(240),
OPEN_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PUBLISH_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
SALE_DATE TIMESTAMP(0),
SOLD_SIZE DECIMAL(20,10),
SOLD_SIZE_OUOM  VARCHAR(20),
SOURCE  VARCHAR(20),
TOTAL_BONUS DECIMAL(12,2),
TOTAL_BONUS_OUOM  VARCHAR(20),
TOTAL_SIZE DECIMAL(20,10),
TOTAL_SIZE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_BA_SERVICE'
CREATE table land_sale_ba_service (
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID  VARCHAR(20) NOT NULL,
PROVIDED_BY  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_SERVICE_TYPE  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORGANIZATION_ID  VARCHAR(20),
ORGANIZATION_SEQ_NO INT,
PPDM_GUID  VARCHAR(38),
PROVIDED_FOR_BA_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SERVICE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_BID'
CREATE table land_sale_bid (
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID  VARCHAR(20) NOT NULL,
LAND_OFFERING_BID_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADDRESS_FOR_SERVICE  VARCHAR(20),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE  VARCHAR(20),
BIDDER  VARCHAR(20),
BIDDER_TYPE  VARCHAR(20),
BID_STATUS  VARCHAR(20),
BID_STATUS_DATE TIMESTAMP(0),
BID_SUBMIT_DATE TIMESTAMP(0),
BID_TYPE  VARCHAR(20),
CASH_BID_TYPE  VARCHAR(20),
CONFIDENTIAL_IND  VARCHAR(1),
CONTINGENCY_DESC  VARCHAR(240),
CONTINGENCY_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_INSTRUCTION_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRIORITY_ORDER SMALLINT,
REMARK  VARCHAR(2000),
RESPONSE  VARCHAR(240),
RESPONSE_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
SUCCESSFUL_IND  VARCHAR(1),
WORK_BID_IND  VARCHAR(1),
WORK_BID_REMARK  VARCHAR(240),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_BID_SET'
CREATE table land_sale_bid_set (
LAND_SALE_BID_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BID_STATUS  VARCHAR(20),
CONFIDENTIAL_IND  VARCHAR(1),
CONTINGENCY_DESC  VARCHAR(240),
CONTINGENCY_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SET_STATUS_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
SUCCESSFUL_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_BID_SET_BID'
CREATE table land_sale_bid_set_bid (
LAND_SALE_BID_SET_ID  VARCHAR(20) NOT NULL,
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID  VARCHAR(20) NOT NULL,
LAND_OFFERING_BID_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONFIDENTIAL_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_FEE'
CREATE table land_sale_fee (
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
RATE_SCHEDULE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_OFFERING'
CREATE table land_sale_offering (
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CANCEL_REASON  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM  VARCHAR(20),
INACTIVATION_DATE TIMESTAMP(0),
LAND_OFFERING_STATUS  VARCHAR(20),
LAND_OFFERING_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATUS_DATE TIMESTAMP(0),
TERM_DURATION SMALLINT,
TERM_DURATION_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_OFFERING_AREA'
CREATE table land_sale_offering_area (
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM  VARCHAR(20),
NET_SIZE DECIMAL(20,10),
NET_SIZE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_REQUEST'
CREATE table land_sale_request (
LAND_REQUEST_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADVANCE_BOOKING_IND  VARCHAR(1),
AMI_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BID_IND  VARCHAR(1),
BROKER_BA_ID  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
CRITICAL_DATE TIMESTAMP(0),
DRILLING_PRIORITY_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GRANTED_RIGHT_TYPE  VARCHAR(20),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM  VARCHAR(20),
INVESTIGATOR  VARCHAR(30),
JURISDICTION  VARCHAR(20),
LAND_REQ_STATUS  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LAND_SALE_OFFERING_ID  VARCHAR(20),
LESSOR_REFUSED_DATE TIMESTAMP(0),
ORIGINATOR_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREVIOUS_REQUEST_ID  VARCHAR(20),
PURPOSE  VARCHAR(240),
REFERENCE_NUM  VARCHAR(20),
REMARK  VARCHAR(2000),
REQUESTED_SALE_DATE TIMESTAMP(0),
REQUESTED_SALE_NAME  VARCHAR(240),
REQUESTER  VARCHAR(30),
REQUEST_CANCEL_DATE TIMESTAMP(0),
REQUEST_DESCRIPTION  VARCHAR(240),
REQUEST_RECEIVED_DATE TIMESTAMP(0),
REQUEST_SIZE DECIMAL(20,10),
REQUEST_SIZE_OUOM  VARCHAR(20),
REQUEST_TYPE  VARCHAR(20),
RESPONSE_DATE TIMESTAMP(0),
RESPONSE_DESC  VARCHAR(240),
SOURCE  VARCHAR(20),
SUBMITTED_DATE TIMESTAMP(0),
TERM_DURATION SMALLINT,
TERM_DURATION_OUOM  VARCHAR(20),
UWI  VARCHAR(20),
WELL_LICENSE_ID  VARCHAR(20),
WELL_SOURCE  VARCHAR(20),
WITHDRAWN_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_RESTRICTION'
CREATE table land_sale_restriction (
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_REST_REMARK'
CREATE table land_sale_rest_remark (
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID  VARCHAR(20) NOT NULL,
RESTRICTION_REMARK_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESTRICTION_REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SALE_WORK_BID'
CREATE table land_sale_work_bid (
JURISDICTION  VARCHAR(20) NOT NULL,
LAND_SALE_NUMBER  VARCHAR(30) NOT NULL,
LAND_SALE_OFFERING_ID  VARCHAR(20) NOT NULL,
LAND_OFFERING_BID_ID  VARCHAR(20) NOT NULL,
WORK_BID_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CRITICAL_DATE TIMESTAMP(0),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
WORK_BID_COUNT SMALLINT,
WORK_BID_COUNT_UOM  VARCHAR(20),
WORK_BID_TYPE  VARCHAR(20),
WORK_BID_VALUE DECIMAL(12,2),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_SIZE'
CREATE table land_size (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
SIZE_TYPE  VARCHAR(20) NOT NULL,
SIZE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
NET_SIZE DECIMAL(20,10),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SIZE_OUOM  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_STATUS'
CREATE table land_status (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
STATUS_TYPE  VARCHAR(20) NOT NULL,
LAND_RIGHT_STATUS  VARCHAR(20) NOT NULL,
STATUS_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EFFECTIVE_TERM  VARCHAR(240),
EFFECTIVE_TERM_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REASON  VARCHAR(240),
REMARK  VARCHAR(2000),
SECTION_OF_ACT  VARCHAR(240),
SECTION_OF_ACT_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
UNDETERMINED_TERM_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_TERMINATION'
CREATE table land_termination (
LR_TERMINATION_ID  VARCHAR(20) NOT NULL,
LR_TERMINATION_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_USER  VARCHAR(30),
JURISDICTION  VARCHAR(20),
LAND_REQUEST_ID  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LAND_SALE_OFFERING_ID  VARCHAR(20),
MINERAL_ZONE_ID  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
TERMINATION_REQMT  VARCHAR(20),
TERMINATION_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_TITLE'
CREATE table land_title (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CERTIFIED_DESC  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REGISTRATION_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TITLE_CHANGE_REASON  VARCHAR(20),
TITLE_HOLDER  VARCHAR(500),
TITLE_NUMBER  VARCHAR(30),
TITLE_REFERENCE_NUM  VARCHAR(30),
TITLE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_TRACT_FACTOR'
CREATE table land_tract_factor (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
TRACT_FACTOR_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SUBSTANCE  VARCHAR(20),
TRACT_FACTOR DECIMAL(15,12),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_UNIT'
CREATE table land_unit (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_UNIT_NAME  VARCHAR(100),
LAND_UNIT_NUMBER  VARCHAR(40),
LAND_UNIT_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_UNIT_TRACT'
CREATE table land_unit_tract (
LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_TRACT_TYPE  VARCHAR(20),
LAND_UNIT_TRACT_NAME  VARCHAR(100),
LAND_UNIT_TRACT_NUMBER  VARCHAR(40),
PERCENT_CROWN DECIMAL(15,12),
PERCENT_FREEHOLD DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LAND_XREF'
CREATE table land_xref (
PARENT_LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
PARENT_LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
CHILD_LAND_RIGHT_ID  VARCHAR(20) NOT NULL,
CHILD_LAND_RIGHT_TYPE  VARCHAR(30) NOT NULL,
LR_XREF_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_XREF_TYPE  VARCHAR(20),
PERCENT_ALLOCATION DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_CARTER_LOC'
CREATE table legal_carter_loc (
LEGAL_CARTER_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CARTER_RANGE DECIMAL(5,1),
CARTER_SECTION DECIMAL(5,1),
CARTER_TOWNSHIP  VARCHAR(3),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM  VARCHAR(20),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN  VARCHAR(20),
MAP_QUAD_MIN DECIMAL(3,1),
MAP_QUAD_NAME  VARCHAR(60),
NS_DIRECTION  VARCHAR(20),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM  VARCHAR(20),
NS_START_LINE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SCALED_FOOTAGE_IND  VARCHAR(1),
SPOT_CODE  VARCHAR(20),
UWI  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_CONGRESS_LOC'
CREATE table legal_congress_loc (
LEGAL_CONGRESS_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONGRESS_LOT_NUM  VARCHAR(20),
CONGRESS_RANGE DECIMAL(5,1),
CONGRESS_SECTION DECIMAL(5,1),
CONGRESS_SECTION_SUFFIX  VARCHAR(1),
CONGRESS_TOWNSHIP DECIMAL(6,1),
CONGRESS_TWP_NAME  VARCHAR(60),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM  VARCHAR(20),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM  VARCHAR(20),
NS_START_LINE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRINCIPAL_MERIDIAN  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SCALED_FOOTAGE_IND  VARCHAR(1),
SECTION_TYPE  VARCHAR(20),
SPOT_CODE  VARCHAR(20),
UWI  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_DLS_LOC'
CREATE table legal_dls_loc (
LEGAL_DLS_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
DLS_EVENT_SEQUENCE SMALLINT,
DLS_LEGAL_SUBDIVISION SMALLINT,
DLS_LOC_EXCEPTION  VARCHAR(2),
DLS_MERIDIAN SMALLINT,
DLS_MERIDIAN_DIRECTION  VARCHAR(1),
DLS_RANGE SMALLINT,
DLS_RANGE_MODIFIER  VARCHAR(1),
DLS_SECTION SMALLINT,
DLS_TOWNSHIP SMALLINT,
DLS_TOWNSHIP_MODIFIER  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
UWI  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_FPS_LOC'
CREATE table legal_fps_loc (
LEGAL_FPS_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FPS_EVENT_SEQUENCE SMALLINT,
FPS_LOC_EXCEPTION  VARCHAR(2),
GRID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_LATITUDE DECIMAL(14,9),
REFERENCE_LONGITUDE DECIMAL(14,9),
REMARK  VARCHAR(2000),
SECTION SMALLINT,
UNIT  VARCHAR(1),
UWI  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_GEODETIC_LOC'
CREATE table legal_geodetic_loc (
LEGAL_GEODETIC_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEODETIC_EVENT_SEQUENCE SMALLINT,
GEODETIC_LOC_EXCEPTION  VARCHAR(2),
LATITUDE DECIMAL(5,3),
LONGITUDE DECIMAL(6,3),
NODE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_LOC_REMARK'
CREATE table legal_loc_remark (
LEGAL_LOC_REMARK  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_PARCEL_TYPE  VARCHAR(20),
LEGAL_CARTER_LOC  VARCHAR(20),
LEGAL_CONGRESS_LOC  VARCHAR(20),
LEGAL_DLS_LOC  VARCHAR(20),
LEGAL_FPS_LOC  VARCHAR(20),
LEGAL_GEODETIC_LOC  VARCHAR(20),
LEGAL_NE_LOC  VARCHAR(20),
LEGAL_NORTH_SEA_LOC  VARCHAR(20),
LEGAL_NTS_LOC  VARCHAR(20),
LEGAL_OFFSHORE_LOC  VARCHAR(20),
LEGAL_OHIO_LOC  VARCHAR(20),
LEGAL_TEXAS_LOC  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_NE_LOC'
CREATE table legal_ne_loc (
LEGAL_NE_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM  VARCHAR(20),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN  VARCHAR(20),
NE_DISTRICT  VARCHAR(16),
NE_LOT_CODE  VARCHAR(20),
NE_MAP_QUAD_MIN DECIMAL(3,1),
NE_MAP_QUAD_NAME  VARCHAR(30),
NE_MAP_QUAD_SECTION  VARCHAR(2),
NE_TOWNSHIP_NAME  VARCHAR(30),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM  VARCHAR(20),
NS_START_LINE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REFERENCE_LATITUDE DECIMAL(12,7),
REFERENCE_LONGITUDE DECIMAL(12,7),
REMARK  VARCHAR(2000),
SCALED_FOOTAGE_IND  VARCHAR(1),
UWI  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_NORTH_SEA_LOC'
CREATE table legal_north_sea_loc (
LEGAL_NORTH_SEA_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BLOCK_NO SMALLINT,
BLOCK_SUFFIX  VARCHAR(2),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_WELL_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PRINCIPAL_MERIDIAN  VARCHAR(20),
QUADRANT SMALLINT,
QUADRANT_PREFIX  VARCHAR(2),
REMARK  VARCHAR(2000),
UWI  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
WELL_NO_PREFIX  VARCHAR(4),
WELL_NO_SUFFIX  VARCHAR(6),
WELL_SEQ_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_NTS_LOC'
CREATE table legal_nts_loc (
LEGAL_NTS_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BLOCK  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EVENT_SEQUENCE SMALLINT,
EXPIRY_DATE TIMESTAMP(0),
LETTER_QUADRANGLE  VARCHAR(1),
NTS_LOC_EXCEPTION  VARCHAR(2),
PPDM_GUID  VARCHAR(38),
PRIMARY_QUADRANGLE SMALLINT,
QUARTER_UNIT  VARCHAR(1),
REMARK  VARCHAR(2000),
SIXTEENTH SMALLINT,
UNIT SMALLINT,
UWI  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_OFFSHORE_LOC'
CREATE table legal_offshore_loc (
LEGAL_OFFSHORE_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BLOCK_ADDITION  VARCHAR(1),
BLOCK_MODIFIER  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM  VARCHAR(20),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN  VARCHAR(20),
GOVERNING_AGENCY_BA_ID  VARCHAR(20),
GRID_BLOCK_EW  VARCHAR(20),
GRID_BLOCK_NS  VARCHAR(20),
GRID_BLOCK_RANGE SMALLINT,
GRID_BLOCK_TIER SMALLINT,
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM  VARCHAR(20),
NS_START_LINE  VARCHAR(20),
OCS_NUM  VARCHAR(8),
OFFSHORE_AREA_CODE  VARCHAR(20),
OFFSHORE_BLOCK  VARCHAR(6),
PPDM_GUID  VARCHAR(38),
PROJECTED_EW_DIRECTION  VARCHAR(20),
PROJECTED_MERIDIAN  VARCHAR(20),
PROJECTED_NS_DIRECTION  VARCHAR(20),
PROJECTED_RANGE DECIMAL(5,1),
PROJECTED_SECTION DECIMAL(5,1),
PROJECTED_TOWNSHIP DECIMAL(6,1),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SCALED_FOOTAGE_IND  VARCHAR(1),
UTM_QUADRANT  VARCHAR(7),
UWI  VARCHAR(20),
WATER_BOTTOM_ZONE  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_OHIO_LOC'
CREATE table legal_ohio_loc (
LEGAL_OHIO_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM  VARCHAR(20),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN  VARCHAR(20),
MAP_QUAD_MIN DECIMAL(3,1),
MAP_QUAD_NAME  VARCHAR(30),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM  VARCHAR(20),
NS_START_LINE  VARCHAR(20),
OHIO_TOWNSHIP_NAME  VARCHAR(30),
OHIO_TWP_LOT_CODE  VARCHAR(20),
OHIO_TWP_SECTION_CODE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRINCIPAL_MERIDIAN  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SCALED_FOOTAGE_IND  VARCHAR(1),
SPOT_CODE  VARCHAR(20),
UWI  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LEGAL_TEXAS_LOC'
CREATE table legal_texas_loc (
LEGAL_TEXAS_LOC  VARCHAR(20) NOT NULL,
LOCATION_TYPE  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ABSTRACT_NUM  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
BLOCK_FRACTION  VARCHAR(3),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_FOOTAGE DECIMAL(7,2),
EW_FOOTAGE_OUOM  VARCHAR(20),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FOOTAGE_ORIGIN  VARCHAR(20),
LABOR  VARCHAR(4),
LEAGUE  VARCHAR(4),
NS_DIRECTION  VARCHAR(20),
NS_FOOTAGE DECIMAL(7,2),
NS_FOOTAGE_OUOM  VARCHAR(20),
NS_START_LINE  VARCHAR(20),
PORCION_NUM  VARCHAR(30),
PORCION_SURVEY_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SCALED_FOOTAGE_IND  VARCHAR(1),
SECTION_FRACTION  VARCHAR(3),
SPOT_CODE  VARCHAR(20),
TEXAS_BLOCK  VARCHAR(4),
TEXAS_LOT  VARCHAR(4),
TEXAS_SECTION  VARCHAR(4),
TEXAS_SHARE  VARCHAR(30),
TEXAS_SUBDIVISION  VARCHAR(4),
TEXAS_SURVEY  VARCHAR(60),
TEXAS_TOWNSHIP DECIMAL(4,1),
UWI  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_COMPONENT'
CREATE table lith_component (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE  VARCHAR(20) NOT NULL,
ROCK_TYPE_OBS_NO INT,
COMPONENT_NAME  VARCHAR(12) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPONENT_PERCENT SMALLINT,
COMPONENT_REL_ABUNDANCE  VARCHAR(20),
COMPONENT_TEXTURE  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LITH_PATTERN_CODE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_COMPONENT_COLOR'
CREATE table lith_component_color (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE  VARCHAR(20) NOT NULL,
ROCK_TYPE_OBS_NO INT,
COMPONENT_NAME  VARCHAR(12) NOT NULL,
BASIC_COLOR  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COLOR_ADJECTIVE  VARCHAR(20),
COLOR_DISTRIBUTION  VARCHAR(20),
DOMINANT_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTENSITY  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
WEATHERED_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_COMP_GRAIN_SIZE'
CREATE table lith_comp_grain_size (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
SCALE_SCHEME  VARCHAR(20) NOT NULL,
ROCK_TYPE  VARCHAR(20) NOT NULL,
ROCK_TYPE_OBS_NO INT,
COMPONENT_NAME  VARCHAR(12) NOT NULL,
GRAIN_SIZE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DISTRIBUTION_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SIZE_TYPE_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_DEP_ENV_INT'
CREATE table lith_dep_env_int (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
DEPOSITIONAL_ENVIRONMENT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_DESC_OTHER'
CREATE table lith_desc_other (
LITH_SAMPLE_ID  VARCHAR(20) NOT NULL,
DESCRIPTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
DESCRIPTION_TYPE  VARCHAR(20),
DESCRIPTION_VALUE_1 DECIMAL(10,5),
DESCRIPTION_VALUE_2 DECIMAL(10,5),
DESCRIPTION_VALUE_OUOM  VARCHAR(20),
DESCRIPTION_VALUE_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_DIAGENESIS'
CREATE table lith_diagenesis (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE  VARCHAR(20) NOT NULL,
ROCK_TYPE_OBS_NO INT,
DIAGENESIS_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DIAGENESIS_PERCENT SMALLINT,
DIAGENESIS_REL_ABUNDANCE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_GRAIN_SIZE'
CREATE table lith_grain_size (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE  VARCHAR(20) NOT NULL,
ROCK_TYPE_OBS_NO INT,
SCALE_SCHEME  VARCHAR(20) NOT NULL,
GRAIN_SIZE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DISTRIBUTION_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SIZE_TYPE_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_INTERVAL'
CREATE table lith_interval (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
CYCLE_BED  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_DATA_DESC  VARCHAR(20),
PARENT_DEPTH_OBS_NO INT,
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SAMPLE_ID  VARCHAR(20),
SAMPLE_QUALITY  VARCHAR(20),
STRUCTURE_TYPE  VARCHAR(20),
THIN_BED_IND  VARCHAR(1),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_LOG'
CREATE table lith_log (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOLOGIST  VARCHAR(20),
LITH_LOG_CLASS  VARCHAR(20),
LITH_LOG_TYPE  VARCHAR(20),
LOGGED_DATE TIMESTAMP(0),
MEAS_SECTION_ID  VARCHAR(20),
MEAS_SECTION_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_LOG_BA_SERVICE'
CREATE table lith_log_ba_service (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
PROVIDED_BY  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_SERVICE_TYPE  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
CONTRACT_PROVISION_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SERVICE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_LOG_COMPONENT'
CREATE table lith_log_component (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITH_LOG_COMPONENT_TYPE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20)
,
WELL_ACTIVITY_UWI  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_LOG_REMARK'
CREATE table lith_log_remark (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_BA_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_MEASURED_SEC'
CREATE table lith_measured_sec (
MEAS_SECTION_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AUTHOR  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCATION_DESC  VARCHAR(60),
LOCATION_QUALIFIER  VARCHAR(20),
NODE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PUBLICATION_REFERENCE  VARCHAR(20),
REFERENCE_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_POROSITY'
CREATE table lith_porosity (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE  VARCHAR(20) NOT NULL,
ROCK_TYPE_OBS_NO INT,
POROSITY_GRADE SMALLINT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MATRIX_CLASS  VARCHAR(20),
PERCENT_OF_SAMPLE SMALLINT,
POROSITY_SCALE  VARCHAR(20),
POROSITY_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SAMPLE_REL_ABUNDANCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_ROCK_COLOR'
CREATE table lith_rock_color (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE  VARCHAR(20) NOT NULL,
ROCK_TYPE_OBS_NO INT,
BASIC_COLOR  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COLOR_ADJECTIVE  VARCHAR(20),
COLOR_DISTRIBUTION  VARCHAR(20),
DOMINANT_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTENSITY  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
WEATHERED_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_ROCK_STRUCTURE'
CREATE table lith_rock_structure (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE  VARCHAR(20) NOT NULL,
ROCK_TYPE_OBS_NO INT,
STRUCTURE_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BOUNDARY_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRUCTURE_REL_ABUND  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_ROCK_TYPE'
CREATE table lith_rock_type (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ROCK_TYPE  VARCHAR(20) NOT NULL,
ROCK_TYPE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CLASS  VARCHAR(20),
CLASS_MODIFIER  VARCHAR(20),
CONSOLIDATION  VARCHAR(20),
CUT_COLOR  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUORESCENCE_COLOR  VARCHAR(20),
FLUORESCENCE_DISTRIBUTION  VARCHAR(20),
FLUORESCENCE_RATE  VARCHAR(20),
FRAMEWORK_PERCENT SMALLINT,
MATRIX_PERCENT SMALLINT,
OIL_STAIN  VARCHAR(20),
PERMEABILITY_QUALITY  VARCHAR(20),
POROSITY_GRADE_PERCENT SMALLINT,
PPDM_GUID  VARCHAR(38),
PRIM_POROSITY_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
RESIDUE_COLOR  VARCHAR(20),
RESIDUE_PERCENT SMALLINT,
ROCK_CLASS_SCHEME  VARCHAR(20),
ROCK_MATRIX  VARCHAR(20),
ROCK_PROFILE  VARCHAR(20),
ROCK_REL_ABUNDANCE  VARCHAR(20),
ROCK_TYPE_PERCENT SMALLINT,
ROUNDING  VARCHAR(20),
SEC_POROSITY_TYPE  VARCHAR(20),
SOLID_HCARBON_PERCENT SMALLINT,
SOLID_HCARBON_TYPE  VARCHAR(20),
SORTING  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_SAMPLE'
CREATE table lith_sample (
LITH_SAMPLE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_MD DECIMAL(10,5),
BASE_MD_OUOM  VARCHAR(20),
COLLECTED_DATE TIMESTAMP(0),
COMPOSITE_SAMPLE_IND  VARCHAR(1),
CONDENSED_SECTION_IND  VARCHAR(1),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
DESTROYED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_WEIGHT DECIMAL(10,5),
FINAL_WEIGHT_OUOM  VARCHAR(20),
INITIAL_WEIGHT DECIMAL(10,5),
INITIAL_WEIGHT_OUOM  VARCHAR(20),
INTERVAL_PERCENT DECIMAL(6,3),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
PHYSICAL_ITEM_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUM  VARCHAR(255),
REMARK  VARCHAR(2000),
SAMPLE_COUNT BIGINT,
SAMPLE_DIAMETER DECIMAL(8,3),
SAMPLE_DIAMETER_OUOM  VARCHAR(20),
SAMPLE_INTERVAL DECIMAL(10,5),
SAMPLE_INTERVAL_OUOM  VARCHAR(20),
SAMPLE_LAT DECIMAL(14,9),
SAMPLE_LONG DECIMAL(14,9),
SAMPLE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
TOP_MD DECIMAL(10,5),
TOP_MD_OUOM  VARCHAR(20),
TOTAL_LENGTH DECIMAL(10,5),
TOTAL_LENGTH_OUOM  VARCHAR(20),
TOTAL_VOLUME DECIMAL(14,4),
TOTAL_VOLUME_OUOM  VARCHAR(20),
WELL_DATUM_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_SAMPLE_COLLECTION'
CREATE table lith_sample_collection (
LITH_SAMPLE_ID  VARCHAR(20) NOT NULL,
COLLECTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COLLECTED_BY  VARCHAR(20),
COLLECTED_FOR  VARCHAR(20),
COLLECT_METHOD  VARCHAR(20),
CORE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_STATION_ID BIGINT,
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LITH_SAMPLE_PART_ID  VARCHAR(20),
LITH_SAMPLE_SOURCE  VARCHAR(20),
MEAS_SECTION_ID  VARCHAR(20),
MEAS_SECTION_SOURCE  VARCHAR(20),
MUD_SAMPLE_ID  VARCHAR(20),
PORTION_DIAMETER DECIMAL(8,3),
PORTION_DIAMETER_OUOM  VARCHAR(20),
PORTION_LENGTH DECIMAL(10,5),
PORTION_LENGTH_OUOM  VARCHAR(20),
PORTION_WEIGHT DECIMAL(10,5),
PORTION_WEIGHT_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
WELL_CORE_ID  VARCHAR(20),
WELL_SOURCE  VARCHAR(20),
WELL_SURVEY_ID  VARCHAR(20),
WELL_SURVEY_SOURCE  VARCHAR(20),
WELL_UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_SAMPLE_DESC'
CREATE table lith_sample_desc (
LITH_SAMPLE_ID  VARCHAR(20) NOT NULL,
DESCRIPTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DEPOSITIONAL_ENVIRONMENT  VARCHAR(20),
DIAGENESIS_TYPE  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LITHOLOGY  VARCHAR(20),
LITH_COLOR  VARCHAR(20),
LITH_COLOR_INTENSITY  VARCHAR(20),
LITH_CONTAMINANT  VARCHAR(20),
OIL_STAIN  VARCHAR(20),
PERMEABILITY  VARCHAR(20),
POROSITY_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROCK_MATRIX  VARCHAR(20),
ROCK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_SAMPLE_PREP'
CREATE table lith_sample_prep (
LITH_SAMPLE_ID  VARCHAR(20) NOT NULL,
PREPARATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPLETE_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREPARATION_CLASS  VARCHAR(20),
PREPARATION_METHOD  VARCHAR(20),
PREPARED_BY  VARCHAR(20),
PREPARED_LAB_BA_ID  VARCHAR(20),
RECOVERED_PERCENT DECIMAL(6,3),
REMARK  VARCHAR(2000),
SAMPLE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
STEP_DESC  VARCHAR(2000),
STEP_SEQ_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_SAMPLE_PREP_METH'
CREATE table lith_sample_prep_meth (
PREPARATION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PREPARATION_CLASS  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE LITH_STRUCTURE'
CREATE table lith_structure (
LITHOLOGY_LOG_ID  VARCHAR(20) NOT NULL,
LITH_LOG_SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
STRUCTURE_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BOUNDARY_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRUCTURE_REL_ABUND  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE NOTIFICATION'
CREATE table notification (
NOTIFICATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
CONTRACT_IND  VARCHAR(1),
CRITICAL_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_IND  VARCHAR(1),
LAND_RIGHT_TYPE  VARCHAR(30),
NOTIFICATION_TYPE  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_IND  VARCHAR(1),
OBLIGATION_SEQ_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SERVED_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE NOTIFICATION_COMPONENT'
CREATE table notification_component (
NOTIFICATION_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_COMPONENT_TYPE  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20)
,
WELL_ACTIVITY_UWI  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE NOTIF_BA'
CREATE table notif_ba (
NOTIFICATION_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RECEIVED_DATE TIMESTAMP(0),
RECEIVED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
RESPONSE  VARCHAR(240),
SERVED_DATE TIMESTAMP(0),
SERVED_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIGATION'
CREATE table obligation (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CALCULATION_METHOD  VARCHAR(20),
CONVERTIBLE_IND  VARCHAR(1),
CRITICAL_DATE TIMESTAMP(0),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND  VARCHAR(1),
GROSS_OBLIGATION_COST DECIMAL(12,2),
INSTRUMENT_ID  VARCHAR(20),
LIABILITY_RELEASE_DATE TIMESTAMP(0),
NET_OBLIGATION_COST DECIMAL(12,2),
NOTICE_PERIOD_LENGTH SMALLINT,
NOTICE_PERIOD_OUOM  VARCHAR(20),
OBLIGATION_CATEGORY  VARCHAR(20),
OBLIGATION_DURATION SMALLINT,
OBLIGATION_DURATION_OUOM  VARCHAR(20),
OBLIGATION_FREQUENCY  VARCHAR(20),
OBLIGATION_TYPE  VARCHAR(20),
PAYMENT_IND  VARCHAR(1),
PAYMENT_RESPONSIBILITY  VARCHAR(20),
PERCENTAGE DECIMAL(15,12),
POTENTIAL_OBLIGATION_DESC  VARCHAR(2000),
POTENTIAL_OBLIGATION_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PREPAID_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
RESP_PARTY_BA_ID  VARCHAR(20),
REVIEW_FREQUENCY  VARCHAR(20),
ROYALTY_OWNER_BA_ID  VARCHAR(20),
ROYALTY_PAYOR_BA_ID  VARCHAR(20),
ROYALTY_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
SUBSTANCE  VARCHAR(20),
TRIGGER_METHOD  VARCHAR(20),
WORK_OBLIGATION_DESC  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIGATION_COMPONENT'
CREATE table obligation_component (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BA_SERVICE_BA_ID  VARCHAR(20),
BA_SERVICE_PROVIDER  VARCHAR(20),
BA_SERVICE_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CALCULATION_METHOD  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_REASON  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_EXTENSION_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
CONTRACT_PROVISION_ID  VARCHAR(20),
CONT_SERVICE_BA_ID  VARCHAR(20),
CONT_SERVICE_SEQ_NO INT,
CRITICAL_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(240),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_LICENSE_ID  VARCHAR(20),
FACILITY_SERVICE_BA_ID  VARCHAR(20),
FACILITY_SERVICE_SEQ_NO INT,
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND  VARCHAR(1),
FULFILLED_REMARK  VARCHAR(2000),
HSE_INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
LAND_COST_ID  VARCHAR(20),
LAND_OFFERING_BID_ID  VARCHAR(20),
LAND_REQUEST_ID  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_BID_SET_ID  VARCHAR(20),
LAND_SALE_JURISDICTION  VARCHAR(20),
LAND_SALE_NUMBER  VARCHAR(30),
LAND_SALE_OFFERING_ID  VARCHAR(20),
LAND_SERVICE_PROVIDED_BY  VARCHAR(20),
LAND_SERVICE_SEQ_NO INT,
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
LR_TERMINATION_ID  VARCHAR(20),
LR_TERMINATION_SEQ_NO INT,
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_COMPONENT_TYPE  VARCHAR(20),
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20)
,
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_LICENSE_ID  VARCHAR(20),
SEIS_POINT_FLOW_ID  VARCHAR(20),
SEIS_POINT_ID  VARCHAR(16),
SEIS_SERVICE_BA_ID  VARCHAR(20),
SEIS_SERVICE_SEQ_NO INT,
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SEIS_TRANSACTION_ID  VARCHAR(20),
SEIS_TRANSACTION_TYPE  VARCHAR(20),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_LICENSE_ID  VARCHAR(20),
WELL_LICENSE_SOURCE  VARCHAR(20),
WELL_SERVICE_BA_ID  VARCHAR(20),
WELL_SERVICE_SEQ_NO INT,
WORK_ORDER_DELIVERY_ID  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_ALLOW_DEDUCTION'
CREATE table oblig_allow_deduction (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
ALLOW_DEDUCTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALLOW_DEDUCTION_TYPE  VARCHAR(20),
ALLOW_DEDUCT_REMARK  VARCHAR(2000),
CONTRACT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_BA_SERVICE'
CREATE table oblig_ba_service (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
PROVIDED_BY  VARCHAR(20) NOT NULL,
OBLIG_SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CONTACT_BA_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVIDED_FOR  VARCHAR(20),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SERVICE_QUALITY  VARCHAR(20),
SERVICE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_CALC'
CREATE table oblig_calc (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
CALCULATION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CALCULATION_FORMULA  VARCHAR(2000),
CALCULATION_METHOD  VARCHAR(20),
CALCULATION_POINT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SUBSTANCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_DEDUCTION'
CREATE table oblig_deduction (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
DEDUCTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALLOW_DEDUCTION_ID  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
DEDUCTION_AMOUNT DECIMAL(12,2),
DEDUCTION_PERCENT DECIMAL(15,12),
DEDUCT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DEDUCTION_ALLOWED DECIMAL(12,2),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROYALTY_AMOUNT DECIMAL(12,2),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_DEDUCT_CALC'
CREATE table oblig_deduct_calc (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
DEDUCTION_ID  VARCHAR(20) NOT NULL,
CALCULATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CALCULATION_FORMULA  VARCHAR(2000),
CALCULATION_METHOD  VARCHAR(20),
CALCULATION_POINT  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SUBSTANCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_PAYMENT'
CREATE table oblig_payment (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
PAYEE_PAYOR_BA_ID  VARCHAR(20) NOT NULL,
PAYEE_PAYOR  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CHEQUE_REMARK  VARCHAR(2000),
CONTRACT_ID  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_COST DECIMAL(12,2),
INVOICE_AMOUNT DECIMAL(12,2),
INVOICE_NUM  VARCHAR(20),
LAND_RENTAL_TYPE  VARCHAR(20),
NET_COST DECIMAL(12,2),
PAYMENT_DUE_DATE TIMESTAMP(0),
PAYMENT_IND  VARCHAR(1),
PAYMENT_INSTRUCTION_ID  VARCHAR(20),
PAYMENT_TYPE  VARCHAR(20),
PAY_METHOD  VARCHAR(20),
PERCENT_OF_GROSS DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
RATE_TYPE  VARCHAR(20),
RECEIPT_IND  VARCHAR(1),
RELATED_OBLIGATION_ID  VARCHAR(20),
RELATED_OBLIGATION_SEQ_NO INT,
RELATED_OBLIG_BA_ID  VARCHAR(20),
RELATED_OBLIG_PAYEE_PAYOR  VARCHAR(20),
REMARK  VARCHAR(2000),
ROYALTY_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
STOP_PAYMENT_IND  VARCHAR(1),
SUBSTANCE  VARCHAR(20),
SUBSTANCE_SEQ_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_PAYMENT_INSTR'
CREATE table oblig_payment_instr (
PAYEE_BA_ID  VARCHAR(20) NOT NULL,
PAYMENT_INSTRUCTION_ID  VARCHAR(20) NOT NULL,
ABA_NUMBER  VARCHAR(30),
ACTIVE_IND  VARCHAR(1),
BANK_ADDRESS_OBS_NO INT,
BANK_ADDRESS_SOURCE  VARCHAR(20),
BANK_BA_ID  VARCHAR(20),
BANK_FEE DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
DEPOSITORY_NUM  VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INVALID_DATE TIMESTAMP(0),
PAY_METHOD  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SUSPEND_PAYMENT_IND  VARCHAR(1),
SUSPEND_PAYMENT_REASON  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_PAYMENT_RATE'
CREATE table oblig_payment_rate (
JURISDICTION  VARCHAR(20) NOT NULL,
PAY_RATE_TYPE  VARCHAR(20) NOT NULL,
PAYMENT_RATE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONTRACT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_RATE DECIMAL(12,2),
PAYMENT_RATE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RATE_PERCENT DECIMAL(15,12),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_PAY_DETAIL'
CREATE table oblig_pay_detail (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
PAYEE_PAYOR_BA_ID  VARCHAR(20) NOT NULL,
PAYEE_PAYOR  VARCHAR(20) NOT NULL,
DETAIL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CHEQUE_NUMBER  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
DEDUCTION_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_AMOUNT DECIMAL(12,2),
PAYMENT_DATE TIMESTAMP(0),
PAY_DETAIL_TYPE  VARCHAR(20),
PERCENT_OF_PAYMENT DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
RATE DECIMAL(12,2),
RATE_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_REMARK'
CREATE table oblig_remark (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_SUBSTANCE'
CREATE table oblig_substance (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
SUBSTANCE  VARCHAR(20) NOT NULL,
SUBSTANCE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CONTRACT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUDED_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUDED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_TYPE'
CREATE table oblig_type (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
LAND_OBLIG_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAND_OBLIG_CATEGORY  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE OBLIG_XREF'
CREATE table oblig_xref (
OBLIGATION_ID  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO INT,
OBLIGATION_ID_2  VARCHAR(20) NOT NULL,
OBLIGATION_SEQ_NO_2 INT,
XREF_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OBLIG_XREF_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_ABUND_QUALIFIER'
CREATE table paleo_abund_qualifier (
QUALIFIER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
QUALIFIER_CODE  VARCHAR(12),
QUALIFIER_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_ABUND_SCHEME'
CREATE table paleo_abund_scheme (
SCHEME_ID  VARCHAR(20) NOT NULL,
ABUND_QUALIFIER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_COUNT INT,
MIN_COUNT INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SCHEME_OWNER_BA_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_CLIMATE'
CREATE table paleo_climate (
CLIMATE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CLIMATE_NAME  VARCHAR(255),
CLIMATE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_CONFIDENCE'
CREATE table paleo_confidence (
CONFIDENCE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONFIDENCE_CODE  VARCHAR(12),
CONFIDENCE_NAME  VARCHAR(30),
CONFIDENCE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_FOSSIL_IND'
CREATE table paleo_fossil_ind (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
FOSSIL_DETAIL_ID  VARCHAR(20) NOT NULL,
FOSSIL_ID  VARCHAR(20) NOT NULL,
INDICATOR_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INDICATOR_DESC  VARCHAR(2000),
INDICATOR_IND  VARCHAR(1),
INDICATOR_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_FOSSIL_INTERP'
CREATE table paleo_fossil_interp (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
DETAIL_ID  VARCHAR(20) NOT NULL,
FOSSIL_DETAIL_ID  VARCHAR(20) NOT NULL,
FOSSIL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_FOSSIL_LIST'
CREATE table paleo_fossil_list (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
FOSSIL_DETAIL_ID  VARCHAR(20) NOT NULL,
FOSSIL_ID  VARCHAR(20) NOT NULL,
ABUNDANCE_COUNT DECIMAL(10,5),
ABUNDANCE_QUALIFIER_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
CONFIDENCE_ID  VARCHAR(20),
DEPTH DECIMAL(10,5),
DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOSSIL_COLOR  VARCHAR(20),
LITH_SAMPLE_ID  VARCHAR(20),
ONTOGENY_TYPE  VARCHAR(20),
PALEO_ANALYST_BA_ID  VARCHAR(20),
PHYSICAL_ITEM_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PRESERVATION_QUALITY  VARCHAR(20),
PRESERVATION_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SLIDE_LOC_X  VARCHAR(20),
SLIDE_LOC_Y  VARCHAR(20),
SLIDE_NUM  VARCHAR(20),
SOURCE  VARCHAR(20),
TAI_ID  VARCHAR(20),
TYPE_FOSSIL_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_FOSSIL_OBS'
CREATE table paleo_fossil_obs (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
FOSSIL_DETAIL_ID  VARCHAR(20) NOT NULL,
FOSSIL_ID  VARCHAR(20) NOT NULL,
OBSERVATION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOSSIL_OBS_TYPE  VARCHAR(20),
OBSERVATION  VARCHAR(2000),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_INTERP'
CREATE table paleo_interp (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
DETAIL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_MD DECIMAL(10,5),
CLIMATE_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
ECOZONE_CONFIDENCE_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
ECOZONE_QUALIFIER_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FROM_REL_STRAT_NAME_SET_ID  VARCHAR(20),
FROM_REL_STRAT_UNIT_ID  VARCHAR(20),
FROM_STRAT_NAME_SET_ID  VARCHAR(20),
FROM_STRAT_UNIT_ID  VARCHAR(20),
INTERP_TYPE  VARCHAR(20),
LITHOLOGY_TYPE  VARCHAR(20),
LITH_STRUCTURE  VARCHAR(20),
PALEO_CONFIDENCE_ID  VARCHAR(20),
PALEO_QUALIFIER_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TAI_ID  VARCHAR(20),
TOP_MD DECIMAL(10,5),
TO_REL_STRAT_NAME_SET_ID  VARCHAR(20),
TO_REL_STRAT_UNIT_ID  VARCHAR(20),
TO_STRAT_NAME_SET_ID  VARCHAR(20),
TO_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_OBS_QUALIFIER'
CREATE table paleo_obs_qualifier (
QUALIFIER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
QUALIFIER_CODE  VARCHAR(12),
QUALIFIER_LONG_NAME  VARCHAR(255),
QUALIFIER_OWNER  VARCHAR(20),
QUALIFIER_SHORT_NAME  VARCHAR(30),
QUALIFIER_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_SUMMARY'
CREATE table paleo_summary (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
ACCESS_CONDITION  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
ANALYSIS_END_DATE TIMESTAMP(0),
ANALYSIS_START_DATE TIMESTAMP(0),
CONFIDENTIAL_IND  VARCHAR(1),
CONFIDENTIAL_REASON  VARCHAR(20),
CONFIDENTIAL_RELEASE_DATE TIMESTAMP(0),
CONFIDENTIAL_TERM  VARCHAR(240),
CONFIDENTIAL_TYPE  VARCHAR(20),
DIVERSITY_COUNT DECIMAL(12,3),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PRESERVATION_QUALITY  VARCHAR(20),
REFERENCE_NUM  VARCHAR(60),
REMARK  VARCHAR(2000),
REPORT_DATE TIMESTAMP(0),
REPORT_TITLE  VARCHAR(240),
SOURCE  VARCHAR(20),
TOTAL_SAMPLE_INTERVAL DECIMAL(10,5),
TOTAL_SAMPLE_INTERVAL_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_SUM_AUTHOR'
CREATE table paleo_sum_author (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
AUTHOR_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AUTHOR_BA_ID  VARCHAR(20),
AUTHOR_DESC  VARCHAR(240),
AUTHOR_SEQ_NO INT,
AUTHOR_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_SUM_COMP'
CREATE table paleo_sum_comp (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
PALEO_COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
ECOZONE_SET_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FIELD_STATION_ID BIGINT,
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
MEAS_SECTION_ID  VARCHAR(20),
MEAS_SECTION_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_COMPONENT_TYPE  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20)
,
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_SUM_INTERVAL'
CREATE table paleo_sum_interval (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
INTERVAL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERVAL_DESC  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_SUM_SAMPLE'
CREATE table paleo_sum_sample (
PALEO_SUMMARY_ID  VARCHAR(20) NOT NULL,
LITH_SAMPLE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DIVERSITY_COUNT INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_SAMPLE_IND  VARCHAR(1),
LAST_SAMPLE_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_SUM_XREF'
CREATE table paleo_sum_xref (
PALEO_SUMMARY_ID1  VARCHAR(20) NOT NULL,
PALEO_SUMMARY_ID2  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PALEO_XREF_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PALEO_THERMAL_ALT_IND'
CREATE table paleo_thermal_alt_ind (
TAI_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
TAI_CODE  VARCHAR(12),
TAI_COLOR  VARCHAR(20),
TAI_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN'
CREATE table pden (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
CURRENT_OPERATOR  VARCHAR(20),
CURRENT_PROD_STR_NAME  VARCHAR(60),
CURRENT_STATUS_DATE TIMESTAMP(0),
CURRENT_WELL_STR_NUMBER  VARCHAR(20),
DISTRICT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ENHANCED_RECOVERY_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID  VARCHAR(20),
GEOGRAPHIC_REGION  VARCHAR(20),
GEOLOGIC_PROVINCE  VARCHAR(20),
LAST_INJECTION_DATE TIMESTAMP(0),
LAST_PRODUCTION_DATE TIMESTAMP(0),
LAST_REPORTED_DATE TIMESTAMP(0),
LOCATION_DESC  VARCHAR(40),
LOCATION_DESC_TYPE  VARCHAR(20),
ON_INJECTION_DATE TIMESTAMP(0),
ON_PRODUCTION_DATE TIMESTAMP(0),
PDEN_NAME  VARCHAR(60),
PDEN_SHORT_NAME  VARCHAR(30),
PDEN_STATUS  VARCHAR(20),
PDEN_STATUS_TYPE  VARCHAR(20),
PLOT_NAME  VARCHAR(20),
PLOT_SYMBOL  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRIMARY_PRODUCT  VARCHAR(20),
PRODUCTION_METHOD  VARCHAR(20),
PROPRIETARY_IND  VARCHAR(1),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
STATE_OR_FEDERAL_WATERS  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_SERIAL_NUMBER  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_ALLOC_FACTOR'
CREATE table pden_alloc_factor (
FROM_PDEN_ID  VARCHAR(40) NOT NULL,
FROM_PDEN_TYPE  VARCHAR(30) NOT NULL,
FROM_PDEN_SOURCE  VARCHAR(20) NOT NULL,
TO_PDEN_ID  VARCHAR(40) NOT NULL,
TO_PDEN_TYPE  VARCHAR(30) NOT NULL,
TO_PDEN_SOURCE  VARCHAR(20) NOT NULL,
ALLOCATION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_TYPE  VARCHAR(20),
ALLOCATION_FACTOR DECIMAL(10,5),
ALLOCATION_TYPE  VARCHAR(20),
BUSINESS_RULE  VARCHAR(240),
CALCULATED_FROM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRODUCT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VOLUME_METHOD  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_AREA'
CREATE table pden_area (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_BUSINESS_ASSOC'
CREATE table pden_business_assoc (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_COMPONENT'
CREATE table pden_component (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_COMPONENT_TYPE  VARCHAR(20),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20)
,
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_DECLINE_CASE'
CREATE table pden_decline_case (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
CASE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CASE_NAME  VARCHAR(255),
DECLINE_CURVE_TYPE  VARCHAR(20),
DECLINE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_DECLINE DECIMAL(10,6),
FINAL_RATE DECIMAL(14,4),
INITIAL_DECLINE DECIMAL(10,6),
INITIAL_RATE DECIMAL(14,4),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
VOLUME DECIMAL(16,4),
VOLUME_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_DECLINE_CONDITION'
CREATE table pden_decline_condition (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
CASE_ID  VARCHAR(20) NOT NULL,
CONDITION_ID  VARCHAR(20) NOT NULL,
PERIOD_TYPE  VARCHAR(20) NOT NULL,
VOLUME_DATE  VARCHAR(12) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_CODE  VARCHAR(20),
CONDITION_DESC  VARCHAR(240),
CONDITION_TYPE  VARCHAR(20),
CONDITION_VALUE DECIMAL(15,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_DECLINE_SEGMENT'
CREATE table pden_decline_segment (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
CASE_ID  VARCHAR(20) NOT NULL,
SEGMENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DECLINE_CURVE_TYPE  VARCHAR(20),
DECLINE_TYPE  VARCHAR(20),
DURATION BIGINT,
DURATION_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_DECLINE DECIMAL(10,6),
FINAL_RATE DECIMAL(14,4),
INITIAL_DECLINE DECIMAL(10,6),
INITIAL_RATE DECIMAL(14,4),
MINIMUM_DECLINE DECIMAL(10,6),
N_FACTOR DECIMAL(6,3),
PPDM_GUID  VARCHAR(38),
RATE_OUOM  VARCHAR(20),
RATIO_CURVE_TYPE  VARCHAR(20),
RATIO_FINAL_RATE DECIMAL(14,4),
RATIO_FLUID_TYPE  VARCHAR(20),
RATIO_INITIAL_RATE DECIMAL(14,4),
RATIO_RATE_OUOM  VARCHAR(20),
RATIO_VOLUME DECIMAL(16,4),
RATIO_VOLUME_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
VOLUME DECIMAL(16,4),
VOLUME_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_FACILITY'
CREATE table pden_facility (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_FIELD'
CREATE table pden_field (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID  VARCHAR(20),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_FLOW_MEASUREMENT'
CREATE table pden_flow_measurement (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
MEASUREMENT_DATE TIMESTAMP(0),
AMENDMENT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AMEND_REASON  VARCHAR(20),
CASING_PRESSURE DECIMAL(8,2),
CASING_PRESSURE_OUOM  VARCHAR(20),
CHOKE_POSITION DECIMAL(10,5),
CHOKE_SIZE DECIMAL(10,5),
CHOKE_SIZE_OUOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DIFFERENTIAL_PRESSURE DECIMAL(8,2),
DIFF_PRESSURE_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_RATE DECIMAL(8,2),
FLOW_RATE_OUOM  VARCHAR(20),
MEASUREMENT_TYPE  VARCHAR(20),
MEAS_TEMPERATURE DECIMAL(5,2),
MEAS_TEMPERATURE_OUOM  VARCHAR(20),
POSTED_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PRODUCTION_TIME DECIMAL(14,4),
PRODUCTION_TIME_OUOM  VARCHAR(20),
PRODUCTION_VOLUME DECIMAL(14,4),
PRODUCTION_VOLUME_OUOM  VARCHAR(20),
PRODUCTION_VOLUMN_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATIC_PRESSURE DECIMAL(8,2),
STATIC_PRESSURE_OUOM  VARCHAR(20),
TUBING_PRESSURE DECIMAL(8,2),
TUBING_PRESSURE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_IN_AREA'
CREATE table pden_in_area (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_LAND_RIGHT'
CREATE table pden_land_right (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_LEASE_UNIT'
CREATE table pden_lease_unit (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
LEASE_UNIT_ID  VARCHAR(20),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_MATERIAL_BAL'
CREATE table pden_material_bal (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
CASE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CASE_NAME  VARCHAR(255),
CLOSE_MONTH  VARCHAR(20),
CLOSE_YEAR SMALLINT,
CO2_PERCENT DECIMAL(15,12),
CRITICAL_PRESS DECIMAL(10,5),
CRITICAL_PRESS_OUOM  VARCHAR(20),
CRITICAL_TEMP DECIMAL(10,5),
CRITICAL_TEMP_OUOM  VARCHAR(20),
CUM_VOLUME DECIMAL(18,4),
CUM_VOLUME_DATE  VARCHAR(20),
CUM_VOLUME_OUOM  VARCHAR(20),
CUM_VOLUME_UOM  VARCHAR(20),
CURVE_FIT_ERROR DECIMAL(10,5),
CURVE_FIT_TYPE  VARCHAR(20),
CURVE_INTERCEPT DECIMAL(10,5),
CURVE_NAME  VARCHAR(255),
CURVE_SLOPE DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_CUM_VOLUME DECIMAL(18,4),
FINAL_CUM_VOLUME_OUOM  VARCHAR(20),
FINAL_CUM_VOLUME_UOM  VARCHAR(20),
FINAL_PRESS DECIMAL(8,2),
FINAL_PRESS_OUOM  VARCHAR(20),
GAS_ABANDON_PRESS DECIMAL(8,2),
GAS_ABANDON_PRESS_OUOM  VARCHAR(20),
GAS_ABANDON_RECOVER DECIMAL(10,5),
H2S_PERCENT DECIMAL(15,12),
INITIAL_CUM_VOLUME DECIMAL(18,4),
INITIAL_CUM_VOLUME_OUOM  VARCHAR(20),
INITIAL_CUM_VOLUME_UOM  VARCHAR(20),
INITIAL_PRESS DECIMAL(8,2),
INITIAL_PRESS_OUOM  VARCHAR(20),
INITIAL_TEMP DECIMAL(10,5),
INITIAL_TEMP_OUOM  VARCHAR(20),
MEASURED_PRESS_IND  VARCHAR(1),
N2_PERCENT DECIMAL(15,12),
ORIG_GAS_IN_PLACE DECIMAL(18,4),
POOL_DATUM_DEPTH DECIMAL(10,5),
POOL_DATUM_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
RECOV_GAS_IN_PLACE DECIMAL(18,4),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPECIFIC_GRAVITY DECIMAL(10,5),
START_DATE TIMESTAMP(0),
SURFACE_LOSS_PERCENT DECIMAL(15,12),
VOLUME DECIMAL(18,4),
VOLUME_OUOM  VARCHAR(20),
VOLUME_UOM  VARCHAR(20),
ZERO_PRESS_IND  VARCHAR(1),
Z_FACTOR_METHOD  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_OPER_HIST'
CREATE table pden_oper_hist (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
OPERATOR_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_OTHER'
CREATE table pden_other (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
OTHER_NAME  VARCHAR(60),
OTHER_SHORT_NAME  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_POOL'
CREATE table pden_pool (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_PROD_STRING'
CREATE table pden_prod_string (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
LEASE_UNIT_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRING_ID  VARCHAR(20),
STRING_SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_PROD_STRING_XREF'
CREATE table pden_prod_string_xref (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
UWI  VARCHAR(20) NOT NULL,
STRING_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
PDEN_PRS_XREF_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_PR_STR_ALLOWABLE'
CREATE table pden_pr_str_allowable (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
UWI  VARCHAR(20) NOT NULL,
STRING_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
PDEN_PRS_XREF_SEQ_NO INT,
ALLOWABLE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ALLOWABLE DECIMAL(14,4),
ALLOWABLE_DATE TIMESTAMP(0),
ALLOWABLE_OUOM  VARCHAR(20),
ALLOWABLE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRODUCT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_PR_STR_FORM'
CREATE table pden_pr_str_form (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PR_STR_FORM_OBS_NO INT,
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
STRING_SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_RESENT'
CREATE table pden_resent (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
OTHER_SHORT_NAME  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_RESENT_CLASS'
CREATE table pden_resent_class (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
OTHER_SHORT_NAME  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_STATUS_HIST'
CREATE table pden_status_hist (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
STATUS_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_TIME TIMESTAMP(0),
STATUS  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
TIMEZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_VOLUME_ANALYSIS'
CREATE table pden_volume_analysis (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
CASE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_SIZE DECIMAL(20,10),
AREA_SIZE_OUOM  VARCHAR(20),
CASE_NAME  VARCHAR(255),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_ABANDON_COMPRESS DECIMAL(10,5),
GAS_ABANDON_PRESS DECIMAL(8,2),
GAS_ABANDON_PRESS_OUOM  VARCHAR(20),
GAS_INIT_COMPRESS DECIMAL(10,5),
GAS_INIT_PRESSURE DECIMAL(8,2),
GAS_IN_PLACE DECIMAL(18,4),
GAS_IN_PLACE_OUOM  VARCHAR(20),
GAS_ORIGINAL_IN_PLACE DECIMAL(18,4),
GAS_ORIGINAL_IN_PLACE_OUOM  VARCHAR(20),
GAS_RATIO_BGI DECIMAL(10,5),
GAS_RECOVERY DECIMAL(15,12),
GROSS_NET_PAY_RATIO DECIMAL(10,5),
GROSS_PAY DECIMAL(10,3),
GROSS_PAY_OUOM  VARCHAR(20),
INIT_RES_TEMP DECIMAL(10,5),
INIT_RES_TEMP_OUOM  VARCHAR(20),
NET_PAY DECIMAL(10,3),
NET_PAY_OUOM  VARCHAR(20),
OIL_IN_PLACE DECIMAL(18,4),
OIL_IN_PLACE_OUOM  VARCHAR(20),
OIL_ORIGINAL_IN_PLACE DECIMAL(18,4),
OIL_ORIGINAL_IN_PLACE_OUOM  VARCHAR(20),
OIL_RECOVERY_PRIMARY DECIMAL(15,12),
OIL_RECOVERY_SECONDARY DECIMAL(15,12),
OIL_RECOVERY_TOTAL DECIMAL(15,12),
OIL_RESIDUAL_SAT DECIMAL(10,5),
OIL_SHRINKAGE DECIMAL(10,5),
ORIGINAL_GOR DECIMAL(10,5),
ORIGINAL_GOR_OUOM  VARCHAR(20),
ORIG_SOL_GAS_IN_PLACE DECIMAL(18,4),
ORIG_SOL_GAS_IN_PLACE_OUOM  VARCHAR(20),
PERMEABILITY DECIMAL(10,5),
PERMEABILITY_OUOM  VARCHAR(20),
POROSITY DECIMAL(10,5),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
RECOV_GOR DECIMAL(10,5),
RECOV_SOL_GAS_IN_PLACE DECIMAL(18,4),
RECOV_SOL_GAS_IN_PLACE_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOL_GAS_RECOVERY DECIMAL(15,12),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
VOLUME DECIMAL(18,4),
VOLUME_OUOM  VARCHAR(20),
VOLUME_UOM  VARCHAR(20),
WATER_SATURATION DECIMAL(10,5),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_VOL_DISPOSITION'
CREATE table pden_vol_disposition (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
VOLUME_METHOD  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
PERIOD_TYPE  VARCHAR(20) NOT NULL,
DISPOSITION_OBS_NO INT,
AMENDMENT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AMEND_REASON  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
POSTED_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RECEIVING_PDEN_ID  VARCHAR(40),
RECEIVING_PDEN_TYPE  VARCHAR(30),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
VOLUME DECIMAL(14,4),
VOLUME_END_DATE TIMESTAMP(0),
VOLUME_OUOM  VARCHAR(20),
VOLUME_PERIOD DECIMAL(7,2),
VOLUME_PERIOD_OUOM  VARCHAR(20),
VOLUME_QUALITY DECIMAL(7,2),
VOLUME_QUALITY_OUOM  VARCHAR(20),
VOLUME_START_DATE TIMESTAMP(0),
VOLUME_UOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_VOL_REGIME'
CREATE table pden_vol_regime (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
VOLUME_REGIME_ID  VARCHAR(20) NOT NULL,
PDEN_REGIME_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_VOL_SUMMARY'
CREATE table pden_vol_summary (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
VOLUME_METHOD  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
PERIOD_TYPE  VARCHAR(20) NOT NULL,
VOLUME_DATE  VARCHAR(12) NOT NULL,
AMENDMENT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AMEND_REASON  VARCHAR(20),
BOE_CUM_VOLUME DECIMAL(16,4),
BOE_VOLUME DECIMAL(14,4),
BOE_VOLUME_OUOM  VARCHAR(20),
BOE_YTD_VOLUME DECIMAL(14,4),
CO2_CUM_VOLUME DECIMAL(16,4),
CO2_VOLUME DECIMAL(14,4),
CO2_VOLUME_OUOM  VARCHAR(20),
CO2_YTD_VOLUME DECIMAL(14,4),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_CUM_VOLUME DECIMAL(16,4),
GAS_QUALITY DECIMAL(7,2),
GAS_QUALITY_OUOM  VARCHAR(20),
GAS_VOLUME DECIMAL(14,4),
GAS_VOLUME_OUOM  VARCHAR(20),
GAS_YTD_VOLUME DECIMAL(14,4),
INJECTION_CYCLE SMALLINT,
INJECTION_PRESSURE DECIMAL(9,2),
INJECTION_PRESSURE_OUOM  VARCHAR(20),
INVENTORY_CLOSE_BALANCE DECIMAL(14,4),
INVENTORY_OPEN_BALANCE DECIMAL(14,4),
INVENTORY_PRODUCT  VARCHAR(20),
INVENT_CLOSE_BAL_OUOM  VARCHAR(20),
INVENT_OPEN_BAL_OUOM  VARCHAR(20),
NGL_CUM_VOLUME DECIMAL(16,4),
NGL_VOLUME DECIMAL(14,4),
NGL_VOLUME_OUOM  VARCHAR(20),
NGL_YTD_VOLUME DECIMAL(14,4),
NITROGEN_CUM_VOLUME DECIMAL(16,4),
NITROGEN_VOLUME DECIMAL(14,4),
NITROGEN_VOLUME_OUOM  VARCHAR(20),
NITROGEN_YTD_VOLUME DECIMAL(14,4),
NO_OF_GAS_WELLS INT,
NO_OF_INJECTION_WELLS INT,
NO_OF_OIL_WELLS INT,
OIL_CUM_VOLUME DECIMAL(16,4),
OIL_QUALITY DECIMAL(7,2),
OIL_QUALITY_OUOM  VARCHAR(20),
OIL_VOLUME DECIMAL(14,4),
OIL_VOLUME_OUOM  VARCHAR(20),
OIL_YTD_VOLUME DECIMAL(14,4),
PERIOD_ON_INJECTION SMALLINT,
PERIOD_ON_INJECTION_OUOM  VARCHAR(20),
PERIOD_ON_PRODUCTION SMALLINT,
PERIOD_ON_PRODUCTION_OUOM  VARCHAR(20),
POSTED_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PRIMARY_ALLOWABLE DECIMAL(14,4),
PRIMARY_ALLOWABLE_OUOM  VARCHAR(20),
PRIMARY_PRODUCT  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
SULPHUR_CUM_VOLUME DECIMAL(16,4),
SULPHUR_VOLUME DECIMAL(14,4),
SULPHUR_VOLUME_OUOM  VARCHAR(20),
SULPHUR_YTD_VOLUME DECIMAL(14,4),
VOLUME_PERIOD BIGINT,
VOLUME_PERIOD_OUOM  VARCHAR(20),
WATER_CUM_VOLUME DECIMAL(16,4),
WATER_VOLUME DECIMAL(14,4),
WATER_VOLUME_OUOM  VARCHAR(20),
WATER_YTD_VOLUME DECIMAL(14,4),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_VOL_SUMM_OTHER'
CREATE table pden_vol_summ_other (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
VOLUME_METHOD  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
PERIOD_TYPE  VARCHAR(20) NOT NULL,
VOLUME_DATE  VARCHAR(12) NOT NULL,
AMENDMENT_SEQ_NO INT,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CUM_VOLUME DECIMAL(16,4),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
VOLUME DECIMAL(14,4),
VOLUME_OUOM  VARCHAR(20),
VOLUME_QUALITY DECIMAL(7,2),
VOLUME_QUALITY_OUOM  VARCHAR(20),
VOLUME_UOM  VARCHAR(20),
YTD_VOLUME DECIMAL(14,4),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_WELL'
CREATE table pden_well (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PDEN_XREF'
CREATE table pden_xref (
FROM_PDEN_ID  VARCHAR(40) NOT NULL,
FROM_PDEN_TYPE  VARCHAR(30) NOT NULL,
FROM_PDEN_SOURCE  VARCHAR(20) NOT NULL,
TO_PDEN_ID  VARCHAR(40) NOT NULL,
TO_PDEN_TYPE  VARCHAR(30) NOT NULL,
TO_PDEN_SOURCE  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PDEN_XREF_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE POOL'
CREATE table pool (
POOL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
DISCOVERY_DATE TIMESTAMP(0),
DISTRICT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID  VARCHAR(20),
GEOLOGIC_PROVINCE  VARCHAR(20),
POOL_CODE  VARCHAR(20),
POOL_NAME  VARCHAR(60),
POOL_NAME_ABBREVIATION  VARCHAR(12),
POOL_STATUS  VARCHAR(20),
POOL_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE POOL_ALIAS'
CREATE table pool_alias (
POOL_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
POOL_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE POOL_AREA'
CREATE table pool_area (
POOL_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE POOL_COMPONENT'
CREATE table pool_component (
POOL_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_COMPONENT_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20)
,
WELL_ACTIVITY_UWI  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE POOL_INSTRUMENT'
CREATE table pool_instrument (
INSTRUMENT_ID  VARCHAR(20) NOT NULL,
POOL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE POOL_VERSION'
CREATE table pool_version (
POOL_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
DISCOVERY_DATE TIMESTAMP(0),
DISTRICT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID  VARCHAR(20),
GEOLOGIC_PROVINCE  VARCHAR(20),
POOL_CODE  VARCHAR(20),
POOL_NAME  VARCHAR(60),
POOL_NAME_ABBREVIATION  VARCHAR(12),
POOL_STATUS  VARCHAR(20),
POOL_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_AUDIT_HISTORY'
CREATE table ppdm_audit_history (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
COLUMN_NAME  VARCHAR(30) NOT NULL,
AUDIT_ROW_GUID  VARCHAR(38) NOT NULL,
AUDIT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AUDIT_AUTHORIZED_BY_BA_ID  VARCHAR(20),
AUDIT_CREATED_BY_BA_ID  VARCHAR(20),
AUDIT_DATETIME TIMESTAMP(0),
AUDIT_DESC  VARCHAR(1024),
AUDIT_REASON  VARCHAR(20),
AUDIT_SOURCE  VARCHAR(20),
AUDIT_TYPE  VARCHAR(20),
AUDIT_VERIFIED_BY_BA_ID  VARCHAR(20),
DATA_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NEW_DATE_VALUE TIMESTAMP(0),
NEW_NUMERIC_VALUE DOUBLE PRECISION,
NEW_NUMERIC_VALUE_OUOM  VARCHAR(20),
NEW_NUMERIC_VALUE_UOM  VARCHAR(20),
NEW_TEXT_VALUE  VARCHAR(2000),
NULL_DESCRIPTION  VARCHAR(1024),
ORIGINAL_DATE_VALUE TIMESTAMP(0),
ORIGINAL_NUMERIC_VALUE DOUBLE PRECISION,
ORIGINAL_NUMERIC_VALUE_OUOM  VARCHAR(20),
ORIGINAL_NUMERIC_VALUE_UOM  VARCHAR(20),
ORIGINAL_TEXT_VALUE  VARCHAR(2000),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RETENTION_PERIOD  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_AUDIT_HISTORY_REM'
CREATE table ppdm_audit_history_rem (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
COLUMN_NAME  VARCHAR(30) NOT NULL,
AUDIT_ROW_GUID  VARCHAR(38) NOT NULL,
AUDIT_SEQ_NO INT,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AUDIT_DATETIME TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_ABOUT_BA_ID  VARCHAR(20),
REMARK_BY_BA_ID  VARCHAR(20),
REMARK_FOR_BA_ID  VARCHAR(20),
REMARK_TYPE  VARCHAR(20),
REMARK_USE_TYPE  VARCHAR(20),
RETENTION_PERIOD  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_CHECK_CONS_VALUE'
CREATE table ppdm_check_cons_value (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
COLUMN_NAME  VARCHAR(30) NOT NULL,
CHECK_VALUE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CHECK_CONS_NAME  VARCHAR(255),
CONSTRAINT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VALUE_LONG_NAME  VARCHAR(255),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_CODE_VERSION'
CREATE table ppdm_code_version (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
VERSION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DEFINITION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REFERENCE_TABLE_GUID  VARCHAR(38),
REFERENCE_TABLE_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
USE_RULE_DESC  VARCHAR(2000),
VERSION_OWNER_BA_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_CODE_VERSION_COLUMN'
CREATE table ppdm_code_version_column (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
VERSION_OBS_NO INT,
COLUMN_NAME  VARCHAR(30) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
DEFINITION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE  VARCHAR(20),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PRIMARY_KEY  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_CODE_VERSION_USE'
CREATE table ppdm_code_version_use (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
VERSION_OBS_NO INT,
USE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PROCEDURE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
USE_OWNER_BA_ID  VARCHAR(20),
USE_RULE_DESC  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_CODE_VERSION_XREF'
CREATE table ppdm_code_version_xref (
SYSTEM_ID  VARCHAR(20) NOT NULL,
SYSTEM_ID2  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
TABLE_NAME2  VARCHAR(30) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
SOURCE2  VARCHAR(20) NOT NULL,
VERSION_OBS_NO INT,
VERSION_OBS_NO2 INT,
ACTIVE_IND  VARCHAR(1),
CODE_XREF_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIVALENCE_DESC  VARCHAR(1024),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
USER_RULE_DESC  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_COLUMN'
CREATE table ppdm_column (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
COLUMN_NAME  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COLUMN_COMMENT  VARCHAR(2000),
COLUMN_KEY_METHOD  VARCHAR(20),
COLUMN_PRECISION DOUBLE PRECISION,
COLUMN_SCALE DOUBLE PRECISION,
COLUMN_SEQUENCE INT,
COLUMN_SIZE DOUBLE PRECISION,
CONTROL_COLUMN_IND  VARCHAR(1),
CONTROL_COLUMN_NAME  VARCHAR(30),
DATA_TYPE  VARCHAR(20),
DEFAULT_IND_VALUE  VARCHAR(1),
DEFAULT_UOM_ID  VARCHAR(20),
DEFAULT_VALUE_METHOD  VARCHAR(20),
DISTINCT_VALUE_COUNT DOUBLE PRECISION,
DISTINCT_VALUE_COUNT_DATE TIMESTAMP(0),
DOMAIN  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND  VARCHAR(1),
LAST_SYSTEM_KEY  VARCHAR(240),
NULLABLE_IND  VARCHAR(1),
OUOM_COLUMN_NAME  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
PRIMARY_KEY_SEQUENCE SMALLINT,
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SURROGATE_IND  VARCHAR(1),
UOM_COLUMN_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_COLUMN_ALIAS'
CREATE table ppdm_column_alias (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
COLUMN_NAME  VARCHAR(30) NOT NULL,
COLUMN_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
REASON_DESC  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_CONSTRAINT'
CREATE table ppdm_constraint (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
CONSTRAINT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONSTRAINT_NAME  VARCHAR(255),
CONSTRAINT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REFERENCED_CONSTRAINT_ID  VARCHAR(20),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_CONS_COLUMN'
CREATE table ppdm_cons_column (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
CONSTRAINT_ID  VARCHAR(20) NOT NULL,
COLUMN_NAME  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION  VARCHAR(2000),
CONSTRAINT_SEQ_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REFERENCED_COLUMN_NAME  VARCHAR(30),
REFERENCED_CONSTRAINT_ID  VARCHAR(20),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_DATA_STORE'
CREATE table ppdm_data_store (
UOM_SYSTEM  VARCHAR(20) NOT NULL,
NAME  VARCHAR(255) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_DOMAIN'
CREATE table ppdm_domain (
DOMAIN  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATA_TYPE  VARCHAR(20),
DOMAIN_NAME  VARCHAR(255),
DOMAIN_QUANTITY_TYPE  VARCHAR(20),
DOMAIN_SCALE DOUBLE PRECISION,
DOMAIN_WIDTH DOUBLE PRECISION,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_EXCEPTION'
CREATE table ppdm_exception (
PE_ID BIGINT,
ACTIVE_IND  VARCHAR(1),
CONSTRAINT_NAME  VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_ID  VARCHAR(240),
SOURCE  VARCHAR(20),
SYSTEM_ID  VARCHAR(20),
TABLE_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_GROUP'
CREATE table ppdm_group (
GROUP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DEFAULT_UNIT_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_NAME  VARCHAR(255),
GROUP_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORT_HEADING1  VARCHAR(240),
REPORT_HEADING2  VARCHAR(240),
SCREEN_HEADING1  VARCHAR(240),
SCREEN_HEADING2  VARCHAR(240),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_GROUP_OBJECT'
CREATE table ppdm_group_object (
GROUP_ID  VARCHAR(20) NOT NULL,
OBJECT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CODE_VERSION_OBS_NO INT,
CODE_VERSION_SOURCE  VARCHAR(20),
COLUMN_ALIAS_ID  VARCHAR(20),
COLUMN_NAME  VARCHAR(30),
CONSTRAINT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_USE  VARCHAR(20),
INDEX_ID  VARCHAR(20),
OBJECT_TYPE  VARCHAR(20),
OUTPUT_FONT  VARCHAR(20),
OUTPUT_FONT_BACKGR_COLOR  VARCHAR(20),
OUTPUT_FONT_COLOR  VARCHAR(20),
OUTPUT_FONT_EFFECT  VARCHAR(20),
OUTPUT_FONT_SIZE DECIMAL(12,2),
OUTPUT_FONT_SIZE_UOM  VARCHAR(20),
OUTPUT_HEADING  VARCHAR(240),
OUTPUT_LENGTH BIGINT,
OUTPUT_LENGTH_UOM  VARCHAR(20),
OUTPUT_PRECISION DOUBLE PRECISION,
PPDM_GUID  VARCHAR(38),
PREFERRED_UOM  VARCHAR(20),
PROCEDURE_ID  VARCHAR(20),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
RULE_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
SYSTEM_ID  VARCHAR(20),
TABLE_ALIAS  VARCHAR(30),
TABLE_NAME  VARCHAR(30),
USE_RULE_DESCRIPTION  VARCHAR(1024),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_GROUP_OWNER'
CREATE table ppdm_group_owner (
GROUP_ID  VARCHAR(20) NOT NULL,
OWNER_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DEFAULT_UNIT_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORGANIZATION_ID  VARCHAR(20),
ORGANIZATION_SEQ_NO INT,
OWNER_BA_ID  VARCHAR(20),
OWNER_ROLE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_GROUP_REMARK'
CREATE table ppdm_group_remark (
GROUP_ID  VARCHAR(20) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_REMARK  VARCHAR(2000),
ORGANIZATION_ID  VARCHAR(20),
ORGANIZATION_SEQ_NO INT,
MADE_BY_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_GROUP_XREF'
CREATE table ppdm_group_xref (
PARENT_GROUP_ID  VARCHAR(20) NOT NULL,
CHILD_GROUP_ID  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_XREF_TYPE  VARCHAR(20),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_INDEX'
CREATE table ppdm_index (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
INDEX_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND  VARCHAR(1),
INDEX_CATEGORY  VARCHAR(20),
INDEX_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UNIQUE_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_INDEX_COLUMN'
CREATE table ppdm_index_column (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
INDEX_ID  VARCHAR(20) NOT NULL,
COLUMN_NAME  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND  VARCHAR(1),
INDEX_SEQ_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_MAP_DETAIL'
CREATE table ppdm_map_detail (
MAP_ID  VARCHAR(20) NOT NULL,
MAP_DETAIL_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
COLUMN_NAME1  VARCHAR(30),
COLUMN_NAME2  VARCHAR(30),
CREATE_METHOD  VARCHAR(20),
DEFAULT_VALUE  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAP_DESC  VARCHAR(2000),
MAP_OWNER_BA_ID  VARCHAR(20),
MAP_TYPE  VARCHAR(20),
MAP_VERSION_NUM  VARCHAR(12),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
RING_SEQ_NO INT,
SCHEMA_ENTITY_ID1  VARCHAR(20),
SCHEMA_ENTITY_ID2  VARCHAR(20),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
SYSTEM_ID1  VARCHAR(20),
SYSTEM_ID2  VARCHAR(20),
TABLE_NAME1  VARCHAR(30),
TABLE_NAME2  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_MAP_RULE'
CREATE table ppdm_map_rule (
MAP_ID  VARCHAR(20) NOT NULL,
MAP_DETAIL_OBS_NO INT,
RULE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CREATE_METHOD  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DEP_COLUMN_NAME  VARCHAR(30),
DEP_SCHEMA_ENTITY_ID  VARCHAR(20),
DEP_SYSTEM_ID  VARCHAR(20),
DEP_TABLE_NAME  VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAP_RULE_TYPE  VARCHAR(20),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PROCEDURE_ID  VARCHAR(20),
PROCEDURE_SYSTEM_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
RING_SEQ_NO INT,
RULE_DESC  VARCHAR(2000),
RULE_OWNER_BA_ID  VARCHAR(20),
RULE_VERSION_NUM  VARCHAR(12),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_MEASUREMENT_SYSTEM'
CREATE table ppdm_measurement_system (
UOM_SYSTEM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
UNIT_SYSTEM_NAME  VARCHAR(255),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_METRIC'
CREATE table ppdm_metric (
METRIC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
METRIC_NAME  VARCHAR(255),
METRIC_PROCEDURE  VARCHAR(2000),
METRIC_TYPE  VARCHAR(20),
ORGANIZATION_ID  VARCHAR(20),
ORGANIZATION_SEQ_NO INT,
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROCEDURE_ID  VARCHAR(20),
PROCEDURE_SYSTEM_ID  VARCHAR(20),
PROJECTED_FINAL_COUNT BIGINT,
PURPOSE_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_METRIC_COMPONENT'
CREATE table ppdm_metric_component (
METRIC_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_LICENSE_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
METRIC_COMPONENT_TYPE  VARCHAR(20),
METRIC_OBS_NO INT,
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_COLUMN_NAME  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SCHEMA_ENTITY_ID  VARCHAR(20),
SEIS_LICENSE_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20)
,
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20),
WELL_LICENSE_ID  VARCHAR(20),
WELL_LICENSE_SOURCE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_METRIC_VALUE'
CREATE table ppdm_metric_value (
METRIC_ID  VARCHAR(20) NOT NULL,
METRIC_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
METRIC_CODE  VARCHAR(20),
METRIC_DESC  VARCHAR(1024),
METRIC_IND  VARCHAR(1),
METRIC_TYPE  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM  VARCHAR(20),
REFERENCE_VALUE_TYPE  VARCHAR(20),
REFERENCE_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_OBJECT_STATUS'
CREATE table ppdm_object_status (
STATUS_ID  VARCHAR(20) NOT NULL,
STATUS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CODE_VERSION_OBS_NO INT,
CODE_VERSION_SOURCE  VARCHAR(20),
COLUMN_NAME  VARCHAR(30),
CONSTRAINT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INDEX_ID  VARCHAR(20),
OBJECT_NAME  VARCHAR(255),
OBJECT_STATUS  VARCHAR(20),
OBJECT_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROCEDURE_ID  VARCHAR(20),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
RULE_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
SYSTEM_ID  VARCHAR(20),
TABLE_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_PROCEDURE'
CREATE table ppdm_procedure (
SYSTEM_ID  VARCHAR(20) NOT NULL,
PROCEDURE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROCEDURE_DESC  VARCHAR(2000),
PROCEDURE_NAME  VARCHAR(255),
PROCEDURE_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TABLE_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_PROPERTY_COLUMN'
CREATE table ppdm_property_column (
PROPERTY_SET_ID  VARCHAR(20) NOT NULL,
PROPERTY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
COLUMN_PRECISION DECIMAL(10,5),
COLUMN_SCALE DECIMAL(10,5),
COLUMN_SIZE DECIMAL(10,5),
DATA_TYPE  VARCHAR(20),
DOMAIN  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_CURRENCY_UOM  VARCHAR(20),
PREFERRED_UOM  VARCHAR(20),
QUANTITY_TYPE  VARCHAR(20),
REF_SYSTEM_ID  VARCHAR(20),
REF_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
USE_COLUMN_NAME  VARCHAR(30),
USE_INDICATOR_IND  VARCHAR(1),
USE_SYSTEM_ID  VARCHAR(20),
USE_TABLE_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_PROPERTY_SET'
CREATE table ppdm_property_set (
PROPERTY_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
USE_SYSTEM_ID  VARCHAR(20),
USE_TABLE_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_QUALITY_CONTROL'
CREATE table ppdm_quality_control (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
QC_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CHECKED_BY_BA_ID  VARCHAR(20),
COLUMN_NAME  VARCHAR(30),
CURRENT_DATE_VALUE TIMESTAMP(0),
CURRENT_NUMERIC_VALUE DOUBLE PRECISION,
CURRENT_NUMERIC_VALUE_OUOM  VARCHAR(20),
CURRENT_NUMERIC_VALUE_UOM  VARCHAR(20),
CURRENT_ROW_GUID  VARCHAR(38),
CURRENT_TEXT_VALUE  VARCHAR(2000),
DATA_TYPE  VARCHAR(20),
DONE_BY_BA_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NULL_DESCRIPTION  VARCHAR(1024),
PPDM_GUID  VARCHAR(38),
QC_DATETIME TIMESTAMP(0),
QC_DESC  VARCHAR(1024),
QC_STATUS  VARCHAR(20),
QC_TYPE  VARCHAR(20),
QUALITY_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
RETENTION_PERIOD  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_QUANTITY'
CREATE table ppdm_quantity (
QUANTITY_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_QUANTITY_ALIAS'
CREATE table ppdm_quantity_alias (
QUANTITY_ALIAS  VARCHAR(20) NOT NULL,
QUANTITY_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_RULE'
CREATE table ppdm_rule (
RULE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CURRENT_STATUS  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RULE_CLASS  VARCHAR(20),
RULE_DESC  VARCHAR(1024),
RULE_PURPOSE  VARCHAR(20),
RULE_QUERY  VARCHAR(2000),
SOURCE  VARCHAR(20),
USE_CONDITION_DESC  VARCHAR(1024),
USE_CONDITION_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_RULE_ALIAS'
CREATE table ppdm_rule_alias (
RULE_ID  VARCHAR(20) NOT NULL,
RULE_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_RULE_COMPONENT'
CREATE table ppdm_rule_component (
RULE_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_LICENSE_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_COLUMN_NAME  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
RULE_COMPONENT_TYPE  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SCHEMA_ENTITY_ID  VARCHAR(20),
SEIS_LICENSE_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20)
,
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
SYSTEM_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20),
WELL_LICENSE_ID  VARCHAR(20),
WELL_LICENSE_SOURCE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_RULE_DETAIL'
CREATE table ppdm_rule_detail (
RULE_ID  VARCHAR(20) NOT NULL,
DETAIL_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
BOOLEAN_RULE  VARCHAR(20),
BUSINESS_RULE  VARCHAR(2000),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_COLUMN_NAME  VARCHAR(30),
REFERENCE_COLUMN_NAME2  VARCHAR(30),
REFERENCE_SYSTEM_ID  VARCHAR(20),
REFERENCE_TABLE_NAME  VARCHAR(30),
REFERENCE_TABLE_NAME2  VARCHAR(30),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM  VARCHAR(20),
REFERENCE_VALUE_TYPE  VARCHAR(20),
REFERENCE_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
RULE_DESC  VARCHAR(1024),
RULE_DETAIL_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_RULE_ENFORCEMENT'
CREATE table ppdm_rule_enforcement (
RULE_ID  VARCHAR(20) NOT NULL,
ENFORCEMENT_ID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ENFORCE_METHOD  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROCEDURE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
RULE_FAIL_RESULT  VARCHAR(20),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_RULE_XREF'
CREATE table ppdm_rule_xref (
DEPENDENCY_ID  VARCHAR(20) NOT NULL,
RULE_ID  VARCHAR(20) NOT NULL,
RULE_ID2  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RULE_XREF_CONDITION  VARCHAR(20),
RULE_XREF_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_SCHEMA_ENTITY'
CREATE table ppdm_schema_entity (
SYSTEM_ID  VARCHAR(20) NOT NULL,
SCHEMA_ENTITY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATA_TYPE  VARCHAR(20),
DEFAULT_UOM_ID  VARCHAR(20),
DELIMITER  VARCHAR(12),
DOMAIN  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEMENT_TYPE  VARCHAR(20),
ENTITY_COMMENT  VARCHAR(2000),
ENTITY_PRECISION BIGINT,
ENTITY_SCALE BIGINT,
ENTITY_SEQ_NO INT,
ENTITY_SIZE BIGINT,
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND  VARCHAR(1),
LAST_SYSTEM_KEY  VARCHAR(240),
NULLABLE_IND  VARCHAR(1),
POSITION_END BIGINT,
POSITION_START BIGINT,
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
REFERENCE_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SURROGATE_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_SCHEMA_ENTITY_ALIAS'
CREATE table ppdm_schema_entity_alias (
SYSTEM_ID  VARCHAR(20) NOT NULL,
SCHEMA_ENTITY_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_SCHEMA_GROUP'
CREATE table ppdm_schema_group (
GROUP_SYSTEM_ID  VARCHAR(20) NOT NULL,
GROUP_SCHEMA_ENTITY_ID  VARCHAR(20) NOT NULL,
COMP_SCHEMA_ENTITY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ENTITY_SEQ_NO INT,
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SCHEMA_GROUP_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SURROGATE_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_SYSTEM'
CREATE table ppdm_system (
SYSTEM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BUSINESS_OWNER_BA_ID  VARCHAR(20),
CONNECT_STRING  VARCHAR(240),
CREATOR_BA_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATING_SYSTEM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_TYPE  VARCHAR(20),
RDBMS_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SYSTEM_LONG_NAME  VARCHAR(255),
TECHNICAL_OWNER_BA_ID  VARCHAR(20),
VERSION_NUM  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_SYSTEM_ALIAS'
CREATE table ppdm_system_alias (
SYSTEM_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_SYSTEM_APPLICATION'
CREATE table ppdm_system_application (
SYSTEM_ID  VARCHAR(20) NOT NULL,
SW_APPLICATION_ID  VARCHAR(20) NOT NULL,
APPLICATION_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CONTACT_BA_ID  VARCHAR(20),
CUSTODIAN_BA_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_SYSTEM_MAP'
CREATE table ppdm_system_map (
MAP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAP_OWNER_BA_ID  VARCHAR(20),
MAP_VERSION_NUM  VARCHAR(12),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
SYSTEM_ID1  VARCHAR(20),
SYSTEM_ID2  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_TABLE'
CREATE table ppdm_table (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTENSION_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PRIMARY_KEY_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
ROW_COUNT DOUBLE PRECISION,
ROW_COUNT_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
TABLE_COMMENT  VARCHAR(2000),
TABLE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_TABLE_ALIAS'
CREATE table ppdm_table_alias (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
TABLE_ALIAS  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_TABLE_HISTORY'
CREATE table ppdm_table_history (
SYSTEM_ID  VARCHAR(20) NOT NULL,
TABLE_NAME  VARCHAR(30) NOT NULL,
HISTORY_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AUDIT_REASON  VARCHAR(20),
AUTHORIZED_BY_BA_ID  VARCHAR(20),
DELETE_RECORD  BYTEA,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RETENTION_PERIOD  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_UNIT_CONVERSION'
CREATE table ppdm_unit_conversion (
FROM_UOM_ID  VARCHAR(20) NOT NULL,
TO_UOM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXACT_CONVERSION_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FACTOR_DENOMINATOR DOUBLE PRECISION,
FACTOR_NUMERATOR DOUBLE PRECISION,
POST_OFFSET DOUBLE PRECISION,
PPDM_GUID  VARCHAR(38),
PRE_OFFSET DOUBLE PRECISION,
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
UNIT_EXPRESSION DOUBLE PRECISION,
UNIT_QUANTITY_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_UNIT_OF_MEASURE'
CREATE table ppdm_unit_of_measure (
UOM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_UNIT_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
UOM_NAME  VARCHAR(255),
UOM_QUANTITY_TYPE  VARCHAR(20),
UOM_SYSTEM_ID  VARCHAR(20),
UOM_USAGE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_UOM_ALIAS'
CREATE table ppdm_uom_alias (
UOM_ID  VARCHAR(20) NOT NULL,
UOM_SYNONYM  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_VOL_MEAS_CONV'
CREATE table ppdm_vol_meas_conv (
VOLUME_REGIME_ID  VARCHAR(20) NOT NULL,
CONVERSION_QUANTITY  VARCHAR(20) NOT NULL,
CONVERSION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CONVERSION_FACTOR DECIMAL(10,5),
CONVERSION_FORMULA  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FROM_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRRED_IND  VARCHAR(1),
PRESSURE DECIMAL(10,5),
PRESSURE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TEMPERATURE DECIMAL(10,5),
TEMPERATURE_UOM  VARCHAR(20),
TO_UOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_VOL_MEAS_REGIME'
CREATE table ppdm_vol_meas_regime (
VOLUME_REGIME_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REGIME_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PPDM_VOL_MEAS_USE'
CREATE table ppdm_vol_meas_use (
VOLUME_REGIME_ID  VARCHAR(20) NOT NULL,
REGIME_USE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOGRAPHIC_REGION  VARCHAR(20),
JURISDICTION  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PRODUCT'
CREATE table product (
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
CONVERSION_QUANTITY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PREFERRED_UOM  VARCHAR(20),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PRODUCT_COMPOSITION'
CREATE table product_composition (
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
SUBPRODUCT_TYPE  VARCHAR(20) NOT NULL,
CONVERSION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DEFINED_BY_BA_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FORMULA  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
PRODUCT_COMPONENT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_LEASE_UNIT'
CREATE table prod_lease_unit (
LEASE_UNIT_ID  VARCHAR(20) NOT NULL,
ACREAGE DECIMAL(12,2),
ACREAGE_OUOM  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
CURRENT_OPERATOR  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
DISTRICT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID  VARCHAR(20),
GEOLOGIC_PROVINCE  VARCHAR(20),
GOVERNMENT_LEASE_UNIT_ID  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LEASE_UNIT_NAME  VARCHAR(60),
LEASE_UNIT_SHORT_NAME  VARCHAR(30),
LEASE_UNIT_STATUS  VARCHAR(20),
LEASE_UNIT_TYPE  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_LEASE_UNIT_ALIAS'
CREATE table prod_lease_unit_alias (
LEASE_UNIT_ID  VARCHAR(20) NOT NULL,
LEASE_UNIT_SOURCE  VARCHAR(20) NOT NULL,
PROD_LEASE_UNIT_ALIAS_ID  VARCHAR(20) NOT NULL,
ALIAS_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_LEASE_UNIT_AREA'
CREATE table prod_lease_unit_area (
LEASE_UNIT_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_LEASE_UNIT_VERSION'
CREATE table prod_lease_unit_version (
LEASE_UNIT_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACREAGE DECIMAL(12,2),
ACREAGE_OUOM  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
CURRENT_OPERATOR  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
DISTRICT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_ID  VARCHAR(20),
GEOLOGIC_PROVINCE  VARCHAR(20),
GOVERNMENT_LEASE_UNIT_ID  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LEASE_UNIT_NAME  VARCHAR(60),
LEASE_UNIT_SHORT_NAME  VARCHAR(30),
LEASE_UNIT_STATUS  VARCHAR(20),
LEASE_UNIT_TYPE  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_STRING'
CREATE table prod_string (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
COMMINGLED_IND  VARCHAR(1),
CURRENT_STATUS  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
GOVERNMENT_STRING_ID  VARCHAR(20),
LEASE_UNIT_ID  VARCHAR(20),
ON_INJECTION_DATE TIMESTAMP(0),
ON_PRODUCTION_DATE TIMESTAMP(0),
PLOT_SYMBOL  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROD_STRING_TVD DECIMAL(10,5),
PROD_STRING_TVD_OUOM  VARCHAR(20),
PROD_STRING_TYPE  VARCHAR(20),
PROFILE_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
STATUS_TYPE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
TAX_CREDIT_CODE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOTAL_DEPTH DECIMAL(10,5),
TOTAL_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_STRING_ALIAS'
CREATE table prod_string_alias (
UWI  VARCHAR(20) NOT NULL,
PROD_STRING_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_STRING_COMPONENT'
CREATE table prod_string_component (
UWI  VARCHAR(20) NOT NULL,
PR_STR_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_COMPONENT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20)
,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_STRING_FORMATION'
CREATE table prod_string_formation (
UWI  VARCHAR(20) NOT NULL,
PROD_STRING_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
PR_STR_FORM_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ALLOCATION_FACTOR DECIMAL(10,5),
ALLOCATION_TYPE  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
COMPLETION_OBS_NO INT,
CURRENT_STATUS  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_STRING_FORM_ALIAS'
CREATE table prod_string_form_alias (
UWI  VARCHAR(20) NOT NULL,
PROD_STRING_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
PR_STR_FORM_OBS_NO INT,
SOURCE  VARCHAR(20) NOT NULL,
PROD_STRING_FORM_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROD_STR_STAT_HIST'
CREATE table prod_str_stat_hist (
UWI  VARCHAR(20) NOT NULL,
PROD_STRING_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
STATUS_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_TIME TIMESTAMP(0),
STATUS  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
TIMEZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT'
CREATE table project (
PROJECT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPLETE_DATE TIMESTAMP(0),
CONFIDENTIAL_IND  VARCHAR(1),
CONFIDENTIAL_RELEASE_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_STATION_IND  VARCHAR(1),
LAND_RIGHT_IND  VARCHAR(1),
PDEN_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PROJECT_NAME  VARCHAR(240),
PROJECT_NUM  VARCHAR(30),
PROJECT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_SET_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
STRAT_COLUMN_IND  VARCHAR(1),
STRAT_INTERPRETATION_IND  VARCHAR(1),
WELL_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_ALIAS'
CREATE table project_alias (
PROJECT_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_BA'
CREATE table project_ba (
PROJECT_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_BA_ROLE'
CREATE table project_ba_role (
PROJECT_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ROLE  VARCHAR(20) NOT NULL,
ROLE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_COMPONENT'
CREATE table project_component (
PROJECT_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_REASON  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONDITION_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_LICENSE_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FIELD_SOURCE  VARCHAR(20),
FIELD_STATION_ID BIGINT,
FIELD_STRAT_INTERP_ID  VARCHAR(20),
FIELD_STRAT_UNIT_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
HSE_INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INPUT_IND  VARCHAR(1),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
LITH_SAMPLE_ID  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
OTHER_PROJECT_ID  VARCHAR(20),
OUTPUT_IND  VARCHAR(1),
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_PLAN_ID  VARCHAR(20),
PROJECT_STEP_ID  VARCHAR(20),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RESERVE_PRODUCT_TYPE  VARCHAR(20),
RESERVE_REVISION_ID  VARCHAR(20)
,
RESERVE_REVISION_OBS_NO INT,
RESERVE_SUMMARY_ID  VARCHAR(20),
RESERVE_SUMMARY_OBS_NO INT,
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_LICENSE_ID  VARCHAR(20),
SEIS_PROC_PLAN_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_COLUMN_ID  VARCHAR(20),
STRAT_COLUMN_SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_INT_INTERP_ID  VARCHAR(20),
WELL_INT_SOURCE  VARCHAR(20),
WELL_INT_STRAT_UNIT_ID  VARCHAR(20),
WELL_INT_UWI  VARCHAR(20),
WELL_LICENSE_ID  VARCHAR(20),
WELL_LICENSE_SOURCE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_CONDITION'
CREATE table project_condition (
PROJECT_ID  VARCHAR(20) NOT NULL,
CONDITION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROJECT_CONDITION  VARCHAR(20),
PROJECT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_EQUIPMENT'
CREATE table project_equipment (
PROJECT_ID  VARCHAR(20) NOT NULL,
EQUIPMENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CATALOGUE_EQUIP_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
OPERATED_BY_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_EQUIP_ROLE'
CREATE table project_equip_role (
PROJECT_ID  VARCHAR(20) NOT NULL,
EQUIPMENT_OBS_NO INT,
EQUIPMENT_ROLE  VARCHAR(20) NOT NULL,
ROLE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATED_BY_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_PLAN'
CREATE table project_plan (
PROJECT_PLAN_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLAN_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROJECT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_PLAN_STEP'
CREATE table project_plan_step (
PROJECT_PLAN_ID  VARCHAR(20) NOT NULL,
PLAN_STEP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STEP_NAME  VARCHAR(255),
STEP_RULE  VARCHAR(240),
STEP_SEQ_NO INT,
STEP_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_PLAN_STEP_XREF'
CREATE table project_plan_step_xref (
PROJECT_PLAN_ID  VARCHAR(20) NOT NULL,
PLAN_STEP_ID  VARCHAR(20) NOT NULL,
PLAN_STEP_ID2  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STEP_RULE  VARCHAR(240),
STEP_XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_STATUS'
CREATE table project_status (
PROJECT_ID  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DEFINED_BY_BA_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATUS  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
STEP_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_STEP'
CREATE table project_step (
PROJECT_ID  VARCHAR(20) NOT NULL,
STEP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTUAL_END_DATE TIMESTAMP(0),
ACTUAL_START_DATE TIMESTAMP(0),
ACTUAL_TIME DECIMAL(10,5),
ACTUAL_TIME_OUOM  VARCHAR(20),
ACTUAL_TIME_UOM  VARCHAR(20),
CRITICAL_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(2000),
DUE_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
ESTIMATED_TIME DECIMAL(10,5),
ESTIMATED_TIME_OUOM  VARCHAR(20),
ESTIMATED_TIME_UOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PLAN_END_DATE TIMESTAMP(0),
PLAN_START_DATE TIMESTAMP(0),
PLAN_STEP_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_PLAN_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STEP_NAME  VARCHAR(255),
STEP_SEQ_NO INT,
STEP_TYPE  VARCHAR(20),
WHERE_COMPLETED  VARCHAR(240),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_STEP_BA'
CREATE table project_step_ba (
PROJECT_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
ROLE  VARCHAR(20) NOT NULL,
ROLE_SEQ_NO INT,
STEP_ID  VARCHAR(20) NOT NULL,
STEP_BA_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTUAL_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLAN_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_STEP_EQUIP'
CREATE table project_step_equip (
PROJECT_ID  VARCHAR(20) NOT NULL,
EQUIPMENT_OBS_NO INT,
EQUIPMENT_ROLE  VARCHAR(20) NOT NULL,
ROLE_SEQ_NO INT,
STEP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATED_BY_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_STEP_TIME'
CREATE table project_step_time (
PROJECT_ID  VARCHAR(20) NOT NULL,
STEP_ID  VARCHAR(20) NOT NULL,
TIME_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLAN_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
TOTAL_TIME DECIMAL(10,5),
TOTAL_TIME_OUOM  VARCHAR(20),
TOTAL_TIME_UOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJECT_STEP_XREF'
CREATE table project_step_xref (
PROJECT_ID  VARCHAR(20) NOT NULL,
STEP_ID1  VARCHAR(20) NOT NULL,
STEP_ID2  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STEP_SEQ_NO INT,
STEP_XREF_TYPE  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PROJ_STEP_CONDITION'
CREATE table proj_step_condition (
PROJECT_ID  VARCHAR(20) NOT NULL,
PROJECT_STEP_ID  VARCHAR(20) NOT NULL,
CONDITION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROJECT_CONDITION  VARCHAR(20),
PROJECT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
REQUIRED_STEP_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PR_LSE_UNIT_STR_HIST'
CREATE table pr_lse_unit_str_hist (
UWI  VARCHAR(20) NOT NULL,
PROD_STRING_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
LEASE_UNIT_ID  VARCHAR(20) NOT NULL,
START_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PR_STR_FORM_COMPLETION'
CREATE table pr_str_form_completion (
UWI  VARCHAR(20) NOT NULL,
PROD_STRING_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
PR_STR_FORM_OBS_NO INT,
COMPLETION_SOURCE  VARCHAR(20) NOT NULL,
COMPLETION_OBS_NO INT,
FORM_COMPLETION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
COMPLETION_STATUS  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE PR_STR_FORM_STAT_HIST'
CREATE table pr_str_form_stat_hist (
UWI  VARCHAR(20) NOT NULL,
PROD_STRING_SOURCE  VARCHAR(20) NOT NULL,
STRING_ID  VARCHAR(20) NOT NULL,
PR_STR_FORM_OBS_NO INT,
STATUS_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_TIME TIMESTAMP(0),
STATUS  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
TIMEZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RATE_AREA'
CREATE table rate_area (
RATE_SCHEDULE_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RATE_SCHEDULE'
CREATE table rate_schedule (
RATE_SCHEDULE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CHANGE_NOTICE  VARCHAR(30),
CITY_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DISTRICT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ADD_OBS_NO INT,
OWNER_BA_ADD_SOURCE  VARCHAR(20),
OWNER_BA_ID  VARCHAR(20),
PAY_METHOD  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_CURRENCY_UOM  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
REVIEW_FREQUENCY  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RATE_SCHEDULE_COMPONENT'
CREATE table rate_schedule_component (
RATE_SCHEDULE_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_COMPONENT_TYPE  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20)
,
WELL_ACTIVITY_UWI  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RATE_SCHEDULE_XREF'
CREATE table rate_schedule_xref (
RATE_SCHEDULE_ID_2  VARCHAR(20) NOT NULL,
RATE_SCHEDULE_ID_1  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RATE_SCHEDULE_XREF_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RATE_SCHED_DETAIL'
CREATE table rate_sched_detail (
RATE_SCHEDULE_ID  VARCHAR(20) NOT NULL,
RATE_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NAT_CURRENCY_CONVERSION DECIMAL(10,5),
NAT_CURRENCY_UOM  VARCHAR(20),
PERIOD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RATE_CONDITION  VARCHAR(20),
RATE_COST DECIMAL(12,2),
RATE_COST_UOM  VARCHAR(20),
RATE_FORMULA  VARCHAR(240),
RATE_PERCENT DECIMAL(15,12),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TAXABLE_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REPORT_HIER'
CREATE table report_hier (
REPORT_HIERARCHY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIERARCHY_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REPORT_HIER_ALIAS'
CREATE table report_hier_alias (
REPORT_HIERARCHY_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REPORT_HIER_DESC'
CREATE table report_hier_desc (
HIERARCHY_TYPE_ID  VARCHAR(20) NOT NULL,
LEVEL_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_NAME  VARCHAR(255),
LEVEL_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SYSTEM_ID  VARCHAR(20),
TABLE_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REPORT_HIER_LEVEL'
CREATE table report_hier_level (
REPORT_HIERARCHY_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
HIERARCHY_TYPE_ID  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LEVEL_SEQ_NO INT,
PARENT_COMPONENT_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REPORT_HIER_TYPE'
CREATE table report_hier_type (
HIERARCHY_TYPE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIERARCHY_NAME  VARCHAR(255),
HIERARCHY_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REPORT_HIER_USE'
CREATE table report_hier_use (
REPORT_HIERARCHY_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
HIERARCHY_USE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CONTRIBUTION_PERCENT DECIMAL(15,12),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
RESENT_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
SUBSTANCE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_CLASS'
CREATE table resent_class (
RESENT_ID  VARCHAR(20) NOT NULL,
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONFIDENCE_FACTOR DECIMAL(10,7),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_COMPONENT'
CREATE table resent_component (
RESENT_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_RESENT_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PERCENT_CONTRIBUTION DECIMAL(15,12),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
RESENT_COMPONENT_TYPE  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20)
,
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_ECO_RUN'
CREATE table resent_eco_run (
RESENT_ID  VARCHAR(20) NOT NULL,
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
ECONOMICS_RUN_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
ECONOMIC_FORECAST DECIMAL(8,2),
ECONOMIC_SCENARIO  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_IND  VARCHAR(1),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
NET_IND  VARCHAR(1),
NET_PRESENT_VALUE DECIMAL(12,2),
PARTNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESERVE_LIFE_INDEX DECIMAL(8,2),
SOURCE  VARCHAR(20),
TECH_FORECAST DECIMAL(8,2),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_ECO_SCHEDULE'
CREATE table resent_eco_schedule (
RESENT_ID  VARCHAR(20) NOT NULL,
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
ECONOMICS_RUN_ID  VARCHAR(20) NOT NULL,
SCHEDULE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATE_FORMAT_DESC  VARCHAR(20),
ECONOMIC_SCHEDULE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PERIOD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRODUCT_IND  VARCHAR(1),
PRODUCT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SCHEDULE_DATE  VARCHAR(20),
SCHEDULE_DESC  VARCHAR(240),
SCHEDULE_VALUE DECIMAL(15,5),
SCHEDULE_VALUE_OUOM  VARCHAR(20),
SCHEDULE_VALUE_UOM  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_ECO_VOLUME'
CREATE table resent_eco_volume (
RESENT_ID  VARCHAR(20) NOT NULL,
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
ECONOMICS_RUN_ID  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
SUMMARY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMAINING_BALANCE DECIMAL(14,4),
REMAINING_BALANCE_DATE TIMESTAMP(0),
REMAINING_BALANCE_OUOM  VARCHAR(20),
REMAINING_BALANCE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_PRODUCT'
CREATE table resent_product (
RESENT_ID  VARCHAR(20) NOT NULL,
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_PROD_PROPERTY'
CREATE table resent_prod_property (
RESENT_ID  VARCHAR(20) NOT NULL,
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
PROPERTY_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEAT_CONTENT DECIMAL(10,5),
HEAT_CONTENT_OUOM  VARCHAR(20),
LOSS_FACTOR DECIMAL(10,5),
OIL_DENSITY DECIMAL(10,5),
OIL_DENSITY_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SULPHUR_CONTENT DECIMAL(10,5),
SULPHUR_CONTENT_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_REVISION_CAT'
CREATE table resent_revision_cat (
REVISION_CATEGORY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CATEGORY_NAME  VARCHAR(255),
CATEGORY_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_IND  VARCHAR(1),
NET_IND  VARCHAR(1),
PART_OF_CATEGORY_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_VOL_REGIME'
CREATE table resent_vol_regime (
RESENT_ID  VARCHAR(20) NOT NULL,
VOLUME_REGIME_ID  VARCHAR(20) NOT NULL,
RESENT_REGIME_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_VOL_REVISION'
CREATE table resent_vol_revision (
RESENT_ID  VARCHAR(20) NOT NULL,
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
REVISION_ID  VARCHAR(20) NOT NULL,
REVISION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYST_BA_ID  VARCHAR(20),
APPROVED_BY_BA_ID  VARCHAR(20),
APPROVED_DATE TIMESTAMP(0),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_REVISION_IND  VARCHAR(1),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
NET_REVISION_IND  VARCHAR(1),
NEW_VOLUME DECIMAL(14,4),
NEW_VOLUME_OUOM  VARCHAR(20),
NEW_VOLUME_UOM  VARCHAR(20),
PARTNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
REVISION_CATEGORY_ID  VARCHAR(20),
REVISION_DATE TIMESTAMP(0),
REVISION_METHOD  VARCHAR(20),
REVISION_VOLUME DECIMAL(14,4),
REVISION_VOLUME_OUOM  VARCHAR(20),
REVISION_VOLUME_UOM  VARCHAR(20),
SOURCE  VARCHAR(20),
SUMMARY_ID  VARCHAR(20),
SUMMARY_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_VOL_SUMMARY'
CREATE table resent_vol_summary (
RESENT_ID  VARCHAR(20) NOT NULL,
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
SUMMARY_ID  VARCHAR(20) NOT NULL,
SUMMARY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYST_BA_ID  VARCHAR(20),
APPROVED_BY_BA_ID  VARCHAR(20),
APPROVED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
CURRENT_BALANCE DECIMAL(14,4),
CURRENT_BALANCE_OUOM  VARCHAR(20),
CURRENT_BALANCE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DECLINE_CASE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SUMMARY_IND  VARCHAR(1),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_PARTNER  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
MATERIAL_BALANCE_CASE_ID  VARCHAR(20),
NET_SUMMARY_IND  VARCHAR(1),
OPEN_BALANCE DECIMAL(14,4),
OPEN_BALANCE_OUOM  VARCHAR(20),
OPEN_BALANCE_UOM  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_PRODUCT_TYPE  VARCHAR(20),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
VOLUME_METHOD  VARCHAR(20),
VOL_ANAL_CASE_ID  VARCHAR(20),
YIELD_OUOM  VARCHAR(20),
YIELD_PARENT_PRODUCT  VARCHAR(20),
YIELD_RATE DECIMAL(14,4),
YIELD_UOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESENT_XREF'
CREATE table resent_xref (
RESENT_ID  VARCHAR(20) NOT NULL,
RESENT_ID2  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESERVE_CLASS'
CREATE table reserve_class (
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
CONFIDENCE_TYPE  VARCHAR(20),
DEVELOPED_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME  VARCHAR(255),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PRODUCTION_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
USE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESERVE_CLASS_CALC'
CREATE table reserve_class_calc (
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
FORMULA_ID  VARCHAR(20) NOT NULL,
CALCULATION_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CONTRIBUTION_FACTOR DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORIGIN_RESERVE_CLASS_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESERVE_CLASS_FORMULA'
CREATE table reserve_class_formula (
RESERVE_CLASS_ID  VARCHAR(20) NOT NULL,
FORMULA_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FORMULA  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
USE_RULE  VARCHAR(2000),
USE_SEQ_NO INT,
USE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESERVE_ENTITY'
CREATE table reserve_entity (
RESENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CREATED_BY_BA_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_TYPE  VARCHAR(20),
LAST_APPROVE_BA_ID  VARCHAR(20),
LAST_UPDATE_BA_ID  VARCHAR(20),
LAST_UPDATE_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PRIMARY_PRODUCT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORT_IND  VARCHAR(1),
RESENT_NAME  VARCHAR(255),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
UPDATE_SCHEDULE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RESTRICTION'
CREATE table restriction (
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_DATE_EVENT  VARCHAR(50),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REGULATORY_ACT  VARCHAR(240),
REMARK  VARCHAR(2000),
RESTRICTION_CLASS  VARCHAR(20),
RESTRICTION_NAME  VARCHAR(240),
RESTRICTION_TYPE  VARCHAR(20),
REST_DURATION_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
START_DATE TIMESTAMP(0),
START_DATE_EVENT  VARCHAR(50),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REST_ACTIVITY'
CREATE table rest_activity (
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
RESTRICTED_ACTIVITY  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REST_CLASS'
CREATE table rest_class (
RESTRICTION_CLASS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REST_CLASS_NAME  VARCHAR(240),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REST_CONTACT'
CREATE table rest_contact (
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
CONTACT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PHONE_NUM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRIMARY_CONTACT_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REST_REMARK'
CREATE table rest_remark (
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
RESTRICTION_REMARK_ID  VARCHAR(20) NOT NULL,
RESTRICTION_REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_CODE  VARCHAR(20),
REMARK_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE REST_TEXT'
CREATE table rest_text (
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
TEXT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REST_TEXT  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_AUX_CHANNEL'
CREATE table rm_aux_channel (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
CHANNEL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CHANNEL_NUM  VARCHAR(10),
CHANNEL_TYPE  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_CIRCULATION'
CREATE table rm_circulation (
CIRC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AUTHORIZED_BY  VARCHAR(30),
CHECKED_OUT_BY  VARCHAR(20),
CIRC_DUE_DATE TIMESTAMP(0),
CIRC_IN_DATE TIMESTAMP(0),
CIRC_OUT_DATE TIMESTAMP(0),
CONDITION_IN  VARCHAR(20),
CONDITION_OUT  VARCHAR(20),
DATA_CIRC_STATUS  VARCHAR(20),
DATA_CONTENT_SEQ_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
PROJECT_STEP_ID  VARCHAR(20),
REFERENCE_NUM  VARCHAR(20),
REMARK  VARCHAR(2000),
RESERVED_BY  VARCHAR(20),
RESERVED_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
STATUS_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_CIRC_PROCESS'
CREATE table rm_circ_process (
CIRC_ID  VARCHAR(20) NOT NULL,
DATA_CIRC_PROCESS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATA_CIRC_PROCESS  VARCHAR(20),
DATA_CIRC_PROCESS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_COMPOSITE'
CREATE table rm_composite (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_COPY_RECORD'
CREATE table rm_copy_record (
OLD_PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
NEW_PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
COPY_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NEW_RECORD_NUM INT,
OLD_RECORD_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_CREATOR'
CREATE table rm_creator (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
CREATOR_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CREATOR_BA_ID  VARCHAR(20),
CREATOR_BA_TYPE  VARCHAR(20),
CREATOR_NAME  VARCHAR(240),
CREATOR_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NAME  VARCHAR(255),
LAST_NAME  VARCHAR(255),
MIDDLE_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_CUSTODY'
CREATE table rm_custody (
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
CUSTODY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RECEIVE_BY  VARCHAR(20),
RECEIVE_DATE TIMESTAMP(0),
REGISTRATION_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SEND_BY  VARCHAR(20),
SEND_DATE TIMESTAMP(0),
SEND_METHOD  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_DATA_CONTENT'
CREATE table rm_data_content (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
DATA_CONTENT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STORE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_DATA_STORE'
CREATE table rm_data_store (
STORE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADDRESS_OBS_NO INT,
ADDRESS_SOURCE  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
CONTAINED_BY_STORE_ID  VARCHAR(20),
DATA_STORE_HIER_ID  VARCHAR(20),
DATA_STORE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIER_LEVEL_ID  VARCHAR(20),
LOCATION_ID  VARCHAR(40),
LONG_LOCATION  VARCHAR(500),
NAME  VARCHAR(255),
PHYSICAL_STORE_STATUS  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_LOCATION  VARCHAR(100),
SOURCE  VARCHAR(20),
TOTAL_CAPACITY BIGINT,
USED_CAPACITY BIGINT,
USED_CAPACITY_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_DATA_STORE_HIER'
CREATE table rm_data_store_hier (
DATA_STORE_HIER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HIERARCHY_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_DATA_STORE_HIER_LEVEL'
CREATE table rm_data_store_hier_level (
DATA_STORE_HIER_ID  VARCHAR(20) NOT NULL,
HIER_LEVEL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATA_STORE_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEVEL_NAME  VARCHAR(255),
LEVEL_SEQ_NO INT,
PARENT_HIER_LEVEL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_DATA_STORE_ITEM'
CREATE table rm_data_store_item (
STORE_ID  VARCHAR(20) NOT NULL,
STRUCTURE_OBS_NO INT,
ITEM_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ITEM_CATEGORY  VARCHAR(20),
ITEM_SUB_CATEGORY  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOTAL_CAPACITY BIGINT,
USED_CAPACITY BIGINT,
USED_CAPACITY_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_DATA_STORE_MEDIA'
CREATE table rm_data_store_media (
STORE_ID  VARCHAR(20) NOT NULL,
STRUCTURE_OBS_NO INT,
MEDIA_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MEDIA_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOTAL_CAPACITY BIGINT,
USED_CAPACITY BIGINT,
USED_CAPACITY_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_DATA_STORE_STRUCTURE'
CREATE table rm_data_store_structure (
STORE_ID  VARCHAR(20) NOT NULL,
STRUCTURE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DIM_HEIGHT DECIMAL(10,5),
DIM_HEIGHT_OUOM  VARCHAR(20),
DIM_HEIGHT_UOM  VARCHAR(20),
DIM_LENGTH DECIMAL(10,5),
DIM_LENGTH_OUOM  VARCHAR(20),
DIM_LENGTH_UOM  VARCHAR(20),
DIM_WEIGHT DECIMAL(10,5),
DIM_WEIGHT_OUOM  VARCHAR(20),
DIM_WEIGHT_UOM  VARCHAR(20),
DIM_WIDTH DECIMAL(10,5),
DIM_WIDTH_OUOM  VARCHAR(20),
DIM_WIDTH_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_CONTAINED_STORE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOTAL_CAPACITY BIGINT,
UPPER_CONTAINED_STORE_ID  VARCHAR(20),
USED_CAPACITY BIGINT,
USED_CAPACITY_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_DECRYPT_KEY'
CREATE table rm_decrypt_key (
DECRYPT_KEY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DECRYPTION_TYPE  VARCHAR(20),
DECRYPT_KEY  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_DOCUMENT'
CREATE table rm_document (
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DOCUMENT_STATUS  VARCHAR(20),
DOCUMENT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_ENCODING'
CREATE table rm_encoding (
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
ENCODING_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
DECRYPT_KEY_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ENCODING_TYPE  VARCHAR(20),
ENCODING_VERSION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_EQUIPMENT'
CREATE table rm_equipment (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_FILE_CONTENT'
CREATE table rm_file_content (
FILE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DIGITAL_FORMAT  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FILE_CONTENT  BYTEA,
FILE_SIZE DECIMAL(10,5),
FILE_SIZE_UOM  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_FOSSIL'
CREATE table rm_fossil (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TYPE_FOSSIL_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_IMAGE_COMP'
CREATE table rm_image_comp (
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
LOG_SECTION_ID_1  VARCHAR(20) NOT NULL,
LOG_SECTION_ID_2  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPOSITE_SEQ_NO INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_IMAGE_LOC'
CREATE table rm_image_loc (
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
LOG_SECTION_ID  VARCHAR(20) NOT NULL,
POSITION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOG_DEPTH DECIMAL(10,5),
LOG_DEPTH_OUOM  VARCHAR(20),
LOG_DEPTH_UOM  VARCHAR(20),
POSITION_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
X_POSITION BIGINT,
Y_POSITION BIGINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_IMAGE_SECT'
CREATE table rm_image_sect (
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
IMAGE_SECTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
CALIBRATED_BY_BA_ID  VARCHAR(20),
CALIBRATE_APPLICATION  VARCHAR(20),
CALIBRATE_METHOD  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
IMAGE_SECTION_TPE  VARCHAR(20),
INDEX_TYPE  VARCHAR(20),
LOG_MATRIX_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SCALE_DEPTH_INTERVAL DECIMAL(10,5),
SCALE_DEPTH_INTERVAL_OUOM  VARCHAR(20),
SCALE_DEPTH_INTERVAL_UOM  VARCHAR(20),
SCALE_LENGTH INT,
SCALE_LENGTH_OUOM  VARCHAR(20),
SCALE_LENGTH_UOM  VARCHAR(20),
SCALE_RATIO  VARCHAR(240),
SECTION_DESC  VARCHAR(240),
SOURCE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
WELL_LOG_CLASS  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFORMATION_ITEM'
CREATE table rm_information_item (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
ABSTRACT  VARCHAR(2000),
ACCEPTED_DATE TIMESTAMP(0),
ACCESS_CONDITION  VARCHAR(2000),
ACTIVE_IND  VARCHAR(1),
AVAILABLE_DATE TIMESTAMP(0),
COORD_ACQUISITION_ID  VARCHAR(20),
COPYRIGHT_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID  VARCHAR(20),
GROUP_IND  VARCHAR(1),
INFO_ITEM_NUMERIC_ID BIGINT,
ISSUE_DATE TIMESTAMP(0),
ITEM_CATEGORY  VARCHAR(20),
ITEM_SUB_CATEGORY  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
MAP_COORD_SYSTEM_ID  VARCHAR(20),
MAX_LATITUDE DECIMAL(14,9),
MAX_LONGITUDE DECIMAL(14,9),
MIN_LATITUDE DECIMAL(14,9),
MIN_LONGITUDE DECIMAL(14,9),
MODIFIED_DATE TIMESTAMP(0),
ORIGIN_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PUBLISH_DATE TIMESTAMP(0),
PURPOSE  VARCHAR(2000),
REFERENCE_NUM  VARCHAR(240),
REMARK  VARCHAR(2000),
SECURITY_DESC  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SUBMIT_DATE TIMESTAMP(0),
TIME_PERIOD_DESC  VARCHAR(240),
TITLE  VARCHAR(240),
USE_CONDITION  VARCHAR(2000),
VERSION_NUM  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_COORD_QUALITY'
CREATE table rm_info_coord_quality (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
QUALITY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPLETENESS_DESC  VARCHAR(1024),
COORD_ACCURACY_DESC  VARCHAR(2000),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_QUALITY  VARCHAR(20),
COORD_QUALITY_DESC  VARCHAR(1024),
CORRECTED_DATE TIMESTAMP(0),
DEFICIENCY_IND  VARCHAR(1),
DEFICIENCY_TYPE  VARCHAR(20),
DESCRIBED_BY_BA_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HORIZONTAL_ACCURACY DECIMAL(10,5),
HORIZONTAL_ACCURACY_DESC  VARCHAR(240),
HORIZONTAL_ACCURACY_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
QUALITY_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VERTICAL_ACCURACY DECIMAL(10,5),
VERTICAL_ACCURACY_DESC  VARCHAR(240),
VERTICAL_ACCURACY_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_DATA_QUALITY'
CREATE table rm_info_data_quality (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
QUALITY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ATTRIBUTE_ACCURACY  VARCHAR(20),
ATTRIBUTE_ACCURACY_DESC  VARCHAR(2000),
COMPLETENESS_DESC  VARCHAR(1024),
CORRECTED_DATE TIMESTAMP(0),
DEFICIENCY_IND  VARCHAR(1),
DEFICIENCY_TYPE  VARCHAR(20),
DESCRIBED_BY_BA_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_QUALITY  VARCHAR(20),
INFORMATION_QUALITY_DESC  VARCHAR(1024),
PPDM_GUID  VARCHAR(38),
QUALITY_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_ITEM_ALIAS'
CREATE table rm_info_item_alias (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_ITEM_BA'
CREATE table rm_info_item_ba (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
CONTACT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONTACT_BA_ID  VARCHAR(20),
CONTACT_BA_TYPE  VARCHAR(20),
CONTACT_NAME  VARCHAR(240),
CONTACT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NAME  VARCHAR(255),
INSTRUCTION  VARCHAR(2000),
LAST_NAME  VARCHAR(255),
MIDDLE_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_ITEM_CONTENT'
CREATE table rm_info_item_content (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
CONTENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
APPLIC_ATTACHMENT_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
COLUMN_NAME  VARCHAR(30),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTENT_TYPE  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DISCUSSION_ID  VARCHAR(20),
DRILL_REPORT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
ECOZONE_SET_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_LICENSE_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_DESC_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
HSE_INCIDENT_ID  VARCHAR(20),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
INTERP_ID  VARCHAR(20),
JURISDICTION  VARCHAR(20),
LAND_REQUEST_ID  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LAND_SALE_OFFERING_ID  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
LITH_SAMPLE_ID  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
ORGANIZATION_ID  VARCHAR(20),
ORGANIZATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_CUSTODY_ID  VARCHAR(20),
PHYSICAL_ITEM_ID  VARCHAR(20),
PLATFORM_ID  VARCHAR(20),
PLATFORM_SF_TYPE  VARCHAR(30),
POOL_ID  VARCHAR(20),
PPDM_AUDIT_ROW_GUID  VARCHAR(38),
PPDM_AUDIT_SEQ_NO INT,
PPDM_GUID  VARCHAR(38),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PROJECT_STEP_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RESERVE_PRODUCT  VARCHAR(20),
RESERVE_REVISION_ID  VARCHAR(20),
RESERVE_REVISION_OBS_NO INT,
RESERVE_SUMMARY_ID  VARCHAR(20),
RESERVE_SUMMARY_OBS_NO INT,
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_LICENSE_ID  VARCHAR(20),
SEIS_PATCH_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20)
,
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STRAT_COLUMN_ID  VARCHAR(20),
STRAT_COLUMN_SOURCE  VARCHAR(20),
STRAT_FIELD_STATION_ID BIGINT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
SUPPORT_FACILITY_TYPE  VARCHAR(30),
SYSTEM_ID  VARCHAR(20),
TABLE_NAME  VARCHAR(30),
UWI  VARCHAR(20),
VELOCITY_VOLUME_ID  VARCHAR(20),
WC_CORE_ID  VARCHAR(20),
WC_SOURCE  VARCHAR(20),
WC_UWI  VARCHAR(20),
WDS_SOURCE  VARCHAR(20),
WDS_SURVEY_ID  VARCHAR(20),
WDS_UWI  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_LICENSE_ID  VARCHAR(20),
WELL_LICENSE_SOURCE  VARCHAR(20),
WELL_LOG_CURVE_ID  VARCHAR(20),
WELL_LOG_ID  VARCHAR(20),
WELL_LOG_SOURCE  VARCHAR(20),
WL_DGTZ_CURVE_ID  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
WTF_FLUID_TYPE  VARCHAR(20),
WTF_PERIOD_OBS_NO INT,
WTF_PERIOD_TYPE  VARCHAR(20),
WTF_RUN_NUM  VARCHAR(4),
WTF_SOURCE  VARCHAR(20),
WTF_TEST_NUM  VARCHAR(4),
WTF_TEST_TYPE  VARCHAR(20),
WTP_PERIOD_OBS_NO INT,
WTP_PERIOD_TYPE  VARCHAR(20),
WTP_RUN_NUM  VARCHAR(4),
WTP_SOURCE  VARCHAR(20),
WTP_TEST_NUM  VARCHAR(4),
WTP_TEST_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_ITEM_DESC'
CREATE table rm_info_item_desc (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
DESCRIPTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
DESCRIPTION_DATE TIMESTAMP(0),
DESCRIPTION_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
METADATA_CODE  VARCHAR(20),
METADATA_TYPE  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPEC_DESC  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_ITEM_GEOMETRY'
CREATE table rm_info_item_geometry (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
GEOMETRY_FORMAT  VARCHAR(20) NOT NULL,
GEOMETRY_ID  VARCHAR(20) NOT NULL,
GEOMETRY_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOMETRY_DATE TIMESTAMP(0),
GEOMETRY_SOURCE  VARCHAR(20),
GEOMETRY_TYPE  VARCHAR(20),
INFO_ITEM_NUMERIC_ID BIGINT,
OBJECT_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_ITEM_GROUP'
CREATE table rm_info_item_group (
GROUP_INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
GROUP_INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
GROUP_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_SEQ_NO INT,
GROUP_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_ITEM_MAINT'
CREATE table rm_info_item_maint (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
MAINTAIN_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTRUCTION  VARCHAR(2000),
MAINT_BA_ID  VARCHAR(20),
MAINT_COMPLETE_DATE TIMESTAMP(0),
MAINT_DUE_DATE TIMESTAMP(0),
MAINT_PERIOD DECIMAL(10,5),
MAINT_PERIOD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SCHEDULED_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_ITEM_ORIGIN'
CREATE table rm_info_item_origin (
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
ORIGIN_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_PROCESS  VARCHAR(20),
PARENT_INFORMATION_ITEM_ID  VARCHAR(20),
PARENT_INFO_ITEM_TYPE  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
PROCESSOR  VARCHAR(20),
PROCESS_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VERSION  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_INFO_ITEM_STATUS'
CREATE table rm_info_item_status (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATUS  VARCHAR(20),
STATUS_DATE TIMESTAMP(0),
STATUS_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_KEYWORD'
CREATE table rm_keyword (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
KEYWORD_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_KEYWORD  VARCHAR(240),
SOURCE  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_LITH_SAMPLE'
CREATE table rm_lith_sample (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_MAP'
CREATE table rm_map (
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAP_SCALE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_PHYSICAL_ITEM'
CREATE table rm_physical_item (
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BAR_CODE  VARCHAR(240),
CATALOGUE_DATE TIMESTAMP(0),
CATALOGUE_NAME  VARCHAR(20),
CERTIFIED_TRUE_COPY_IND  VARCHAR(1),
CIRCULATION_ALLOWED_IND  VARCHAR(1),
CIRCULATION_OUT_IND  VARCHAR(1),
COLOR_FORMAT  VARCHAR(20),
CREATE_DATE TIMESTAMP(0),
DIGITAL_DENSITY DECIMAL(10,5),
DIGITAL_FORMAT  VARCHAR(20),
DIGITAL_SIZE DECIMAL(10,3),
DIGITAL_SIZE_UOM  VARCHAR(20),
DIM_HEIGHT DECIMAL(10,5),
DIM_HEIGHT_UOM  VARCHAR(20),
DIM_LENGTH DECIMAL(10,5),
DIM_LENGTH_UOM  VARCHAR(20),
DIM_WEIGHT DECIMAL(10,5),
DIM_WEIGHT_UOM  VARCHAR(20),
DIM_WIDTH DECIMAL(10,5),
DIM_WIDTH_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FILE_COUNT SMALLINT,
GROUP_IND  VARCHAR(1),
IMAGE_RESOLUTION_UOM  VARCHAR(20),
IMAGE_X_RESOLUTION DECIMAL(10,5),
IMAGE_Y_RESOLUTION DECIMAL(10,5),
ITEM_CATEGORY  VARCHAR(20),
ITEM_SUB_CATEGORY  VARCHAR(20),
LABEL  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LAST_CONDITION  VARCHAR(20),
LOCATION_REFERENCE  VARCHAR(30),
MEDIA_TYPE  VARCHAR(20),
ORIGINAL_FILE_NAME  VARCHAR(240),
ORIGINAL_IND  VARCHAR(1),
OUTPUT_FILE_NAME  VARCHAR(240),
PAGE_COUNT DECIMAL(10,5),
PHYSICAL_ITEM_STATUS  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
QC_NAME  VARCHAR(20),
REMARK  VARCHAR(2000),
RETENTION_PERIOD  VARCHAR(20),
SALE_ALLOWED_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
STORE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_PHYS_ITEM_CONDITION'
CREATE table rm_phys_item_condition (
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
ORIGIN_SEQ_NO INT,
CONDITION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_TYPE  VARCHAR(20),
CORRECTION_METHOD  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
ERROR_COUNT BIGINT,
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_PHYS_ITEM_GROUP'
CREATE table rm_phys_item_group (
GROUP_PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
GROUP_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROUP_TYPE  VARCHAR(20),
ORDER_SEQ_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_PHYS_ITEM_MAINT'
CREATE table rm_phys_item_maint (
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
MAINT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTUAL_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_PROCESS  VARCHAR(20),
MAINT_BA_ID  VARCHAR(20),
MAINT_NAME  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SCHEDULED_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_PHYS_ITEM_ORIGIN'
CREATE table rm_phys_item_origin (
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
ORIGIN_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARENT_PHYSICAL_ITEM_ID  VARCHAR(20),
PHYSICAL_PROCESS  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROCESS_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VERSION  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_PHYS_ITEM_STORE'
CREATE table rm_phys_item_store (
STORE_ID  VARCHAR(20) NOT NULL,
PHYSICAL_ITEM_ID  VARCHAR(20) NOT NULL,
STORE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CREATE_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PHYSICAL_ITEM_STATUS  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_LOCATION_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_SEIS_TRACE'
CREATE table rm_seis_trace (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATUM_VEL_CORRECTION  VARCHAR(240),
DATUM_VEL_CORRECTION_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_SAMPLE_TIME DECIMAL(6,2),
FIRST_SAMPLE_TIME_OUOM  VARCHAR(20),
HORIZONTAL_SCALE  VARCHAR(8),
HORIZONTAL_SCALE_OUOM  VARCHAR(20),
PHASE  VARCHAR(20),
POLARITY  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECORD_LENGTH DECIMAL(10,5),
RECORD_LENGTH_OUOM  VARCHAR(20),
REFERENCE_DATUM DECIMAL(10,5),
REFERENCE_DATUM_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
REPLACEMENT_VEL DECIMAL(10,5),
REPLACEMENT_VEL_OUOM  VARCHAR(20),
REPORTED_FIRST_REF_NUM  VARCHAR(30),
REPORTED_LAST_REF_NUM  VARCHAR(30),
REPORTED_REF_NUM_TYPE  VARCHAR(20),
SAMPLE_RATE SMALLINT,
SAMPLE_RATE_OUOM  VARCHAR(20),
SAMPLE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
STATIC_CORRECTION DECIMAL(10,5),
STATIC_CORRECTION_OUOM  VARCHAR(20),
VARIABLE_AREA_IND  VARCHAR(1),
VERTICAL_SCALE  VARCHAR(8),
VERTICAL_SCALE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_SPATIAL_DATASET'
CREATE table rm_spatial_dataset (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_THESAURUS'
CREATE table rm_thesaurus (
THESAURUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
THESAURUS_NAME  VARCHAR(255),
THESAURUS_VERSION  VARCHAR(12),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_THESAURUS_GLOSSARY'
CREATE table rm_thesaurus_glossary (
THESAURUS_ID  VARCHAR(20) NOT NULL,
THESAURUS_WORD_ID  VARCHAR(20) NOT NULL,
GLOSSARY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GLOSSARY_DEFINITION  VARCHAR(2000),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_THESAURUS_WORD'
CREATE table rm_thesaurus_word (
THESAURUS_ID  VARCHAR(20) NOT NULL,
THESAURUS_WORD_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
THESAURUS_WORD  VARCHAR(255),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_THESAURUS_WORD_XREF'
CREATE table rm_thesaurus_word_xref (
THESAURUS_ID1  VARCHAR(20) NOT NULL,
THESAURUS_WORD_ID1  VARCHAR(20) NOT NULL,
THESAURUS_ID2  VARCHAR(20) NOT NULL,
THESAURUS_WORD_ID2  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RELATIONSHIP_DESCRIPTION  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
THESAURUS_XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_TRACE_HEADER'
CREATE table rm_trace_header (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
HEADER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEADER_FORMAT  VARCHAR(20),
HEADER_OFFSET DECIMAL(10,5),
HEADER_WORD  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
WORD_LENGTH DECIMAL(10,5),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE RM_WELL_LOG'
CREATE table rm_well_log (
INFORMATION_ITEM_ID  VARCHAR(20) NOT NULL,
INFO_ITEM_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DISPLAY_INTERVAL DECIMAL(10,5),
DISPLAY_INTERVAL_UOM  VARCHAR(20),
DISPLAY_SCALE DECIMAL(10,5),
DISPLAY_SCALE_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_BASE_DEPTH DECIMAL(10,5),
REPORTED_BASE_DEPTH_OUOM  VARCHAR(20),
REPORTED_TOP_DEPTH DECIMAL(10,5),
REPORTED_TOP_DEPTH_OUOM  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ACCESS_CONDITION'
CREATE table r_access_condition (
ACCESS_CONDITION_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ACCOUNT_PROC_TYPE'
CREATE table r_account_proc_type (
ACCOUNT_PROC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ACTIVITY_SET_TYPE'
CREATE table r_activity_set_type (
ACTIVITY_SET_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ACTIVITY_TYPE'
CREATE table r_activity_type (
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ADDITIVE_METHOD'
CREATE table r_additive_method (
ADDITIVE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ADDITIVE_TYPE'
CREATE table r_additive_type (
ADDITIVE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ADDRESS_TYPE'
CREATE table r_address_type (
ADDRESS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AIRCRAFT_TYPE'
CREATE table r_aircraft_type (
AIRCRAFT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AIR_GAS_CODE'
CREATE table r_air_gas_code (
AIR_GAS_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ALIAS_REASON_TYPE'
CREATE table r_alias_reason_type (
REASON_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ALIAS_TYPE'
CREATE table r_alias_type (
ALIAS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ALLOCATION_TYPE'
CREATE table r_allocation_type (
ALLOCATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ALLOWABLE_EXPENSE'
CREATE table r_allowable_expense (
ALLOWABLE_EXPENSE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ANALYSIS_PROPERTY'
CREATE table r_analysis_property (
ANALYSIS_PROPERTY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ANALYSIS_REPORT'
CREATE table r_analysis_report (
ANALYSIS_REPORT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ANAL_PROPERTY_CODE'
CREATE table r_anal_property_code (
ANALYSIS_PROPERTY  VARCHAR(20) NOT NULL,
PROPERTY_VALUE_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AOF_ANALYSIS_TYPE'
CREATE table r_aof_analysis_type (
AOF_ANALYSIS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AOF_CALC_METHOD'
CREATE table r_aof_calc_method (
AOF_CALCULATE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_API_LOG_SYSTEM'
CREATE table r_api_log_system (
API_CODE_SYSTEM  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_APPLICATION_COMP_TYPE'
CREATE table r_application_comp_type (
APPLICATION_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_APPLIC_ATTACHMENT'
CREATE table r_applic_attachment (
ATTACHMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_APPLIC_BA_ROLE'
CREATE table r_applic_ba_role (
APPLICATION_BA_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_APPLIC_DECISION'
CREATE table r_applic_decision (
APPLICATION_DECISION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_APPLIC_DESC'
CREATE table r_applic_desc (
APPLICATION_TYPE  VARCHAR(20) NOT NULL,
APPLIC_DESC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_APPLIC_REMARK_TYPE'
CREATE table r_applic_remark_type (
REMARK_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_APPLIC_STATUS'
CREATE table r_applic_status (
APPLICATION_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_APPLIC_TYPE'
CREATE table r_applic_type (
APPLICATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AREA_COMPONENT_TYPE'
CREATE table r_area_component_type (
AREA_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AREA_CONTAIN_TYPE'
CREATE table r_area_contain_type (
CONTAIN_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AREA_DESC_CODE'
CREATE table r_area_desc_code (
AREA_DESC_TYPE  VARCHAR(20) NOT NULL,
AREA_DESC_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AREA_DESC_TYPE'
CREATE table r_area_desc_type (
AREA_DESC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AREA_TYPE'
CREATE table r_area_type (
AREA_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AUTHORITY_TYPE'
CREATE table r_authority_type (
AUTHORITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_AUTHOR_TYPE'
CREATE table r_author_type (
AUTHOR_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_AUTHORITY_COMP_TYPE'
CREATE table r_ba_authority_comp_type (
BA_AUTHORITY_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_CATEGORY'
CREATE table r_ba_category (
BA_CATEGORY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_COMPONENT_TYPE'
CREATE table r_ba_component_type (
BUSINESS_ASSOCIATE_COMP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_CONTACT_LOC_TYPE'
CREATE table r_ba_contact_loc_type (
CONTACT_LOC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_CREW_OVERHEAD_TYPE'
CREATE table r_ba_crew_overhead_type (
OVERHEAD_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_CREW_TYPE'
CREATE table r_ba_crew_type (
CREW_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_DESC_CODE'
CREATE table r_ba_desc_code (
BA_DESC_TYPE  VARCHAR(20) NOT NULL,
BA_DESC_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_DESC_REF_VALUE'
CREATE table r_ba_desc_ref_value (
REFERENCE_VALUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_DESC_TYPE'
CREATE table r_ba_desc_type (
BA_DESC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_LIC_DUE_CONDITION'
CREATE table r_ba_lic_due_condition (
DUE_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_LIC_VIOLATION_TYPE'
CREATE table r_ba_lic_violation_type (
VIOLATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_LIC_VIOL_RESOL'
CREATE table r_ba_lic_viol_resol (
RESOLVE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_ORGANIZATION_COMP_TYPE'
CREATE table r_ba_organization_comp_type (
BA_ORGANIZATION_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_ORGANIZATION_TYPE'
CREATE table r_ba_organization_type (
ORGANIZATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_PERMIT_TYPE'
CREATE table r_ba_permit_type (
PERMIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_PREF_TYPE'
CREATE table r_ba_pref_type (
PREFERENCE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_SERVICE_TYPE'
CREATE table r_ba_service_type (
BA_SERVICE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_STATUS'
CREATE table r_ba_status (
BA_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_TYPE'
CREATE table r_ba_type (
BA_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BA_XREF_TYPE'
CREATE table r_ba_xref_type (
BA_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BHP_METHOD'
CREATE table r_bhp_method (
BHP_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BH_PRESS_TEST_TYPE'
CREATE table r_bh_press_test_type (
BH_PRESSURE_TEST_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BIT_BEARING_CONDITION'
CREATE table r_bit_bearing_condition (
BEARING_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BIT_CUT_STRUCT_DULL'
CREATE table r_bit_cut_struct_dull (
CUTTING_STRUCTURE_MDC  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BIT_CUT_STRUCT_INNER'
CREATE table r_bit_cut_struct_inner (
CUTTING_STRUCTURE_T1  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BIT_CUT_STRUCT_LOC'
CREATE table r_bit_cut_struct_loc (
CUTTING_STRUCTURE_LOC  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BIT_CUT_STRUCT_OUTER'
CREATE table r_bit_cut_struct_outer (
CUTTING_STRUCTURE_TO  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BIT_REASON_PULLED'
CREATE table r_bit_reason_pulled (
REASON_PULLED  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BLOWOUT_FLUID'
CREATE table r_blowout_fluid (
BLOWOUT_FLUID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_BUILDUP_RADIUS_TYPE'
CREATE table r_buildup_radius_type (
BUILDUP_RADIUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CAT_ADDITIVE_GROUP'
CREATE table r_cat_additive_group (
ADDITIVE_GROUP  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CAT_ADDITIVE_QUANTITY'
CREATE table r_cat_additive_quantity (
QUANTITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CAT_ADDITIVE_SPEC'
CREATE table r_cat_additive_spec (
ADDITIVE_SPEC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CAT_ADDITIVE_XREF'
CREATE table r_cat_additive_xref (
ADDITIVE_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CAT_EQUIP_GROUP'
CREATE table r_cat_equip_group (
CAT_EQUIP_GROUP  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CAT_EQUIP_SPEC'
CREATE table r_cat_equip_spec (
SPEC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CAT_EQUIP_SPEC_CODE'
CREATE table r_cat_equip_spec_code (
SPEC_TYPE  VARCHAR(20) NOT NULL,
SPEC_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CAT_EQUIP_TYPE'
CREATE table r_cat_equip_type (
CAT_EQUIP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CEMENT_TYPE'
CREATE table r_cement_type (
CEMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CHECKSHOT_SRVY_TYPE'
CREATE table r_checkshot_srvy_type (
CHECKSHOT_SURVEY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CLASS_DESC_PROPERTY'
CREATE table r_class_desc_property (
DESC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CLASS_LEV_COMP_TYPE'
CREATE table r_class_lev_comp_type (
CLASS_LEVEL_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CLASS_LEV_XREF_TYPE'
CREATE table r_class_lev_xref_type (
LEVEL_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CLASS_SYSTEM_DIMENSION'
CREATE table r_class_system_dimension (
CLASS_DIMENSION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CLASS_SYST_XREF_TYPE'
CREATE table r_class_syst_xref_type (
SYSTEM_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CLIMATE'
CREATE table r_climate (
CLIMATE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CODE_VERSION_XREF_TYPE'
CREATE table r_code_version_xref_type (
CODE_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COLLAR_TYPE'
CREATE table r_collar_type (
COLLAR_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COLOR'
CREATE table r_color (
COLOR  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
COLOR_PALETTE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COLOR_FORMAT'
CREATE table r_color_format (
COLOR_FORMAT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COLOR_PALETTE'
CREATE table r_color_palette (
COLOR_PALETTE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COMPLETION_METHOD'
CREATE table r_completion_method (
COMPLETION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COMPLETION_STATUS'
CREATE table r_completion_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
COMPLETION_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COMPLETION_STATUS_TYPE'
CREATE table r_completion_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COMPLETION_TYPE'
CREATE table r_completion_type (
COMPLETION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONDITION_TYPE'
CREATE table r_condition_type (
CONDITION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONFIDENCE_TYPE'
CREATE table r_confidence_type (
CONFIDENCE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONFIDENTIAL_REASON'
CREATE table r_confidential_reason (
CONFIDENTIAL_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONFIDENTIAL_TYPE'
CREATE table r_confidential_type (
CONFIDENTIAL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONFORMITY_RELATION'
CREATE table r_conformity_relation (
CONFORMITY_RELATIONSHIP  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSENT_BA_ROLE'
CREATE table r_consent_ba_role (
CONSENT_BA_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSENT_COMP_TYPE'
CREATE table r_consent_comp_type (
CONSENT_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSENT_CONDITION'
CREATE table r_consent_condition (
CONSENT_TYPE  VARCHAR(20) NOT NULL,
CONSENT_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSENT_REMARK'
CREATE table r_consent_remark (
REMARK_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSENT_STATUS'
CREATE table r_consent_status (
CONSENT_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSENT_TYPE'
CREATE table r_consent_type (
CONSENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSULT_ATTEND_TYPE'
CREATE table r_consult_attend_type (
ATTEND_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSULT_COMP_TYPE'
CREATE table r_consult_comp_type (
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSULT_DISC_TYPE'
CREATE table r_consult_disc_type (
DISCUSSION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSULT_ISSUE_TYPE'
CREATE table r_consult_issue_type (
CONSULT_ISSUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSULT_REASON'
CREATE table r_consult_reason (
CONSULT_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSULT_RESOLUTION'
CREATE table r_consult_resolution (
CONSULT_RESOLUTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSULT_ROLE'
CREATE table r_consult_role (
CONSULT_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSULT_TYPE'
CREATE table r_consult_type (
CONSULT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONSULT_XREF_TYPE'
CREATE table r_consult_xref_type (
CONSULT_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONTACT_ROLE'
CREATE table r_contact_role (
CONTACT_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONTAMINANT_TYPE'
CREATE table r_contaminant_type (
CONTAMINANT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONTEST_COMP_TYPE'
CREATE table r_contest_comp_type (
CONTEST_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONTEST_PARTY_ROLE'
CREATE table r_contest_party_role (
PARTY_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONTEST_RESOLUTION'
CREATE table r_contest_resolution (
RESOLUTION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONTEST_TYPE'
CREATE table r_contest_type (
CONTEST_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONTRACT_COMP_TYPE'
CREATE table r_contract_comp_type (
CONTRACT_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_BA_ROLE'
CREATE table r_cont_ba_role (
BA_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_COMP_REASON'
CREATE table r_cont_comp_reason (
REASON_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_EXTEND_COND'
CREATE table r_cont_extend_cond (
EXTENSION_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_EXTEND_TYPE'
CREATE table r_cont_extend_type (
EXTENSION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_INSUR_ELECT'
CREATE table r_cont_insur_elect (
INSURANCE_ELECTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_OPERATING_PROC'
CREATE table r_cont_operating_proc (
OPERATING_PROCEDURE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_PROVISION_TYPE'
CREATE table r_cont_provision_type (
CONT_PROVISION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_PROV_XREF_TYPE'
CREATE table r_cont_prov_xref_type (
PROVISION_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_STATUS'
CREATE table r_cont_status (
CONTRACT_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_STATUS_TYPE'
CREATE table r_cont_status_type (
CONTRACT_STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_TYPE'
CREATE table r_cont_type (
CONTRACT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_VOTE_RESPONSE'
CREATE table r_cont_vote_response (
VOTE_RESPONSE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_VOTE_TYPE'
CREATE table r_cont_vote_type (
VOTE_PROCEDURE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CONT_XREF_TYPE'
CREATE table r_cont_xref_type (
CONTRACT_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COORD_CAPTURE'
CREATE table r_coord_capture (
CAPTURE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COORD_COMPUTE'
CREATE table r_coord_compute (
COMPUTE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COORD_QUALITY'
CREATE table r_coord_quality (
COORDINATE_QUALITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COORD_SYSTEM_TYPE'
CREATE table r_coord_system_type (
COORDINATE_SYSTEM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CORE_HANDLING'
CREATE table r_core_handling (
CORE_HANDLING  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CORE_RECOVERY_TYPE'
CREATE table r_core_recovery_type (
CORE_RECOVERY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CORE_SAMPLE_TYPE'
CREATE table r_core_sample_type (
CORE_SAMPLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CORE_SHIFT_METHOD'
CREATE table r_core_shift_method (
CORE_SHIFT_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CORE_SOLVENT'
CREATE table r_core_solvent (
CORE_SOLVENT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CORE_TYPE'
CREATE table r_core_type (
CORE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CORRECTION_METHOD'
CREATE table r_correction_method (
CORRECTION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_COUPLING_TYPE'
CREATE table r_coupling_type (
COUPLING_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CREATOR_TYPE'
CREATE table r_creator_type (
CREATOR_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CS_TRANSFORM_PARM'
CREATE table r_cs_transform_parm (
TRANSFORM_PARM  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CS_TRANSFORM_TYPE'
CREATE table r_cs_transform_type (
TRANSFORM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CURVE_SCALE'
CREATE table r_curve_scale (
CURVE_SCALE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CURVE_TYPE'
CREATE table r_curve_type (
CURVE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CURVE_XREF_TYPE'
CREATE table r_curve_xref_type (
XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CUSHION_TYPE'
CREATE table r_cushion_type (
CUSHION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_CUTTING_FLUID'
CREATE table r_cutting_fluid (
CUTTING_FLUID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DATA_CIRC_PROCESS'
CREATE table r_data_circ_process (
DATA_CIRC_PROCESS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DATA_CIRC_STATUS'
CREATE table r_data_circ_status (
DATA_CIRC_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DATA_STORE_TYPE'
CREATE table r_data_store_type (
DATA_STORE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DATE_FORMAT_TYPE'
CREATE table r_date_format_type (
DATA_STORE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DATUM_ORIGIN'
CREATE table r_datum_origin (
DATUM_ORIGIN  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DECLINE_COND_CODE'
CREATE table r_decline_cond_code (
CONDITION_TYPE  VARCHAR(20) NOT NULL,
CONDITION_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DECLINE_COND_TYPE'
CREATE table r_decline_cond_type (
CONDITION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DECLINE_CURVE_TYPE'
CREATE table r_decline_curve_type (
DECLINE_CURVE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DECLINE_TYPE'
CREATE table r_decline_type (
DECLINE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DECRYPT_TYPE'
CREATE table r_decrypt_type (
DECRYPTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DEDUCT_TYPE'
CREATE table r_deduct_type (
DEDUCT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DIGITAL_FORMAT'
CREATE table r_digital_format (
DIGITAL_FORMAT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
VERSION  VARCHAR(12),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DIGITAL_OUTPUT'
CREATE table r_digital_output (
DIGITAL_OUTPUT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DIRECTION'
CREATE table r_direction (
DIRECTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DIR_SRVY_CLASS'
CREATE table r_dir_srvy_class (
DIR_SURVEY_CLASS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DIR_SRVY_COMPUTE'
CREATE table r_dir_srvy_compute (
COMPUTE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DIR_SRVY_POINT_TYPE'
CREATE table r_dir_srvy_point_type (
POINT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DIR_SRVY_RECORD'
CREATE table r_dir_srvy_record (
RECORD_MODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DIR_SRVY_TYPE'
CREATE table r_dir_srvy_type (
SURVEY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DIST_REF_PT'
CREATE table r_dist_ref_pt (
DISTANCE_REF_POINT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DOCUMENT_TYPE'
CREATE table r_document_type (
DOCUMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DOC_STATUS'
CREATE table r_doc_status (
DOCUMENT_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILLING_MEDIA'
CREATE table r_drilling_media (
DRILLING_MEDIA  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_ASSEMBLY_COMP'
CREATE table r_drill_assembly_comp (
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_BIT_CONDITION'
CREATE table r_drill_bit_condition (
DRILL_BIT_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_BIT_DETAIL_CODE'
CREATE table r_drill_bit_detail_code (
BIT_DETAIL_TYPE  VARCHAR(20) NOT NULL,
BIT_DETAIL_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_BIT_DETAIL_TYPE'
CREATE table r_drill_bit_detail_type (
BIT_DETAIL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_BIT_JET_TYPE'
CREATE table r_drill_bit_jet_type (
JET_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_BIT_TYPE'
CREATE table r_drill_bit_type (
DRILL_BIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_HOLE_POSITION'
CREATE table r_drill_hole_position (
DRILL_HOLE_POSITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_REPORT_TIME'
CREATE table r_drill_report_time (
REPORT_TIME_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_STAT_CODE'
CREATE table r_drill_stat_code (
STATISTIC_TYPE  VARCHAR(20) NOT NULL,
STATISTIC_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_STAT_TYPE'
CREATE table r_drill_stat_type (
STATISTIC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_DRILL_TOOL_TYPE'
CREATE table r_drill_tool_type (
DRILL_TOOL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ECONOMIC_SCENARIO'
CREATE table r_economic_scenario (
ECONOMIC_SCENARIO  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ECONOMIC_SCHEDULE'
CREATE table r_economic_schedule (
ECONOMIC_SCHEDULE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ECOZONE_HIER_LEVEL'
CREATE table r_ecozone_hier_level (
HIERARCHY_LEVEL  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ECOZONE_TYPE'
CREATE table r_ecozone_type (
ECOZONE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ECOZONE_XREF'
CREATE table r_ecozone_xref (
ECOZONE_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EMPLOYEE_POSITION'
CREATE table r_employee_position (
EMPLOYEE_POSITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EMPLOYEE_STATUS'
CREATE table r_employee_status (
EMPLOYEE_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ENCODING_TYPE'
CREATE table r_encoding_type (
ENCODING_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ENHANCED_REC_TYPE'
CREATE table r_enhanced_rec_type (
ENHANCED_RECOVERY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ENT_ACCESS_TYPE'
CREATE table r_ent_access_type (
ACCESS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ENT_COMPONENT_TYPE'
CREATE table r_ent_component_type (
ENT_COMP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ENT_EXPIRY_ACTION'
CREATE table r_ent_expiry_action (
EXPIRY_ACTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ENT_SEC_GROUP_TYPE'
CREATE table r_ent_sec_group_type (
GROUP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ENT_SEC_GROUP_XREF'
CREATE table r_ent_sec_group_xref (
XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ENT_TYPE'
CREATE table r_ent_type (
ENTITLEMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ENVIRONMENT'
CREATE table r_environment (
ENVIRONMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_BA_ROLE_TYPE'
CREATE table r_equip_ba_role_type (
ROLE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_COMPONENT_TYPE'
CREATE table r_equip_component_type (
EQUIPMENT_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_INSTALL_LOC'
CREATE table r_equip_install_loc (
INSTALL_LOC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_MAINT_LOC'
CREATE table r_equip_maint_loc (
MAINT_LOCATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_MAINT_REASON'
CREATE table r_equip_maint_reason (
MAINT_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_MAINT_STATUS'
CREATE table r_equip_maint_status (
MAINTAIN_STATUS_TYPE  VARCHAR(20) NOT NULL,
MAINTAIN_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_MAINT_STAT_TYPE'
CREATE table r_equip_maint_stat_type (
MAINTAIN_STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_REMOVE_REASON'
CREATE table r_equip_remove_reason (
REMOVE_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_SPEC'
CREATE table r_equip_spec (
SPEC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_SPEC_REF_TYPE'
CREATE table r_equip_spec_ref_type (
REFERENCE_VALUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_STATUS'
CREATE table r_equip_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
EQUIP_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_STATUS_TYPE'
CREATE table r_equip_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_SYSTEM_CONDITION'
CREATE table r_equip_system_condition (
SYSTEM_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_USE_STAT_TYPE'
CREATE table r_equip_use_stat_type (
EQUIP_USE_STAT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EQUIP_XREF_TYPE'
CREATE table r_equip_xref_type (
EQUIP_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EW_DIRECTION'
CREATE table r_ew_direction (
EW_DIRECTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_EW_START_LINE'
CREATE table r_ew_start_line (
EW_START_LINE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FACILITY_CLASS'
CREATE table r_facility_class (
FACILITY_CLASS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FACILITY_COMP_TYPE'
CREATE table r_facility_comp_type (
FACILITY_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FACILITY_SPEC_CODE'
CREATE table r_facility_spec_code (
SPEC_TYPE  VARCHAR(20) NOT NULL,
SPEC_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FACILITY_SPEC_TYPE'
CREATE table r_facility_spec_type (
SPEC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FACILITY_STATUS'
CREATE table r_facility_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
FACILITY_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FACILITY_TYPE'
CREATE table r_facility_type (
FACILITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FACILITY_XREF_TYPE'
CREATE table r_facility_xref_type (
FACILITY_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_FUNCTION'
CREATE table r_fac_function (
FACILITY_FUNCTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_LIC_COND'
CREATE table r_fac_lic_cond (
CONDITION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_LIC_COND_CODE'
CREATE table r_fac_lic_cond_code (
CONDITION_TYPE  VARCHAR(20) NOT NULL,
CONDITION_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_LIC_DUE_CONDITION'
CREATE table r_fac_lic_due_condition (
DUE_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_LIC_EXTEND_TYPE'
CREATE table r_fac_lic_extend_type (
LICENSE_EXTENSION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_LIC_VIOLATION_TYPE'
CREATE table r_fac_lic_violation_type (
VIOLATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_LIC_VIOL_RESOL'
CREATE table r_fac_lic_viol_resol (
RESOLVE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_MAINTAIN_TYPE'
CREATE table r_fac_maintain_type (
FACILITY_TYPE  VARCHAR(20) NOT NULL,
MAINTAIN_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_MAINT_STATUS'
CREATE table r_fac_maint_status (
MAINTAIN_STATUS_TYPE  VARCHAR(20) NOT NULL,
MAINTAIN_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_MAINT_STATUS_TYPE'
CREATE table r_fac_maint_status_type (
MAINTAIN_STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_PIPE_COVER'
CREATE table r_fac_pipe_cover (
COVER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_PIPE_MATERIAL'
CREATE table r_fac_pipe_material (
PIPELINE_MATERIAL  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_PIPE_TYPE'
CREATE table r_fac_pipe_type (
PIPELINE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_SPEC_REFERENCE'
CREATE table r_fac_spec_reference (
REFERENCE_VALUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAC_STATUS_TYPE'
CREATE table r_fac_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FAULT_TYPE'
CREATE table r_fault_type (
FAULT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FIELD_COMPONENT_TYPE'
CREATE table r_field_component_type (
FIELD_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FIELD_STATION_TYPE'
CREATE table r_field_station_type (
FIELD_STATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FIELD_TYPE'
CREATE table r_field_type (
FIELD_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FIN_COMPONENT_TYPE'
CREATE table r_fin_component_type (
FIN_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FIN_COST_TYPE'
CREATE table r_fin_cost_type (
COST_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FIN_STATUS'
CREATE table r_fin_status (
FIN_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FIN_TYPE'
CREATE table r_fin_type (
FIN_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FIN_XREF_TYPE'
CREATE table r_fin_xref_type (
FIN_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FLUID_TYPE'
CREATE table r_fluid_type (
FLUID_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FONT'
CREATE table r_font (
FONT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FONT_EFFECT'
CREATE table r_font_effect (
FONT_EFFECT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOOTAGE_ORIGIN'
CREATE table r_footage_origin (
FOOTAGE_ORIGIN  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_ALIAS_TYPE'
CREATE table r_fos_alias_type (
ALIAS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_ASSEMBLAGE_TYPE'
CREATE table r_fos_assemblage_type (
ASSEMBLAGE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_COLOR'
CREATE table r_fos_color (
FOSSIL_COLOR  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_DESC_CODE'
CREATE table r_fos_desc_code (
DESCRIPTION_TYPE  VARCHAR(20) NOT NULL,
DESCRIPTION_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_DESC_TYPE'
CREATE table r_fos_desc_type (
DESCRIPTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_LIFE_HABIT'
CREATE table r_fos_life_habit (
LIFE_HABIT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_NAME_SET_TYPE'
CREATE table r_fos_name_set_type (
FOSSIL_NAME_SET_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_OBS_TYPE'
CREATE table r_fos_obs_type (
FOSSIL_OBS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_TAI_COLOR'
CREATE table r_fos_tai_color (
TAI_COLOR  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_TAXON_GROUP'
CREATE table r_fos_taxon_group (
TAXON_GROUP  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_TAXON_LEVEL'
CREATE table r_fos_taxon_level (
TAXON_LEVEL  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_FOS_XREF'
CREATE table r_fos_xref (
FOSSIL_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_GEOMETRY_FORMAT'
CREATE table r_geometry_format (
GEOMETRY_FORMAT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_GEOMETRY_TYPE'
CREATE table r_geometry_type (
GEOMETRY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_GRANTED_RIGHT_TYPE'
CREATE table r_granted_right_type (
GRANTED_RIGHT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_HOLE_CONDITION'
CREATE table r_hole_condition (
HOLE_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_HORIZ_DRILL_REASON'
CREATE table r_horiz_drill_reason (
HORIZ_DRILL_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_HORIZ_DRILL_TYPE'
CREATE table r_horiz_drill_type (
HORIZ_DRILL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_HSE_COMP_ROLE'
CREATE table r_hse_comp_role (
COMPONENT_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_HSE_INCIDENT_COMP_TYPE'
CREATE table r_hse_incident_comp_type (
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_HSE_INCIDENT_DETAIL'
CREATE table r_hse_incident_detail (
DETAIL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_HSE_RESPONSE_TYPE'
CREATE table r_hse_response_type (
ACTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_IMAGE_CALIBRATE_METHOD'
CREATE table r_image_calibrate_method (
CALIBRATE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_IMAGE_SECTION_TYPE'
CREATE table r_image_section_type (
SECTION_TPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INCIDENT_BA_ROLE'
CREATE table r_incident_ba_role (
BA_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INCIDENT_CAUSE_CODE'
CREATE table r_incident_cause_code (
CAUSE_TYPE  VARCHAR(20) NOT NULL,
CAUSE_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INCIDENT_CAUSE_TYPE'
CREATE table r_incident_cause_type (
CAUSE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INCIDENT_INTERACT_TYPE'
CREATE table r_incident_interact_type (
INTERACTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INCIDENT_RESP_RESULT'
CREATE table r_incident_resp_result (
RESPONSE_RESULT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INCIDENT_SUBSTANCE'
CREATE table r_incident_substance (
INCIDENT_SUBSTANCE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INCIDENT_SUBST_ROLE'
CREATE table r_incident_subst_role (
SUBSTANCE_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INFORMATION_PROCESS'
CREATE table r_information_process (
INFORMATION_PROCESS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INPUT_TYPE'
CREATE table r_input_type (
INPUT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INSP_COMP_TYPE'
CREATE table r_insp_comp_type (
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INSP_STATUS'
CREATE table r_insp_status (
INSPECTION_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INSTRUMENT_COMP_TYPE'
CREATE table r_instrument_comp_type (
INSTRUMENT_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INSTRUMENT_TYPE'
CREATE table r_instrument_type (
LAND_INSTRUMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INST_DETAIL_CODE'
CREATE table r_inst_detail_code (
INSTRUMENT_DETAIL_TYPE  VARCHAR(20) NOT NULL,
INSTRUMENT_DETAIL_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INST_DETAIL_REF_VALUE'
CREATE table r_inst_detail_ref_value (
REFERENCE_VALUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INST_DETAIL_TYPE'
CREATE table r_inst_detail_type (
INSTRUMENT_DETAIL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INTERP_ORIGIN_TYPE'
CREATE table r_interp_origin_type (
ORIGIN_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INTERP_TYPE'
CREATE table r_interp_type (
INTERP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INT_SET_COMPONENT'
CREATE table r_int_set_component (
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INT_SET_ROLE'
CREATE table r_int_set_role (
INTEREST_SET_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INT_SET_STATUS'
CREATE table r_int_set_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
INT_SET_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INT_SET_STATUS_TYPE'
CREATE table r_int_set_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INT_SET_TRIGGER'
CREATE table r_int_set_trigger (
TRIGGER_EVENT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INT_SET_TYPE'
CREATE table r_int_set_type (
INTEREST_SET_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INT_SET_XREF_TYPE'
CREATE table r_int_set_xref_type (
INT_SET_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_INV_MATERIAL_TYPE'
CREATE table r_inv_material_type (
INVENTORY_MATERIAL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ITEM_CATEGORY'
CREATE table r_item_category (
ITEM_CATEGORY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RETENTION_PERIOD  VARCHAR(20),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ITEM_SUB_CATEGORY'
CREATE table r_item_sub_category (
ITEM_CATEGORY  VARCHAR(20) NOT NULL,
ITEM_SUB_CATEGORY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RETENTION_PERIOD  VARCHAR(20),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_ACQTN_METHOD'
CREATE table r_land_acqtn_method (
LAND_ACQTN_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_AGREE_TYPE'
CREATE table r_land_agree_type (
LAND_AGREE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_BIDDER_TYPE'
CREATE table r_land_bidder_type (
LAND_BIDDER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_BID_STATUS'
CREATE table r_land_bid_status (
LAND_BID_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_BID_TYPE'
CREATE table r_land_bid_type (
LAND_BID_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_CASE_ACTION'
CREATE table r_land_case_action (
LAND_CASE_ACTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_CASE_TYPE'
CREATE table r_land_case_type (
LAND_CASE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_CASH_BID_TYPE'
CREATE table r_land_cash_bid_type (
CASH_BID_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_COMPONENT_TYPE'
CREATE table r_land_component_type (
LAND_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_LESSOR_TYPE'
CREATE table r_land_lessor_type (
LAND_LESSOR_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_OFFRING_STATUS'
CREATE table r_land_offring_status (
LAND_OFFRING_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_OFFRING_TYPE'
CREATE table r_land_offring_type (
LAND_OFFRING_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_PROPERTY_TYPE'
CREATE table r_land_property_type (
LAND_PROPERTY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_REF_NUM_TYPE'
CREATE table r_land_ref_num_type (
LAND_REF_NUM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_RENTAL_TYPE'
CREATE table r_land_rental_type (
LAND_RENTAL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_REQUEST_TYPE'
CREATE table r_land_request_type (
LAND_REQUEST_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_REQ_STATUS'
CREATE table r_land_req_status (
LAND_REQ_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_RIGHT_CATEGORY'
CREATE table r_land_right_category (
LAND_RIGHT_CATEGORY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_RIGHT_STATUS'
CREATE table r_land_right_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
LAND_RIGHT_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_STATUS_TYPE'
CREATE table r_land_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_TITLE_CHG_RSN'
CREATE table r_land_title_chg_rsn (
LAND_TITLE_CHANGE_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_TITLE_TYPE'
CREATE table r_land_title_type (
LAND_TITLE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_TRACT_TYPE'
CREATE table r_land_tract_type (
LAND_TRACT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_UNIT_TYPE'
CREATE table r_land_unit_type (
LAND_UNIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LAND_WELL_REL_TYPE'
CREATE table r_land_well_rel_type (
WELL_RELATIONSHIP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LANGUAGE'
CREATE table r_language (
LANGUAGE_ID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LEASE_UNIT_STATUS'
CREATE table r_lease_unit_status (
LEASE_UNIT_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LEASE_UNIT_TYPE'
CREATE table r_lease_unit_type (
LEASE_UNIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LEGAL_SURVEY_TYPE'
CREATE table r_legal_survey_type (
LEGAL_SURVEY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOC_TABLE_NAME  VARCHAR(30),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LICENSE_STATUS'
CREATE table r_license_status (
LICENSE_STATUS_TYPE  VARCHAR(20) NOT NULL,
LICENSE_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LIC_STATUS_TYPE'
CREATE table r_lic_status_type (
LICENSE_STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LINER_TYPE'
CREATE table r_liner_type (
LINER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITHOLOGY'
CREATE table r_lithology (
LITHOLOGY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_ABUNDANCE'
CREATE table r_lith_abundance (
ABUNDANCE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_BOUNDARY_TYPE'
CREATE table r_lith_boundary_type (
BOUNDARY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_COLLECT_METHOD'
CREATE table r_lith_collect_method (
COLLECT_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_COLOR'
CREATE table r_lith_color (
COLOR  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_COMPONENT'
CREATE table r_lith_component (
COMPONENT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_CONSOLIDATION'
CREATE table r_lith_consolidation (
CONSOLIDATION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_CONTAMINANT'
CREATE table r_lith_contaminant (
LITH_CONTAMINANT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_CYCLE_BED'
CREATE table r_lith_cycle_bed (
CYCLE_BED  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_DEP_ENV'
CREATE table r_lith_dep_env (
DEPOSITIONAL_ENVIRONMENT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_DIAGENESIS'
CREATE table r_lith_diagenesis (
DIAGENESIS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_DISTRIBUTION'
CREATE table r_lith_distribution (
DISTRIBUTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_INTENSITY'
CREATE table r_lith_intensity (
INTENSITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_LOG_COMP_TYPE'
CREATE table r_lith_log_comp_type (
LITH_LOG_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_LOG_TYPE'
CREATE table r_lith_log_type (
LITH_LOG_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_OIL_STAIN'
CREATE table r_lith_oil_stain (
OIL_STAIN  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_PATTERN_CODE'
CREATE table r_lith_pattern_code (
LITH_PATTERN_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_PREP_CLASS'
CREATE table r_lith_prep_class (
PREPARATION_CLASS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_ROCK_MATRIX'
CREATE table r_lith_rock_matrix (
ROCK_MATRIX  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_ROCK_PROFILE'
CREATE table r_lith_rock_profile (
ROCK_PROFILE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_ROCK_TYPE'
CREATE table r_lith_rock_type (
ROCK_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_ROUNDING'
CREATE table r_lith_rounding (
ROUNDING  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_SCALE_SCHEME'
CREATE table r_lith_scale_scheme (
SCALE_SCHEME  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_SORTING'
CREATE table r_lith_sorting (
SORTING  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_SOURCE'
CREATE table r_lith_source (
LITH_SAMPLE_SOURCE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LITH_STRUCTURE'
CREATE table r_lith_structure (
STRUCTURE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOCATION_DESC_TYPE'
CREATE table r_location_desc_type (
LOCATION_DESC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOCATION_QUALIFIER'
CREATE table r_location_qualifier (
LOCATION_QUALIFIER  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOCATION_QUALITY'
CREATE table r_location_quality (
LOCATION_QUALITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOCATION_TYPE'
CREATE table r_location_type (
LOCATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_ARRAY_DIMENSION'
CREATE table r_log_array_dimension (
DIMENSION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_CORRECT_METHOD'
CREATE table r_log_correct_method (
CORRECTION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_CRV_CLASS_SYSTEM'
CREATE table r_log_crv_class_system (
SYSTEM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_DEPTH_TYPE'
CREATE table r_log_depth_type (
DEPTH_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_DIRECTION'
CREATE table r_log_direction (
LOG_DIRECTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_GOOD_VALUE_TYPE'
CREATE table r_log_good_value_type (
GOOD_VALUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_INDEX_TYPE'
CREATE table r_log_index_type (
INDEX_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_MATRIX'
CREATE table r_log_matrix (
LOG_MATRIX_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_POSITION_TYPE'
CREATE table r_log_position_type (
POSITION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOG_TOOL_TYPE'
CREATE table r_log_tool_type (
LOG_TOOL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LOST_MATERIAL_TYPE'
CREATE table r_lost_material_type (
LOST_MATERIAL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LR_FACILITY_XREF'
CREATE table r_lr_facility_xref (
XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LR_FIELD_XREF'
CREATE table r_lr_field_xref (
XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LR_SIZE_TYPE'
CREATE table r_lr_size_type (
SIZE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LR_TERMIN_REQMT'
CREATE table r_lr_termin_reqmt (
TERMINATION_REQMT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LR_TERMIN_TYPE'
CREATE table r_lr_termin_type (
TERMINATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_LR_XREF_TYPE'
CREATE table r_lr_xref_type (
LR_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_L_OFFR_CANCEL_RSN'
CREATE table r_l_offr_cancel_rsn (
LAND_OFFR_CANCEL_RSN  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MAINT_PROCESS'
CREATE table r_maint_process (
MAINTAIN_PROCESS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MBAL_COMPRESS_TYPE'
CREATE table r_mbal_compress_type (
Z_FACTOR_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MBAL_CURVE_TYPE'
CREATE table r_mbal_curve_type (
CURVE_FIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MEASUREMENT_TYPE'
CREATE table r_measurement_type (
MEASUREMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MEASURE_TECHNIQUE'
CREATE table r_measure_technique (
MEASUREMENT_TECHNIQUE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MEDIA_TYPE'
CREATE table r_media_type (
MEDIA_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
TAPE_DENSITY  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MISC_DATA_CODE'
CREATE table r_misc_data_code (
MISC_DATA_TYPE  VARCHAR(20) NOT NULL,
MISC_DATA_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MISC_DATA_TYPE'
CREATE table r_misc_data_type (
MISC_DATA_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MONTH'
CREATE table r_month (
MONTH  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MUD_COLLECT_REASON'
CREATE table r_mud_collect_reason (
MUD_COLLECT_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MUD_LOG_COLOR'
CREATE table r_mud_log_color (
MUD_LOG_COLOR  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MUD_PROPERTY_CODE'
CREATE table r_mud_property_code (
MUD_PROPERTY  VARCHAR(20) NOT NULL,
MUD_PROPERTY_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MUD_PROPERTY_REF'
CREATE table r_mud_property_ref (
MUD_PROPERTY_REF  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MUD_PROPERTY_TYPE'
CREATE table r_mud_property_type (
MUD_PROPERTY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MUD_SAMPLE_TYPE'
CREATE table r_mud_sample_type (
MUD_SAMPLE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_MUNICIPALITY'
CREATE table r_municipality (
MUNICIPALITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_NAME_SET_XREF_TYPE'
CREATE table r_name_set_xref_type (
XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_NODE_POSITION'
CREATE table r_node_position (
NODE_POSITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_NORTH'
CREATE table r_north (
NORTH_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_NOTIFICATION_COMP_TYPE'
CREATE table r_notification_comp_type (
NOTIFICATION_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_NOTIFICATION_TYPE'
CREATE table r_notification_type (
NOTIFICATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_NS_DIRECTION'
CREATE table r_ns_direction (
NS_DIRECTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_NS_START_LINE'
CREATE table r_ns_start_line (
NS_START_LINE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_CALC_METHOD'
CREATE table r_oblig_calc_method (
CALCULATION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_CALC_POINT'
CREATE table r_oblig_calc_point (
CALCULATION_POINT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_CATEGORY'
CREATE table r_oblig_category (
LAND_OBLIG_CATEGORY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_COMPONENT_TYPE'
CREATE table r_oblig_component_type (
OBLIGATION_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_COMP_REASON'
CREATE table r_oblig_comp_reason (
COMPONENT_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_DEDUCT_CALC'
CREATE table r_oblig_deduct_calc (
CALCULATION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_PARTY_TYPE'
CREATE table r_oblig_party_type (
PARTY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_PAY_RESP'
CREATE table r_oblig_pay_resp (
PAYMENT_RESPONSIBILITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_REMARK_TYPE'
CREATE table r_oblig_remark_type (
REMARK_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_SUSPEND_PAY'
CREATE table r_oblig_suspend_pay (
SUSPEND_PAYMENT_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_TRIGGER'
CREATE table r_oblig_trigger (
TRIGGER_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_TYPE'
CREATE table r_oblig_type (
LAND_OBLIG_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OBLIG_XREF_TYPE'
CREATE table r_oblig_xref_type (
OBLIG_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OFFSHORE_AREA_CODE'
CREATE table r_offshore_area_code (
OFFSHORE_AREA_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OFFSHORE_COMP_TYPE'
CREATE table r_offshore_comp_type (
OFFSHORE_COMPLETION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OIL_TYPE'
CREATE table r_oil_type (
OIL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ONTOGENY_TYPE'
CREATE table r_ontogeny_type (
ONTOGENY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_OPERAND_QUALIFIER'
CREATE table r_operand_qualifier (
OPERAND_QUALIFIER  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ORIENTATION'
CREATE table r_orientation (
ORIENTATION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PALEO_IND_TYPE'
CREATE table r_paleo_ind_type (
INDICATOR_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PALEO_INTERP_TYPE'
CREATE table r_paleo_interp_type (
INTERP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PALEO_TYPE_FOSSIL'
CREATE table r_paleo_type_fossil (
TYPE_FOSSIL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PAL_SUM_COMP_TYPE'
CREATE table r_pal_sum_comp_type (
PALEO_SUMMARY_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PAL_SUM_XREF_TYPE'
CREATE table r_pal_sum_xref_type (
PALEO_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PARCEL_LOT_TYPE'
CREATE table r_parcel_lot_type (
PARCEL_LOT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PARCEL_TYPE'
CREATE table r_parcel_type (
PARCEL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PAYMENT_TYPE'
CREATE table r_payment_type (
PAYMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PAYZONE_TYPE'
CREATE table r_payzone_type (
PAYZONE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PAY_DETAIL_TYPE'
CREATE table r_pay_detail_type (
PAY_DETAIL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PAY_METHOD'
CREATE table r_pay_method (
PAY_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PAY_RATE_TYPE'
CREATE table r_pay_rate_type (
PAY_RATE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PDEN_AMEND_REASON'
CREATE table r_pden_amend_reason (
AMEND_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PDEN_COMPONENT_TYPE'
CREATE table r_pden_component_type (
PDEN_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PDEN_STATUS'
CREATE table r_pden_status (
PDEN_STATUS_TYPE  VARCHAR(20) NOT NULL,
PDEN_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PDEN_STATUS_TYPE'
CREATE table r_pden_status_type (
PDEN_STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PDEN_XREF_TYPE'
CREATE table r_pden_xref_type (
PDEN_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PERFORATION_METHOD'
CREATE table r_perforation_method (
PERFORATION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PERFORATION_TYPE'
CREATE table r_perforation_type (
PERF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PERIOD_TYPE'
CREATE table r_period_type (
PERIOD_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PHYSICAL_ITEM_STATUS'
CREATE table r_physical_item_status (
PHYSICAL_ITEM_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PHYSICAL_PROCESS'
CREATE table r_physical_process (
PHYSICAL_PROCESS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PHYS_ITEM_GROUP_TYPE'
CREATE table r_phys_item_group_type (
GROUP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PICK_LOCATION'
CREATE table r_pick_location (
PICK_LOCATION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PICK_QUALIFIER'
CREATE table r_pick_qualifier (
PICK_QUALIFIER  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PICK_QUALIF_REASON'
CREATE table r_pick_qualif_reason (
PICK_QUALIF_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PICK_QUALITY'
CREATE table r_pick_quality (
PICK_QUALITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PICK_VERSION_TYPE'
CREATE table r_pick_version_type (
PICK_VERSION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PLATFORM_TYPE'
CREATE table r_platform_type (
PLATFORM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PLOT_SYMBOL'
CREATE table r_plot_symbol (
PLOT_SYMBOL  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PLUG_TYPE'
CREATE table r_plug_type (
PLUG_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_POOL_COMPONENT_TYPE'
CREATE table r_pool_component_type (
POOL_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_POOL_STATUS'
CREATE table r_pool_status (
POOL_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_POOL_TYPE'
CREATE table r_pool_type (
POOL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_POROSITY_TYPE'
CREATE table r_porosity_type (
POROSITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_AUDIT_REASON'
CREATE table r_ppdm_audit_reason (
AUDIT_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_AUDIT_TYPE'
CREATE table r_ppdm_audit_type (
AUDIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_BOOLEAN_RULE'
CREATE table r_ppdm_boolean_rule (
BOOLEAN_RULE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_CREATE_METHOD'
CREATE table r_ppdm_create_method (
CREATE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_DATA_TYPE'
CREATE table r_ppdm_data_type (
DATA_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_DEFAULT_VALUE'
CREATE table r_ppdm_default_value (
DEFAULT_VALUE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_ENFORCE_METHOD'
CREATE table r_ppdm_enforce_method (
ENFORCE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_FAIL_RESULT'
CREATE table r_ppdm_fail_result (
RULE_FAIL_RESULT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_GROUP_TYPE'
CREATE table r_ppdm_group_type (
GROUP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_GROUP_USE'
CREATE table r_ppdm_group_use (
GROUP_USE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_GROUP_XREF_TYPE'
CREATE table r_ppdm_group_xref_type (
GROUP_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_INDEX_CATEGORY'
CREATE table r_ppdm_index_category (
INDEX_CATEGORY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_MAP_RULE_TYPE'
CREATE table r_ppdm_map_rule_type (
MAP_RULE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_MAP_TYPE'
CREATE table r_ppdm_map_type (
MAP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_METRIC_CODE'
CREATE table r_ppdm_metric_code (
METRIC_TYPE  VARCHAR(20) NOT NULL,
METRIC_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_METRIC_COMP_TYPE'
CREATE table r_ppdm_metric_comp_type (
METRIC_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_METRIC_REF_VALUE'
CREATE table r_ppdm_metric_ref_value (
REFERENCE_VALUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_METRIC_TYPE'
CREATE table r_ppdm_metric_type (
METRIC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_OBJECT_STATUS'
CREATE table r_ppdm_object_status (
OBJECT_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_OBJECT_TYPE'
CREATE table r_ppdm_object_type (
OBJECT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_OPERATING_SYSTEM'
CREATE table r_ppdm_operating_system (
OPERATING_SYSTEM  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_OWNER_ROLE'
CREATE table r_ppdm_owner_role (
OWNER_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_PROC_TYPE'
CREATE table r_ppdm_proc_type (
PROCEDURE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_QC_QUALITY'
CREATE table r_ppdm_qc_quality (
QUALITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_QC_STATUS'
CREATE table r_ppdm_qc_status (
QC_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_QC_TYPE'
CREATE table r_ppdm_qc_type (
QC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_RDBMS'
CREATE table r_ppdm_rdbms (
RDBMS_ID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
VENDOR_BA_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_REF_VALUE_TYPE'
CREATE table r_ppdm_ref_value_type (
REFERENCE_VALUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_ROW_QUALITY'
CREATE table r_ppdm_row_quality (
ROW_QUALITY_ID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_RULE_CLASS'
CREATE table r_ppdm_rule_class (
RULE_CLASS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_RULE_COMP_TYPE'
CREATE table r_ppdm_rule_comp_type (
RULE_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_RULE_DETAIL_TYPE'
CREATE table r_ppdm_rule_detail_type (
RULE_DETAIL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_RULE_PURPOSE'
CREATE table r_ppdm_rule_purpose (
RULE_PURPOSE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_RULE_STATUS'
CREATE table r_ppdm_rule_status (
RULE_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_RULE_USE_COND'
CREATE table r_ppdm_rule_use_cond (
USE_CONDITION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_RULE_XREF_COND'
CREATE table r_ppdm_rule_xref_cond (
RULE_XREF_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_RULE_XREF_TYPE'
CREATE table r_ppdm_rule_xref_type (
RULE_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_SCHEMA_ENTITY'
CREATE table r_ppdm_schema_entity (
ELEMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_SCHEMA_GROUP'
CREATE table r_ppdm_schema_group (
SCHEMA_GROUP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_SYSTEM_TYPE'
CREATE table r_ppdm_system_type (
PPDM_SYSTEM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_TABLE_TYPE'
CREATE table r_ppdm_table_type (
TABLE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_UOM_ALIAS_TYPE'
CREATE table r_ppdm_uom_alias_type (
UOM_ALIAS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PPDM_UOM_USAGE'
CREATE table r_ppdm_uom_usage (
UOM_USAGE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PRESERVE_QUALITY'
CREATE table r_preserve_quality (
PRESERVATION_QUALITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PRESERVE_TYPE'
CREATE table r_preserve_type (
PRESERVATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PRODUCTION_METHOD'
CREATE table r_production_method (
PRODUCTION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PRODUCT_COMPONENT_TYPE'
CREATE table r_product_component_type (
PRODUCT_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROD_STRING_COMP_TYPE'
CREATE table r_prod_string_comp_type (
PROD_STRING_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROD_STRING_STATUS'
CREATE table r_prod_string_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
STATUS_GROUP  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROD_STRING_STAT_TYPE'
CREATE table r_prod_string_stat_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROD_STRING_TYPE'
CREATE table r_prod_string_type (
PROD_STRING_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROD_STR_FM_STATUS'
CREATE table r_prod_str_fm_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
STATUS_GROUP  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROD_STR_FM_STAT_TYPE'
CREATE table r_prod_str_fm_stat_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECTION_TYPE'
CREATE table r_projection_type (
PROJECTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECT_ALIAS_TYPE'
CREATE table r_project_alias_type (
ALIAS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECT_BA_ROLE'
CREATE table r_project_ba_role (
ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECT_COMP_REASON'
CREATE table r_project_comp_reason (
COMPONENT_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECT_COMP_TYPE'
CREATE table r_project_comp_type (
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECT_CONDITION'
CREATE table r_project_condition (
PROJECT_TYPE  VARCHAR(20) NOT NULL,
PROJECT_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECT_EQUIP_ROLE'
CREATE table r_project_equip_role (
EQUIP_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECT_STATUS'
CREATE table r_project_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECT_STATUS_TYPE'
CREATE table r_project_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROJECT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJECT_TYPE'
CREATE table r_project_type (
PROJECT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJ_STEP_TYPE'
CREATE table r_proj_step_type (
STEP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROJ_STEP_XREF_TYPE'
CREATE table r_proj_step_xref_type (
PROJECT_STEP_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PROPPANT_TYPE'
CREATE table r_proppant_type (
PROPPANT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_PUBLICATION_NAME'
CREATE table r_publication_name (
PUBLICATION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_QUALIFIER_TYPE'
CREATE table r_qualifier_type (
QUALIFIER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_QUALITY'
CREATE table r_quality (
QUALITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RATE_CONDITION'
CREATE table r_rate_condition (
RATE_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RATE_SCHEDULE'
CREATE table r_rate_schedule (
RATE_SCHEDULE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RATE_SCHEDULE_COMP_TYPE'
CREATE table r_rate_schedule_comp_type (
RATE_SCHEDULE_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RATE_SCHED_XREF'
CREATE table r_rate_sched_xref (
RATE_SCHEDULE_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RATE_TYPE'
CREATE table r_rate_type (
RATE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RATIO_CURVE_TYPE'
CREATE table r_ratio_curve_type (
RATIO_CURVE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RATIO_FLUID_TYPE'
CREATE table r_ratio_fluid_type (
RATIO_FLUID_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RECORDER_POSITION'
CREATE table r_recorder_position (
RECORDER_POSITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RECORDER_TYPE'
CREATE table r_recorder_type (
RECORDER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REMARK_TYPE'
CREATE table r_remark_type (
REMARK_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REMARK_USE_TYPE'
CREATE table r_remark_use_type (
REMARK_USE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REPEAT_STRAT_TYPE'
CREATE table r_repeat_strat_type (
REPEAT_STRAT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REPORT_HIER_COMP'
CREATE table r_report_hier_comp (
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REPORT_HIER_LEVEL'
CREATE table r_report_hier_level (
LEVEL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REPORT_HIER_TYPE'
CREATE table r_report_hier_type (
HIERARCHY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REP_HIER_ALIAS_TYPE'
CREATE table r_rep_hier_alias_type (
ALIAS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RESENT_COMP_TYPE'
CREATE table r_resent_comp_type (
RESENT_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RESENT_CONFIDENCE'
CREATE table r_resent_confidence (
CONFIDENCE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RESENT_GROUP_TYPE'
CREATE table r_resent_group_type (
GROUP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RESENT_REV_CAT'
CREATE table r_resent_rev_cat (
CATEGORY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RESENT_USE_TYPE'
CREATE table r_resent_use_type (
USE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RESENT_VOL_METHOD'
CREATE table r_resent_vol_method (
VOLUME_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RESENT_XREF_TYPE'
CREATE table r_resent_xref_type (
XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REST_ACTIVITY'
CREATE table r_rest_activity (
RESTRICTED_ACTIVITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REST_DURATION'
CREATE table r_rest_duration (
REST_DURATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REST_REMARK'
CREATE table r_rest_remark (
RESTRICTION_REMARK_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REST_TYPE'
CREATE table r_rest_type (
RESTRICTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RETENTION_PERIOD'
CREATE table r_retention_period (
RETENTION_PERIOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_REVISION_METHOD'
CREATE table r_revision_method (
REVISION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_BLOWOUT_PREVENTER'
CREATE table r_rig_blowout_preventer (
BLOWOUT_PREVENTER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_CATEGORY'
CREATE table r_rig_category (
RIG_CATEGORY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_CLASS'
CREATE table r_rig_class (
RIG_CLASS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_CODE'
CREATE table r_rig_code (
RIG_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_DESANDER_TYPE'
CREATE table r_rig_desander_type (
DESANDER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_DESILTER_TYPE'
CREATE table r_rig_desilter_type (
DESILTER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_DRAWWORKS'
CREATE table r_rig_drawworks (
DRAWWORKS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_GENERATOR_TYPE'
CREATE table r_rig_generator_type (
PLANT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_HOOKBLOCK_TYPE'
CREATE table r_rig_hookblock_type (
HOOKBLOCK_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_MAST'
CREATE table r_rig_mast (
MAST_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_OVERHEAD_CAPACITY'
CREATE table r_rig_overhead_capacity (
CAPACITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_OVERHEAD_TYPE'
CREATE table r_rig_overhead_type (
OVERHEAD_EQUIP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_PUMP'
CREATE table r_rig_pump (
PUMP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_PUMP_FUNCTION'
CREATE table r_rig_pump_function (
PUMP_FUNCTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_SUBSTRUCTURE'
CREATE table r_rig_substructure (
SUBSTRUCTURE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_SWIVEL_TYPE'
CREATE table r_rig_swivel_type (
SWIVEL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RIG_TYPE'
CREATE table r_rig_type (
RIG_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_CONTACT_TYPE'
CREATE table r_rmii_contact_type (
CONTACT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_CONTENT_TYPE'
CREATE table r_rmii_content_type (
RMII_CONTENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_DEFICIENCY'
CREATE table r_rmii_deficiency (
DEFICIENCY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_DESC_TYPE'
CREATE table r_rmii_desc_type (
DESCRIPTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_GROUP_TYPE'
CREATE table r_rmii_group_type (
GROUP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_METADATA_CODE'
CREATE table r_rmii_metadata_code (
METADATA_TYPE  VARCHAR(20) NOT NULL,
METADATA_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_METADATA_TYPE'
CREATE table r_rmii_metadata_type (
METADATA_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_QUALITY_CODE'
CREATE table r_rmii_quality_code (
INFORMATION_QUALITY_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_STATUS'
CREATE table r_rmii_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RMII_STATUS_TYPE'
CREATE table r_rmii_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_RM_THESAURUS_XREF'
CREATE table r_rm_thesaurus_xref (
THESAURUS_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ROAD_CONDITION'
CREATE table r_road_condition (
ROAD_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ROAD_CONTROL_TYPE'
CREATE table r_road_control_type (
CONTROL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ROAD_DRIVING_SIDE'
CREATE table r_road_driving_side (
DRIVING_SIDE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ROAD_TRAFFIC_FLOW_TYPE'
CREATE table r_road_traffic_flow_type (
TRAFFIC_FLOW_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ROCK_CLASS_SCHEME'
CREATE table r_rock_class_scheme (
ROCK_CLASS_SCHEME  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ROLL_ALONG_METHOD'
CREATE table r_roll_along_method (
ROLL_ALONG_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_ROYALTY_TYPE'
CREATE table r_royalty_type (
ROYALTY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SALINITY_TYPE'
CREATE table r_salinity_type (
SALINITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SAMPLE_ANAL_COMP_TYPE'
CREATE table r_sample_anal_comp_type (
SAMPLE_ANAL_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SAMPLE_COLLECTION_TYPE'
CREATE table r_sample_collection_type (
COLLECTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SAMPLE_DESC_TYPE'
CREATE table r_sample_desc_type (
DESCRIPTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SAMPLE_LOCATION'
CREATE table r_sample_location (
SAMPLE_LOCATION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SAMPLE_SHAPE'
CREATE table r_sample_shape (
SAMPLE_SHAPE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SAMPLE_TYPE'
CREATE table r_sample_type (
SAMPLE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SAMPLE_WATER_TYPE'
CREATE table r_sample_water_type (
SAMPLE_WATER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SCALE_TRANSFORM'
CREATE table r_scale_transform (
SCALE_TRANSFORM  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SCREEN_LOCATION'
CREATE table r_screen_location (
SCREEN_LOCATION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SECTION_TYPE'
CREATE table r_section_type (
SECTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEISMIC_PATH'
CREATE table r_seismic_path (
SEISMIC_PATH  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_3D_TYPE'
CREATE table r_seis_3d_type (
SEISMIC_3D_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_ACTIVITY_CLASS'
CREATE table r_seis_activity_class (
SEIS_ACTIVITY_CLASS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_ACTIVITY_TYPE'
CREATE table r_seis_activity_type (
SEIS_ACTIVITY_CLASS  VARCHAR(20) NOT NULL,
SEIS_ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_AUTHORIZE_LIMIT'
CREATE table r_seis_authorize_limit (
LIMIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_AUTHORIZE_REASON'
CREATE table r_seis_authorize_reason (
REASON_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_AUTHORIZE_TYPE'
CREATE table r_seis_authorize_type (
AUTHORIZE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_BIN_METHOD'
CREATE table r_seis_bin_method (
BIN_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_BIN_OUTLINE_TYPE'
CREATE table r_seis_bin_outline_type (
BIN_OUTLINE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_CABLE_MAKE'
CREATE table r_seis_cable_make (
CABLE_MAKE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_CHANNEL_TYPE'
CREATE table r_seis_channel_type (
CHANNEL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_DIMENSION'
CREATE table r_seis_dimension (
SEIS_DIMENSION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_ENERGY_TYPE'
CREATE table r_seis_energy_type (
SEIS_ENERGY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_FLOW_DESC_TYPE'
CREATE table r_seis_flow_desc_type (
FLOW_DESC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_GROUP_TYPE'
CREATE table r_seis_group_type (
SEIS_GROUP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_INSP_COMPONENT_TYPE'
CREATE table r_seis_insp_component_type (
SEIS_INSP_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_LIC_COND'
CREATE table r_seis_lic_cond (
CONDITION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_LIC_COND_CODE'
CREATE table r_seis_lic_cond_code (
CONDITION_TYPE  VARCHAR(20) NOT NULL,
CONDITION_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_LIC_DUE_CONDITION'
CREATE table r_seis_lic_due_condition (
DUE_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_LIC_VIOL_RESOL'
CREATE table r_seis_lic_viol_resol (
RESOLVE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_LIC_VIOL_TYPE'
CREATE table r_seis_lic_viol_type (
VIOLATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_PARM_ORIGIN'
CREATE table r_seis_parm_origin (
PARAMETER_ORIGIN  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_PATCH_TYPE'
CREATE table r_seis_patch_type (
PATCH_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_PICK_METHOD'
CREATE table r_seis_pick_method (
PICK_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_PROC_COMP_TYPE'
CREATE table r_seis_proc_comp_type (
PROCESSING_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_PROC_PARM'
CREATE table r_seis_proc_parm (
PARAMETER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_PROC_SET_TYPE'
CREATE table r_seis_proc_set_type (
PROC_SET_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_PROC_STATUS'
CREATE table r_seis_proc_status (
PROCESS_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_PROC_STEP_NAME'
CREATE table r_seis_proc_step_name (
STEP_NAME  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_PROC_STEP_TYPE'
CREATE table r_seis_proc_step_type (
STEP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_RCRD_FMT_TYPE'
CREATE table r_seis_rcrd_fmt_type (
SEIS_RCRD_FMT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_RCRD_MAKE'
CREATE table r_seis_rcrd_make (
SEIS_RCRD_MAKE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_RCVR_ARRY_TYPE'
CREATE table r_seis_rcvr_arry_type (
SEIS_RCVR_ARRAY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_RCVR_TYPE'
CREATE table r_seis_rcvr_type (
SEIS_RCVR_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_RECORD_TYPE'
CREATE table r_seis_record_type (
RECORD_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_REF_DATUM'
CREATE table r_seis_ref_datum (
REFERENCE_DATUM  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_REF_NUM_TYPE'
CREATE table r_seis_ref_num_type (
REPORTED_REF_NUM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_SAMPLE_TYPE'
CREATE table r_seis_sample_type (
SAMPLE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_SEGMENT_REASON'
CREATE table r_seis_segment_reason (
SEIS_SEGMENT_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_SET_COMPONENT_TYPE'
CREATE table r_seis_set_component_type (
SEIS_SET_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_SPECTRUM_TYPE'
CREATE table r_seis_spectrum_type (
SEIS_SPECTRUM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_SRC_ARRAY_TYPE'
CREATE table r_seis_src_array_type (
SEIS_SRC_ARRAY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_SRC_MAKE'
CREATE table r_seis_src_make (
SEIS_SRC_MAKE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
VIB_PEAK_FORCE DECIMAL(10,2),
VIB_PEAK_FORCE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_STATION_TYPE'
CREATE table r_seis_station_type (
SEIS_STATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_STATUS'
CREATE table r_seis_status (
SEIS_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_STATUS_TYPE'
CREATE table r_seis_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_SUMMARY_TYPE'
CREATE table r_seis_summary_type (
SUMMARY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_SWEEP_TYPE'
CREATE table r_seis_sweep_type (
SEIS_SWEEP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEIS_TRANS_COMP_TYPE'
CREATE table r_seis_trans_comp_type (
SEIS_TRANS_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEND_METHOD'
CREATE table r_send_method (
SEND_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SERVICE_QUALITY'
CREATE table r_service_quality (
SERVICE_QUALITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SEVERITY'
CREATE table r_severity (
SEVERITY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_AIRSTRIP_TYPE'
CREATE table r_sf_airstrip_type (
AIRSTRIP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_BRIDGE_TYPE'
CREATE table r_sf_bridge_type (
BRIDGE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_COMPONENT_TYPE'
CREATE table r_sf_component_type (
SF_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_DESC_TYPE'
CREATE table r_sf_desc_type (
DESC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_DESC_VALUE'
CREATE table r_sf_desc_value (
DESC_TYPE  VARCHAR(20) NOT NULL,
VALUE_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_DOCK_TYPE'
CREATE table r_sf_dock_type (
DOCK_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_ELECTRIC_TYPE'
CREATE table r_sf_electric_type (
ELECTRIC_FACILITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_LANDING_TYPE'
CREATE table r_sf_landing_type (
LANDING_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_MAINTAIN_TYPE'
CREATE table r_sf_maintain_type (
SF_TYPE  VARCHAR(30) NOT NULL,
MAINTAIN_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_PAD_TYPE'
CREATE table r_sf_pad_type (
PAD_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_ROAD_TYPE'
CREATE table r_sf_road_type (
ROAD_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_STATUS'
CREATE table r_sf_status (
STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_STATUS_TYPE'
CREATE table r_sf_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_SURFACE_TYPE'
CREATE table r_sf_surface_type (
SURFACE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_TOWER_TYPE'
CREATE table r_sf_tower_type (
TOWER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_VEHICLE_TYPE'
CREATE table r_sf_vehicle_type (
VEHICLE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_VESSEL_ROLE'
CREATE table r_sf_vessel_role (
VESSEL_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_VESSEL_TYPE'
CREATE table r_sf_vessel_type (
VESSEL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SF_XREF_TYPE'
CREATE table r_sf_xref_type (
XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SHOW_TYPE'
CREATE table r_show_type (
SHOW_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SHUTIN_PRESS_TYPE'
CREATE table r_shutin_press_type (
SHUTIN_PRESSURE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SOURCE'
CREATE table r_source (
SOURCE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_SOURCE  VARCHAR(20),
SHORT_NAME  VARCHAR(30),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SOURCE_ORIGIN'
CREATE table r_source_origin (
SOURCE  VARCHAR(20) NOT NULL,
ORIGIN_OBS_NO INT,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
OWNER_BA_ID  VARCHAR(20),
PHYSICAL_ITEM_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
ROW_SOURCE  VARCHAR(20),
SHORT_NAME  VARCHAR(30),
SOURCE_DOCUMENT  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SPACING_UNIT_TYPE'
CREATE table r_spacing_unit_type (
SPACING_UNIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SPATIAL_DESC_COMP_TYPE'
CREATE table r_spatial_desc_comp_type (
SP_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SPATIAL_DESC_TYPE'
CREATE table r_spatial_desc_type (
SPATIAL_DESC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SPATIAL_XREF_TYPE'
CREATE table r_spatial_xref_type (
SPATIAL_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SP_POINT_VERSION_TYPE'
CREATE table r_sp_point_version_type (
VERSION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SP_ZONE_DEFIN__XREF'
CREATE table r_sp_zone_defin__xref (
XREF_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SP_ZONE_DERIV'
CREATE table r_sp_zone_deriv (
ZONE_DERIVATION_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SP_ZONE_TYPE'
CREATE table r_sp_zone_type (
ZONE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STATUS_GROUP'
CREATE table r_status_group (
STATUS_GROUP  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STORE_STATUS'
CREATE table r_store_status (
PHYSICAL_STORE_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_ACQTN_METHOD'
CREATE table r_strat_acqtn_method (
STRAT_ACQTN_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_AGE_METHOD'
CREATE table r_strat_age_method (
STRAT_AGE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_ALIAS_TYPE'
CREATE table r_strat_alias_type (
STRAT_ALIAS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_COLUMN_TYPE'
CREATE table r_strat_column_type (
STRAT_COLUMN_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_COL_XREF_TYPE'
CREATE table r_strat_col_xref_type (
STRAT_COLUMN_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_CORR_CRITERIA'
CREATE table r_strat_corr_criteria (
STRAT_CORRELATION_CRITERIA  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_CORR_TYPE'
CREATE table r_strat_corr_type (
STRAT_CORRELATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_DESC_TYPE'
CREATE table r_strat_desc_type (
DESCRIPTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_EQUIV_DIRECT'
CREATE table r_strat_equiv_direct (
STRAT_EQUIVALENCE_DIRECTION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_EQUIV_TYPE'
CREATE table r_strat_equiv_type (
STRAT_EQUIVALENCE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_FLD_NODE_LOC'
CREATE table r_strat_fld_node_loc (
NODE_LOC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_HIERARCHY'
CREATE table r_strat_hierarchy (
STRAT_HIERARCHY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_INTERP_METHOD'
CREATE table r_strat_interp_method (
STRAT_INTERPRET_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_NAME_SET_TYPE'
CREATE table r_strat_name_set_type (
STRAT_NAME_SET_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_OCCURRENCE_TYPE'
CREATE table r_strat_occurrence_type (
OCCURRENCE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_STATUS'
CREATE table r_strat_status (
STRAT_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_TOPO_RELATION'
CREATE table r_strat_topo_relation (
STRAT_TOPO_RELATION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_TYPE'
CREATE table r_strat_type (
STRAT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_UNIT_COMP_TYPE'
CREATE table r_strat_unit_comp_type (
STRAT_UNIT_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_UNIT_DESC'
CREATE table r_strat_unit_desc (
STRAT_UNIT_DESC  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_UNIT_QUALIFIER'
CREATE table r_strat_unit_qualifier (
QUALIFIER  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STRAT_UNIT_TYPE'
CREATE table r_strat_unit_type (
STRAT_TYPE  VARCHAR(20) NOT NULL,
STRAT_UNIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STREAMER_COMP'
CREATE table r_streamer_comp (
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_STREAMER_POSITION'
CREATE table r_streamer_position (
STREAMER_POSITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SUBSTANCE_COMP_TYPE'
CREATE table r_substance_comp_type (
SUBSTANCE_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_SW_APPLICATION'
CREATE table r_sw_application (
SW_APPLICATION_ID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
APPLICATION_VERSION  VARCHAR(12),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_UOM_SYSTEM_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TAX_CREDIT_CODE'
CREATE table r_tax_credit_code (
TAX_CREDIT_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TEST_EQUIPMENT'
CREATE table r_test_equipment (
EQUIP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TEST_PERIOD_TYPE'
CREATE table r_test_period_type (
TEST_PERIOD_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TEST_RECOV_METHOD'
CREATE table r_test_recov_method (
RECOVERY_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TEST_RESULT'
CREATE table r_test_result (
TEST_RESULT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TEST_SHUTOFF_TYPE'
CREATE table r_test_shutoff_type (
TEST_SHUTOFF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TEST_SUBTYPE'
CREATE table r_test_subtype (
TEST_TYPE  VARCHAR(20) NOT NULL,
TEST_SUBTYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TIMEZONE'
CREATE table r_timezone (
TIMEZONE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TITLE_OWN_TYPE'
CREATE table r_title_own_type (
TITLE_OWN_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TOUR_OCCURRENCE_TYPE'
CREATE table r_tour_occurrence_type (
OCCURRENCE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TRACE_HEADER_FORMAT'
CREATE table r_trace_header_format (
HEADER_FORMAT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TRACE_HEADER_WORD'
CREATE table r_trace_header_word (
HEADER_WORD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TRANS_COMP_TYPE'
CREATE table r_trans_comp_type (
TRANS_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TRANS_STATUS'
CREATE table r_trans_status (
TRANSACTION_STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TRANS_TYPE'
CREATE table r_trans_type (
TRANS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TREATMENT_FLUID'
CREATE table r_treatment_fluid (
TREATMENT_FLUID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TREATMENT_TYPE'
CREATE table r_treatment_type (
TREATMENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TUBING_GRADE'
CREATE table r_tubing_grade (
TUBING_GRADE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TUBING_TYPE'
CREATE table r_tubing_type (
TUBING_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_TVD_METHOD'
CREATE table r_tvd_method (
TVD_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_VELOCITY_COMPUTE'
CREATE table r_velocity_compute (
COMPUTE_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_VELOCITY_DIMENSION'
CREATE table r_velocity_dimension (
VELOCITY_DIMENSION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_VELOCITY_TYPE'
CREATE table r_velocity_type (
VELOCITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_VERTICAL_DATUM_TYPE'
CREATE table r_vertical_datum_type (
VERTICAL_DATUM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_VESSEL_REFERENCE'
CREATE table r_vessel_reference (
REFERENCE_POINT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_VOLUME_METHOD'
CREATE table r_volume_method (
VOLUME_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_VSP_TYPE'
CREATE table r_vsp_type (
VSP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WASTE_ADJUST_REASON'
CREATE table r_waste_adjust_reason (
ADJUST_REASON  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WASTE_FACILITY_TYPE'
CREATE table r_waste_facility_type (
WASTE_FACILITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WASTE_HANDLING'
CREATE table r_waste_handling (
WASTE_HANDLING_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WASTE_HAZARD_TYPE'
CREATE table r_waste_hazard_type (
WASTE_HAZARD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WASTE_MATERIAL'
CREATE table r_waste_material (
WASTE_MATERIAL  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PREFERRED_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WASTE_ORIGIN'
CREATE table r_waste_origin (
WASTE_ORIGIN  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WATER_BOTTOM_ZONE'
CREATE table r_water_bottom_zone (
WATER_BOTTOM_ZONE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WATER_CONDITION'
CREATE table r_water_condition (
WATER_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WATER_DATUM'
CREATE table r_water_datum (
WATER_DATUM  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WATER_TYPE'
CREATE table r_water_type (
WATER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WEATHER_CONDITION'
CREATE table r_weather_condition (
WEATHER_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_ACTIVITY_CAUSE'
CREATE table r_well_activity_cause (
CAUSE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PARENT_CAUSE_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_ACTIVITY_COMP_TYPE'
CREATE table r_well_activity_comp_type (
WELL_ACTIVITY_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_ACT_TYPE_EQUIV'
CREATE table r_well_act_type_equiv (
EQUIV_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_ALIAS_LOCATION'
CREATE table r_well_alias_location (
LOCATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_CIRC_PRESS_TYPE'
CREATE table r_well_circ_press_type (
CIRC_PRESSURE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_CLASS'
CREATE table r_well_class (
WELL_CLASS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_COMPONENT_TYPE'
CREATE table r_well_component_type (
WELL_COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_DATUM_TYPE'
CREATE table r_well_datum_type (
WELL_DATUM_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_DOWNTIME_TYPE'
CREATE table r_well_downtime_type (
DOWNTIME_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_DRILL_OP_TYPE'
CREATE table r_well_drill_op_type (
DRILL_OP_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_FACILITY_USE_TYPE'
CREATE table r_well_facility_use_type (
FACILITY_USE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_LEVEL_TYPE'
CREATE table r_well_level_type (
WELL_LEVEL_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_LIC_COND'
CREATE table r_well_lic_cond (
CONDITION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_LIC_COND_CODE'
CREATE table r_well_lic_cond_code (
CONDITION_TYPE  VARCHAR(20) NOT NULL,
CONDITION_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_LIC_DUE_CONDITION'
CREATE table r_well_lic_due_condition (
DUE_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_LIC_VIOL_RESOL'
CREATE table r_well_lic_viol_resol (
RESOLVE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_LIC_VIOL_TYPE'
CREATE table r_well_lic_viol_type (
VIOLATION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_LOG_CLASS'
CREATE table r_well_log_class (
WELL_LOG_CLASS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_NODE_PICK_METHOD'
CREATE table r_well_node_pick_method (
PICK_METHOD  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_PROFILE_TYPE'
CREATE table r_well_profile_type (
WELL_PROFILE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_QUALIFIC_TYPE'
CREATE table r_well_qualific_type (
WELL_QUALIFIC_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_REF_VALUE_TYPE'
CREATE table r_well_ref_value_type (
REFERENCE_VALUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_RELATIONSHIP'
CREATE table r_well_relationship (
WELL_RELATIONSHIP  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_SERVICE_METRIC'
CREATE table r_well_service_metric (
SERVICE_METRIC  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_SERV_METRIC_CODE'
CREATE table r_well_serv_metric_code (
SERVICE_METRIC  VARCHAR(20) NOT NULL,
METRIC_CODE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_SF_USE_TYPE'
CREATE table r_well_sf_use_type (
SF_USE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_STATUS'
CREATE table r_well_status (
STATUS_TYPE  VARCHAR(20) NOT NULL,
STATUS  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
STATUS_GROUP  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_STATUS_TYPE'
CREATE table r_well_status_type (
STATUS_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_TEST_TYPE'
CREATE table r_well_test_type (
WELL_TEST_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_XREF_TYPE'
CREATE table r_well_xref_type (
XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WELL_ZONE_INT_VALUE'
CREATE table r_well_zone_int_value (
VALUE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WIND_STRENGTH'
CREATE table r_wind_strength (
WIND_STRENGTH  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WORK_BID_TYPE'
CREATE table r_work_bid_type (
WORK_BID_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WO_BA_ROLE'
CREATE table r_wo_ba_role (
BA_ROLE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WO_COMPONENT_TYPE'
CREATE table r_wo_component_type (
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WO_CONDITION'
CREATE table r_wo_condition (
WORK_ORDER_TYPE  VARCHAR(20) NOT NULL,
WORK_ORDER_CONDITION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WO_DELIVERY_TYPE'
CREATE table r_wo_delivery_type (
DELIVERY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WO_INSTRUCTION'
CREATE table r_wo_instruction (
INSTRUCTION_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WO_TYPE'
CREATE table r_wo_type (
WORK_ORDER_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE R_WO_XREF_TYPE'
CREATE table r_wo_xref_type (
WO_XREF_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SAMPLE_ANALYSIS'
CREATE table sample_analysis (
ANALYSIS_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_BA_ID  VARCHAR(20),
ANALYSIS_DATE TIMESTAMP(0),
ANALYSIS_QUALITY  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
COLLECTION_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LABORATORY_REFERENCE_NUM  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
RECEIVED_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
REPORTED_DATE TIMESTAMP(0),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_LOCATION  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SAMPLE_ANAL_COMPONENT'
CREATE table sample_anal_component (
ANALYSIS_ID  VARCHAR(20) NOT NULL,
ANALYSIS_SOURCE  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
LITH_SAMPLE_ID  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RUN_NUM  VARCHAR(4),
SAMPLE_DATE TIMESTAMP(0),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
TEST_NUM  VARCHAR(4),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20)
,
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_TEST_SOURCE  VARCHAR(20),
WELL_TEST_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SAMPLE_GAS_ANALYSIS'
CREATE table sample_gas_analysis (
ANALYSIS_ID  VARCHAR(20) NOT NULL,
ANALYSIS_SOURCE  VARCHAR(20) NOT NULL,
FLUID_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SAMPLE_GAS_ANAL_DETAIL'
CREATE table sample_gas_anal_detail (
ANALYSIS_ID  VARCHAR(20) NOT NULL,
ANALYSIS_SOURCE  VARCHAR(20) NOT NULL,
FLUID_TYPE  VARCHAR(20) NOT NULL,
ANALYSIS_PROPERTY  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_VALUE DOUBLE PRECISION,
ANALYSIS_VALUE_CODE  VARCHAR(20),
ANALYSIS_VALUE_OUOM  VARCHAR(20),
ANALYSIS_VALUE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SAMPLE_OIL_ANALYSIS'
CREATE table sample_oil_analysis (
ANALYSIS_ID  VARCHAR(20) NOT NULL,
ANALYSIS_SOURCE  VARCHAR(20) NOT NULL,
OIL_ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GOR DECIMAL(15,6),
GOR_OUOM  VARCHAR(20),
MEASURED_PRESSURE DECIMAL(8,2),
MEASURED_PRESSURE_OUOM  VARCHAR(20),
OIL_ANALYSIS_TEMPERATURE DECIMAL(5,2),
OIL_ANALYSIS_TEMP_OUOM  VARCHAR(20),
OIL_DENSITY DECIMAL(9,4),
OIL_DENSITY_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SULPHUR_CONTENT DECIMAL(10,6),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SAMPLE_OIL_ANAL_DETAIL'
CREATE table sample_oil_anal_detail (
ANALYSIS_ID  VARCHAR(20) NOT NULL,
ANALYSIS_SOURCE  VARCHAR(20) NOT NULL,
OIL_ANALYSIS_OBS_NO INT,
ANALYSIS_PROPERTY  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_VALUE DOUBLE PRECISION,
ANALYSIS_VALUE_CODE  VARCHAR(20),
ANALYSIS_VALUE_OUOM  VARCHAR(20),
ANALYSIS_VALUE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SAMPLE_OIL_VISCOSITY'
CREATE table sample_oil_viscosity (
ANALYSIS_ID  VARCHAR(20) NOT NULL,
ANALYSIS_SOURCE  VARCHAR(20) NOT NULL,
OIL_ANALYSIS_OBS_NO INT,
VISCOSITY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OIL_TEMPERATURE DECIMAL(5,2),
OIL_TEMPERATURE_OUOM  VARCHAR(20),
OIL_TYPE  VARCHAR(20),
OIL_VISCOSITY DECIMAL(8,3),
OIL_VISCOSITY_OUOM  VARCHAR(20),
OIL_VISCOSITY_UOM  VARCHAR(20),
POUR_POINT_TEMPERATURE DECIMAL(5,2),
POUR_POINT_TEMPERATURE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SAMPLE_WATER_ANALYSIS'
CREATE table sample_water_analysis (
ANALYSIS_ID  VARCHAR(20) NOT NULL,
ANALYSIS_SOURCE  VARCHAR(20) NOT NULL,
WATER_ANAL_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESERVOIR_TEMPERATURE DECIMAL(5,2),
RESERVOIR_TEMPERATURE_OUOM  VARCHAR(20),
RW_TEMPERATURE DECIMAL(5,2),
RW_TEMPERATURE_OUOM  VARCHAR(20),
SALINITY_TYPE  VARCHAR(20),
SAMPLE_WATER_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
WATER_DENSITY DECIMAL(9,4),
WATER_DENSITY_OUOM  VARCHAR(20),
WATER_PH DECIMAL(4,1),
WATER_RESISTIVITY DECIMAL(8,4),
WATER_RESISTIVITY_OUOM  VARCHAR(20),
WATER_SALINITY DECIMAL(15,6),
WATER_SALINITY_OUOM  VARCHAR(20),
WATER_SALINITY_UOM  VARCHAR(20),
WATER_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SAMPLE_WATER_ANAL_DTL'
CREATE table sample_water_anal_dtl (
ANALYSIS_ID  VARCHAR(20) NOT NULL,
ANALYSIS_SOURCE  VARCHAR(20) NOT NULL,
WATER_ANAL_OBS_NO INT,
ANALYSIS_PROPERTY  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_VALUE DOUBLE PRECISION,
ANALYSIS_VALUE_CODE  VARCHAR(20),
ANALYSIS_VALUE_OUOM  VARCHAR(20),
ANALYSIS_VALUE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_3D'
CREATE table seis_3d (
SEIS_3D_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEIS_3D_REASON  VARCHAR(20),
SEIS_3D_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_ACQTN_DESIGN'
CREATE table seis_acqtn_design (
ACQTN_DESIGN_ID  VARCHAR(20) NOT NULL,
ACQTN_BIN_SIZE_OUOM  VARCHAR(20),
ACQTN_COMPLETED_DATE TIMESTAMP(0),
ACQTN_COMPLETED_DATE_DESC  VARCHAR(8),
ACQTN_DIMENSION  VARCHAR(20),
ACQTN_DIRECTION  VARCHAR(20),
ACQTN_INLINE_BIN_SIZE DECIMAL(6,2),
ACQTN_REMARK  VARCHAR(2000),
ACQTN_SHOTPT_INTERVAL DECIMAL(6,2),
ACQTN_SHOTPT_INTERVAL_OUOM  VARCHAR(20),
ACQTN_SHOT_LINE_SPACING DECIMAL(6,2),
ACQTN_SHOT_LINE_SPACING_OUOM  VARCHAR(20),
ACQTN_SHOT_TIME DECIMAL(12,5),
ACQTN_SHOT_TIME_OUOM  VARCHAR(20),
ACQTN_START_DATE TIMESTAMP(0),
ACQTN_START_DATE_DESC  VARCHAR(8),
ACQTN_XLINE_BIN_SIZE DECIMAL(6,2),
ACTIVE_IND  VARCHAR(1),
ACTUAL_IND  VARCHAR(1),
CDP_COVERAGE INT,
EFFECTIVE_DATE TIMESTAMP(0),
ENERGY_CHARGE_SIZE DECIMAL(7,3),
ENERGY_CHARGE_SIZE_OUOM  VARCHAR(20),
ENERGY_OPRG_PSR DECIMAL(6,2),
ENERGY_OPRG_PSR_OUOM  VARCHAR(20),
ENERGY_OPRG_VOLUME DECIMAL(6,2),
ENERGY_OPRG_VOLUME_OUOM  VARCHAR(20),
ENERGY_SHOT_DEPTH DECIMAL(10,5),
ENERGY_SHOT_DEPTH_OUOM  VARCHAR(20),
ENERGY_SRC_ARRAY_SPC DECIMAL(4,1),
ENERGY_SRC_ARRAY_SPC_OUOM  VARCHAR(20),
ENERGY_SRC_ARRAY_TYPE  VARCHAR(20),
ENERGY_SRC_MAKE  VARCHAR(20),
ENERGY_SRC_PER_SHOT SMALLINT,
ENERGY_SWEEP_DURATION DECIMAL(4,2),
ENERGY_SWEEP_DURATION_OUOM  VARCHAR(20),
ENERGY_SWEEP_END_FREQ SMALLINT,
ENERGY_SWEEP_FREQ_OUOM  VARCHAR(20),
ENERGY_SWEEP_MVUP_DIST DECIMAL(6,2),
ENERGY_SWEEP_MVUP_DIST_OUOM  VARCHAR(20),
ENERGY_SWEEP_NO SMALLINT,
ENERGY_SWEEP_ST_FREQ SMALLINT,
ENERGY_SWEEP_TAPER DECIMAL(4,1),
ENERGY_SWEEP_TAPER_OUOM  VARCHAR(20),
ENERGY_SWEEP_TYPE  VARCHAR(20),
ENERGY_TYPE  VARCHAR(20),
ENVIRONMENT  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
MONITOR_DEPTH DECIMAL(10,5),
MONITOR_DEPTH_OUOM  VARCHAR(20),
NOMINAL_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
RCRD_CHANNEL_COUNT INT,
RCRD_FORMAT_TYPE  VARCHAR(20),
RCRD_GAIN_MODE  VARCHAR(20),
RCRD_HF_FREQ DECIMAL(4,1),
RCRD_HF_SLOPE DECIMAL(4,1),
RCRD_LF_FREQ DECIMAL(4,1),
RCRD_LF_SLOPE DECIMAL(4,1),
RCRD_MAKE  VARCHAR(20),
RCRD_NEAR_SURF_CORR  VARCHAR(240),
RCRD_NEAR_SURF_CORR_OUOM  VARCHAR(20),
RCRD_NF_FREQ SMALLINT,
RCRD_NF_IND  VARCHAR(1),
RCRD_POLARITY  VARCHAR(20),
RCRD_REC_LENGTH DECIMAL(10,5),
RCRD_REC_LENGTH_OUOM  VARCHAR(20),
RCRD_SAMPLE_RATE SMALLINT,
RCRD_SAMPLE_RATE_OUOM  VARCHAR(20),
RCVR_LINE_SPACING DECIMAL(6,2),
RCVR_LINE_SPACING_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
REP_WATER_ACOUSTIC_VEL DECIMAL(10,5),
REP_WATER_ACOUSTIC_VEL_OUOM  VARCHAR(20),
SHOT_BY  VARCHAR(20),
SHOT_FOR  VARCHAR(20),
SOURCE  VARCHAR(20),
WELL_SRC_AZIMUTH DECIMAL(10,6),
WELL_SRC_AZIMUTH_NORTH  VARCHAR(20),
WELL_SRC_OFFSET DECIMAL(10,5),
WELL_SRC_OFFSET_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30)
,
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_ACQTN_SPECTRUM'
CREATE table seis_acqtn_spectrum (
ACQTN_DESIGN_ID  VARCHAR(20) NOT NULL,
SEIS_SPECTRUM_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESIGN_DESC  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_ACQTN_SURVEY'
CREATE table seis_acqtn_survey (
SEIS_ACQTN_SURVEY_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACQTN_SURVEY_NAME  VARCHAR(40),
ACTIVE_IND  VARCHAR(1),
COMPLETED_DATE TIMESTAMP(0),
COMPLETED_DATE_DESC  VARCHAR(8),
COUNTRY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_DIMENSION  VARCHAR(20),
SHOT_FOR  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
START_DATE_DESC  VARCHAR(8),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_ACTIVITY'
CREATE table seis_activity (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACTIVITY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_DURATION DECIMAL(10,5),
ACTIVITY_DURATION_OUOM  VARCHAR(20),
AREA_SIZE DECIMAL(20,10),
AREA_SIZE_OUOM  VARCHAR(20),
CREW_COMPANY_BA_ID  VARCHAR(20),
CREW_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NLINE_NO INT,
FIRST_SEIS_POINT_ID  VARCHAR(16),
FIRST_XLINE_NO INT,
LAST_NLINE_NO INT,
LAST_SEIS_POINT_ID  VARCHAR(16),
LAST_XLINE_NO INT,
LINE_LENGTH DECIMAL(10,3),
LINE_LENGTH_OUOM  VARCHAR(20),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEIS_ACTIVITY_CLASS  VARCHAR(20),
SEIS_ACTIVITY_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
START_TIMEZONE  VARCHAR(20),
TOTAL_TIME DECIMAL(10,5),
TOTAL_TIME_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_ALIAS'
CREATE table seis_alias (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
SEIS_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_BA_SERVICE'
CREATE table seis_ba_service (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
PROVIDED_BY  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_SERVICE_TYPE  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SERVICE_DATE TIMESTAMP(0),
SERVICE_QUALITY  VARCHAR(20),
SERVICE_REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_BIN_GRID'
CREATE table seis_bin_grid (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
BIN_GRID_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANGLE_ROTATION DECIMAL(6,3),
BIN_GRID_TYPE  VARCHAR(20),
BIN_GRID_VERSION DECIMAL(5,2),
BIN_METHOD  VARCHAR(20),
BIN_POINT_OUOM  VARCHAR(20),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
CORNER1_LAT DECIMAL(14,9),
CORNER1_LONG DECIMAL(14,9),
CORNER2_LAT DECIMAL(14,9),
CORNER2_LONG DECIMAL(14,9),
CORNER3_LAT DECIMAL(14,9),
CORNER3_LONG DECIMAL(14,9),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FOLD_COVERAGE DECIMAL(10,5),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
NLINE_AZIMUTH DECIMAL(15,12),
NLINE_COUNT INT,
NLINE_MAX_NO INT,
NLINE_MIN_NO INT,
NLINE_SPACING DECIMAL(6,2),
NORTH_TYPE  VARCHAR(20),
POINT_ORIGIN_EASTING DECIMAL(11,2),
POINT_ORIGIN_LATITUDE DECIMAL(14,9),
POINT_ORIGIN_LONGITUDE DECIMAL(14,9),
POINT_ORIGIN_NORTHING DECIMAL(11,2),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEIS_BIN_NUMERIC_ID BIGINT,
XLINE_AZIMUTH DECIMAL(15,12),
XLINE_COUNT INT,
XLINE_MAX_NO INT,
XLINE_MIN_NO INT,
XLINE_SPACING DECIMAL(6,2),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_BIN_ORIGIN'
CREATE table seis_bin_origin (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
BIN_GRID_ID  VARCHAR(20) NOT NULL,
BIN_GRID_SOURCE  VARCHAR(20) NOT NULL,
BIN_ORIGIN_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
CORNER1_LAT DECIMAL(14,9),
CORNER1_LONG DECIMAL(14,9),
CORNER2_LAT DECIMAL(14,9),
CORNER2_LONG DECIMAL(14,9),
CORNER3_LAT DECIMAL(14,9),
CORNER3_LONG DECIMAL(14,9),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUSION_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUSION_IND  VARCHAR(1),
INPUT_BIN_GRID_ID  VARCHAR(20),
INPUT_BIN_SOURCE  VARCHAR(20),
INPUT_SEIS_SET_ID  VARCHAR(20),
INPUT_SEIS_SET_TYPE  VARCHAR(30),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_BIN_OUTLINE'
CREATE table seis_bin_outline (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
BIN_GRID_ID  VARCHAR(20) NOT NULL,
BIN_GRID_SOURCE  VARCHAR(20) NOT NULL,
OUTLINE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BIN_OUTLINE_TYPE  VARCHAR(20),
BIN_POINT_ID  VARCHAR(16),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
EASTING DECIMAL(12,7),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
NLINE_NO INT,
NORTHING DECIMAL(12,7),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
XLINE_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_BIN_POINT'
CREATE table seis_bin_point (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
BIN_GRID_ID  VARCHAR(20) NOT NULL,
BIN_GRID_SOURCE  VARCHAR(20) NOT NULL,
BIN_POINT_ID  VARCHAR(16) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EASTING DECIMAL(12,7),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NLINE_NO INT,
NORTHING DECIMAL(12,7),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
VELOCITY_ANALYSIS_IND  VARCHAR(1),
XLINE_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_BIN_POINT_TRACE'
CREATE table seis_bin_point_trace (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
BIN_GRID_ID  VARCHAR(20) NOT NULL,
BIN_GRID_SOURCE  VARCHAR(20) NOT NULL,
BIN_POINT_ID  VARCHAR(16) NOT NULL,
TRACE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_BIN_POINT_VERSION'
CREATE table seis_bin_point_version (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
BIN_GRID_ID  VARCHAR(20) NOT NULL,
BIN_GRID_SOURCE  VARCHAR(20) NOT NULL,
BIN_POINT_ID  VARCHAR(16) NOT NULL,
BIN_POINT_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
EASTING DECIMAL(15,7),
EASTING_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(7,2),
ELEV_OUOM  VARCHAR(20),
EW_DIRECTION  VARCHAR(20),
EW_DISTANCE DECIMAL(7,2),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
MAP_COORD_SYSTEM_ID  VARCHAR(20),
NORTHING DECIMAL(15,7),
NORTHING_OUOM  VARCHAR(20),
NORTH_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
NS_DISTANCE DECIMAL(7,2),
NS_START_LINE  VARCHAR(20),
POLAR_AZIMUTH DECIMAL(10,6),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REFERENCE_LOC  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_POINT_LABEL  VARCHAR(20),
SEIS_POINT_LAT DECIMAL(14,9),
SEIS_POINT_LONG DECIMAL(14,9),
SEIS_POINT_NO DECIMAL(10,3),
UWI  VARCHAR(20),
VERSION_TYPE  VARCHAR(20),
X_COORDINATE DECIMAL(11,2),
Y_COORDINATE DECIMAL(11,2),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_CHANNEL'
CREATE table seis_channel (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
RECORD_ID  VARCHAR(20) NOT NULL,
CHANNEL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CHANNEL_NUM INT,
CHANNEL_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FILE_NUM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEIS_RECEIVER_POINT_ID  VARCHAR(16),
SOURCE  VARCHAR(20),
STREAMER_ID  VARCHAR(20),
VESSEL_CONFIG_OBS_NO INT,
VESSEL_ID  VARCHAR(20),
VESSEL_SF_TYPE  VARCHAR(30),
X_OFFSET DECIMAL(10,5),
X_OFFSET_OUOM  VARCHAR(20),
Y_OFFSET DECIMAL(10,5),
Y_OFFSET_OUOM  VARCHAR(20),
Z_OFFSET DECIMAL(10,5),
Z_OFFSET_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_GROUP_COMP'
CREATE table seis_group_comp (
SEIS_GROUP_ID  VARCHAR(20) NOT NULL,
SEIS_GROUP_SET_TYPE  VARCHAR(30) NOT NULL,
INPUT_SEIS_SET_ID  VARCHAR(20) NOT NULL,
INPUT_SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CORNER1_LAT DECIMAL(14,9),
CORNER1_LONG DECIMAL(14,9),
CORNER2_LAT DECIMAL(14,9),
CORNER2_LONG DECIMAL(14,9),
CORNER3_LAT DECIMAL(14,9),
CORNER3_LONG DECIMAL(14,9),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUSION_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUSION_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEIS_GROUP_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_INSPECTION'
CREATE table seis_inspection (
INSPECTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSPECTED_LENGTH DECIMAL(10,5),
INSPECTED_LENGTH_OUOM  VARCHAR(20),
INSPECTING_BA_ID  VARCHAR(20),
INSPECTION_DATE TIMESTAMP(0),
INSPECTION_STATUS  VARCHAR(20),
INSP_LOC_ADDRESS_OBS_NO INT,
INSP_LOC_BA_ID  VARCHAR(20),
INSP_LOC_SOURCE  VARCHAR(20),
MIN_LENGTH DECIMAL(10,5),
MIN_LENGTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REASON_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SCHEDULED_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_INSP_COMPONENT'
CREATE table seis_insp_component (
INSPECTION_ID  VARCHAR(20) NOT NULL,
INSPECTION_COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
AUTHORIZE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CIRC_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSPECTION_STATUS  VARCHAR(20),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20)
,
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_INTERP_COMP'
CREATE table seis_interp_comp (
INTERP_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
CORNER1_LAT DECIMAL(14,9),
CORNER1_LONG DECIMAL(14,9),
CORNER2_LAT DECIMAL(14,9),
CORNER2_LONG DECIMAL(14,9),
CORNER3_LAT DECIMAL(14,9),
CORNER3_LONG DECIMAL(14,9),
DATA_SAMPLE_SIZE DECIMAL(6,2),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INPUT_IND  VARCHAR(1),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
ORIGIN_TYPE  VARCHAR(20),
OUTPUT_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PROCESS_STEP_ID  VARCHAR(20),
PROC_COMPONENT_ID  VARCHAR(20),
PROC_SET_ID  VARCHAR(20),
PROC_SET_TYPE  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
VELOCITY_VOLUME_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_INTERP_LOAD'
CREATE table seis_interp_load (
INTERP_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
PROCESS_STEP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERP_ORIGIN_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROCESS_STATUS  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
STEP_NAME  VARCHAR(20),
STEP_SEQ_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_INTERP_LOAD_PARM'
CREATE table seis_interp_load_parm (
INTERP_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
PROCESS_STEP_ID  VARCHAR(20) NOT NULL,
PARAMETER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_DESC  VARCHAR(240),
PARAMETER_ORIGIN  VARCHAR(20),
PARAMETER_TYPE  VARCHAR(20),
PARAMETER_UOM  VARCHAR(20),
PARAMETER_VALUE_1 DOUBLE PRECISION,
PARAMETER_VALUE_2 DOUBLE PRECISION,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_INTERP_SET'
CREATE table seis_interp_set (
INTERP_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETER  VARCHAR(20),
INTERP_DATE TIMESTAMP(0),
INTERP_OBJECTIVE  VARCHAR(2000),
INTERP_TYPE  VARCHAR(20),
NAME  VARCHAR(255),
PICK_METHOD  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
TRACE_POSITION  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_INTERP_SURFACE'
CREATE table seis_interp_surface (
SURFACE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONFORMITY_RELATIONSHIP  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
ORDINAL_SEQ_NO INT,
OVERTURNED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPEAT_STRAT_OCCUR_NO SMALLINT,
REPEAT_STRAT_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SURFACE_NAME  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_LICENSE'
CREATE table seis_license (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
APPLICATION_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FEES_PAID_IND  VARCHAR(1),
GRANTED_BY_BA_ID  VARCHAR(20),
GRANTED_BY_CONTACT_ID  VARCHAR(20),
GRANTED_DATE TIMESTAMP(0),
GRANTED_TO_BA_ID  VARCHAR(20),
GRANTED_TO_CONTACT_ID  VARCHAR(20),
LICENSE_NUM  VARCHAR(40),
LICENSE_TERM DECIMAL(5,3),
LICENSE_TERM_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RATE_SCHEDULE_ID  VARCHAR(20),
REL_LICENSE_ID  VARCHAR(20),
REL_SEIS_SET_ID  VARCHAR(20),
REL_SEIS_SET_TYPE  VARCHAR(30),
REMARK  VARCHAR(2000),
SECONDARY_TERM DECIMAL(5,3),
SECONDARY_TERM_UOM  VARCHAR(20),
SEIS_LICENSE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
VIOLATION_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_LICENSE_ALIAS'
CREATE table seis_license_alias (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_LICENSE_AREA'
CREATE table seis_license_area (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_LICENSE_COND'
CREATE table seis_license_cond (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
CONDITION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_CODE  VARCHAR(20),
CONDITION_DESC  VARCHAR(240),
CONDITION_TYPE  VARCHAR(20),
CONDITION_VALUE DECIMAL(12,2),
CONDITION_VALUE_UOM  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
DUE_CONDITION  VARCHAR(20),
DUE_DATE TIMESTAMP(0),
DUE_FREQUENCY  VARCHAR(20),
DUE_TERM SMALLINT,
DUE_TERM_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPT_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_BY_BA_ID  VARCHAR(20),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_LICENSE_REMARK'
CREATE table seis_license_remark (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
REMARK_ID  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AUTHOR  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_LICENSE_STATUS'
CREATE table seis_license_status (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_STATUS  VARCHAR(20),
LICENSE_STATUS_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_LICENSE_TYPE'
CREATE table seis_license_type (
GRANTED_BY_BA_ID  VARCHAR(20) NOT NULL,
SEIS_LICENSE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_LICENSE_VIOLATION'
CREATE table seis_license_violation (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
VIOLATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESOLVE_DATE TIMESTAMP(0),
RESOLVE_DESC  VARCHAR(1024),
RESOLVE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
VIOLATION_DATE TIMESTAMP(0),
VIOLATION_DESC  VARCHAR(1024),
VIOLATION_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_LINE'
CREATE table seis_line (
SEIS_LINE_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DIMENSION  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LINE_NAME  VARCHAR(50),
PPDM_GUID  VARCHAR(38),
REFRACTION_REFLECTION  VARCHAR(20),
REMARK  VARCHAR(2000),
RESHOOT_OF_SET_ID  VARCHAR(20),
RESHOOT_SEIS_SET_TYPE  VARCHAR(30),
SEIS_ACQTN_SET_TYPE  VARCHAR(30),
SEIS_ACQTN_SURVEY_ID  VARCHAR(20),
SEIS_SPECTRUM_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
TEST_EXPERIMENTAL  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PATCH'
CREATE table seis_patch (
PATCH_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CHANNEL_COUNT INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAP_COUNT INT,
PATCH_LAYOUT  VARCHAR(2000),
PATCH_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROLL_ALONG_METHOD  VARCHAR(20),
SHOT_GAP_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
SYMMETRIC_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PATCH_DESC'
CREATE table seis_patch_desc (
PATCH_ID  VARCHAR(20) NOT NULL,
PATCH_DESC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_CHANNEL INT,
END_STATION_ID  VARCHAR(16),
END_X_OFFSET DECIMAL(8,2),
END_Y_OFFSET DECIMAL(8,2),
END_Z_OFFSET DECIMAL(8,2),
EXPIRY_DATE TIMESTAMP(0),
OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECORDED_LINE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_CHANNEL INT,
START_STATION_ID  VARCHAR(16),
START_X_OFFSET DECIMAL(8,2),
START_Y_OFFSET DECIMAL(8,2),
START_Z_OFFSET DECIMAL(8,2),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PICK'
CREATE table seis_pick (
INTERP_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
SURFACE_ID  VARCHAR(20) NOT NULL,
SEIS_PICK_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BIN_GRID_ID  VARCHAR(20),
BIN_POINT_ID  VARCHAR(16),
BIN_SEIS_SET_ID  VARCHAR(20),
BIN_SEIS_SET_TYPE  VARCHAR(30),
BIN_SOURCE  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERP_TYPE  VARCHAR(20),
PICK_DEPTH DECIMAL(10,5),
PICK_DEPTH_OUOM  VARCHAR(20),
PICK_DESCRIPTION  VARCHAR(240),
PICK_METHOD  VARCHAR(20),
PICK_QUALIFIER  VARCHAR(20),
PICK_QUALIF_REASON  VARCHAR(20),
PICK_QUALITY  VARCHAR(20),
PICK_VERSION_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_PICK_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SEIS_PICK_VALUE DECIMAL(12,4),
SEIS_PICK_VALUE_OUOM  VARCHAR(20),
SEIS_PICK_VALUE_UOM  VARCHAR(20),
SEIS_POINT_ID  VARCHAR(16),
SEIS_POINT_SET_ID  VARCHAR(20),
SEIS_POINT_SET_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
TRACE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_POINT'
CREATE table seis_point (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
SEIS_POINT_ID  VARCHAR(16) NOT NULL,
ACQTN_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BEND_IND  VARCHAR(1),
DATUM_ELEV DECIMAL(10,5),
DATUM_ELEV_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM  VARCHAR(20),
END_IND  VARCHAR(1),
EXCEPTION_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FLOWING_HOLE_IND  VARCHAR(1),
MAPPING_CODE  VARCHAR(8),
MEASURED_DEPTH DECIMAL(10,5),
MEASURED_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_DATUM  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_POINT_LABEL  VARCHAR(20),
SEIS_POINT_LAT DECIMAL(14,9),
SEIS_POINT_LONG DECIMAL(14,9),
SEIS_POINT_NO DECIMAL(10,3),
SEIS_STATION_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SPATIAL_SEQ_NO INT,
X_COORDINATE DECIMAL(11,2),
Y_COORDINATE DECIMAL(11,2),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_POINT_FLOW'
CREATE table seis_point_flow (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
SEIS_POINT_ID  VARCHAR(16) NOT NULL,
FLOW_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_DEPTH DECIMAL(10,5),
FLOW_DEPTH_OUOM  VARCHAR(20),
FLOW_DURATION DECIMAL(6,2),
FLOW_DURATION_UOM  VARCHAR(20),
FLOW_VOLUME DECIMAL(14,4),
FLOW_VOLUME_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMEDIAL_BA_ID  VARCHAR(20),
REMEDIAL_DATE TIMESTAMP(0),
REMEDIAL_IND  VARCHAR(1),
REPORT_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_POINT_FLOW_DESC'
CREATE table seis_point_flow_desc (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
SEIS_POINT_ID  VARCHAR(16) NOT NULL,
FLOW_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
DESCRIPTION_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_POINT_SUMMARY'
CREATE table seis_point_summary (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
SEIS_SUMMARY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AREA_SIZE DECIMAL(20,10),
AREA_SIZE_OUOM  VARCHAR(20),
CDP_COVERAGE INT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIRST_NLINE_NO INT,
FIRST_SEIS_POINT_ID  VARCHAR(16),
FIRST_XLINE_NO INT,
LAST_NLINE_NO INT,
LAST_SEIS_POINT_ID  VARCHAR(16),
LAST_XLINE_NO INT,
LINE_LENGTH DECIMAL(10,3),
LINE_LENGTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEIS_STATION_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SUMMARY_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_POINT_VERSION'
CREATE table seis_point_version (
SEIS_LINE_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
SEIS_POINT_ID  VARCHAR(16) NOT NULL,
SEIS_POINT_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
EASTING DECIMAL(15,7),
EASTING_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(7,2),
ELEV_OUOM  VARCHAR(20),
EW_DIRECTION  VARCHAR(20),
EW_DISTANCE DECIMAL(7,2),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
MAP_COORD_SYSTEM_ID  VARCHAR(20),
NORTHING DECIMAL(15,7),
NORTHING_OUOM  VARCHAR(20),
NORTH_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
NS_DISTANCE DECIMAL(7,2),
NS_START_LINE  VARCHAR(20),
POLAR_AZIMUTH DECIMAL(10,6),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REFERENCE_LOC  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_POINT_LABEL  VARCHAR(20),
SEIS_POINT_LAT DECIMAL(14,9),
SEIS_POINT_LONG DECIMAL(14,9),
SEIS_POINT_NO DECIMAL(10,3),
SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
VERSION_TYPE  VARCHAR(20),
X_COORDINATE DECIMAL(11,2),
Y_COORDINATE DECIMAL(11,2),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PROC_COMPONENT'
CREATE table seis_proc_component (
SEIS_PROC_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMP_SEIS_SET_ID  VARCHAR(20),
COMP_SEIS_SET_TYPE  VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INPUT_IND  VARCHAR(1),
OUTPUT_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PROCESSING_COMPONENT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_PROC_PLAN_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
VELOCITY_VOLUME_ID  VARCHAR(20),
WELL_LOG_CURVE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PROC_PARM'
CREATE table seis_proc_parm (
SEIS_PROC_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
PROCESS_STEP_ID  VARCHAR(20) NOT NULL,
PARAMETER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_DESC  VARCHAR(240),
PARAMETER_ORIGIN  VARCHAR(20),
PARAMETER_TYPE  VARCHAR(20),
PARAMETER_UOM  VARCHAR(20),
PARAMETER_VALUE_1 DOUBLE PRECISION,
PARAMETER_VALUE_2 DOUBLE PRECISION,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PROC_PLAN'
CREATE table seis_proc_plan (
SEIS_PROC_PLAN_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CREATED_BY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLAN_NAME  VARCHAR(255),
PLAN_NUM  VARCHAR(20),
PLAN_OWNER  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PROC_PLAN_PARM'
CREATE table seis_proc_plan_parm (
SEIS_PROC_PLAN_ID  VARCHAR(20) NOT NULL,
PROC_PLAN_STEP_ID  VARCHAR(20) NOT NULL,
PARAMETER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_DESC  VARCHAR(240),
PARAMETER_ORIGIN  VARCHAR(20),
PARAMETER_TYPE  VARCHAR(20),
PARAMETER_UOM  VARCHAR(20),
PARAMETER_VALUE_1 DOUBLE PRECISION,
PARAMETER_VALUE_2 DOUBLE PRECISION,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PROC_PLAN_STEP'
CREATE table seis_proc_plan_step (
SEIS_PROC_PLAN_ID  VARCHAR(20) NOT NULL,
PROC_PLAN_STEP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STEP_NAME  VARCHAR(20),
STEP_SEQ_NO INT,
STEP_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PROC_SET'
CREATE table seis_proc_set (
SEIS_PROC_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOLOGIC_PROVINCE  VARCHAR(20),
MAX_LATITUDE DECIMAL(14,9),
MAX_LONGITUDE DECIMAL(14,9),
MIN_LATITUDE DECIMAL(14,9),
MIN_LONGITUDE DECIMAL(14,9),
OBJECTIVE  VARCHAR(2000),
ORIGINAL_PROC_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PROCESSED_FOR  VARCHAR(20),
PROCESSING_COMPANY  VARCHAR(20),
PROCESSING_NAME  VARCHAR(255),
PROCESS_STATUS  VARCHAR(20),
PROC_SET_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
REPROCESSED_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PROC_STEP'
CREATE table seis_proc_step (
SEIS_PROC_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
PROCESS_STEP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROCESS_STATUS  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
STEP_NAME  VARCHAR(20),
STEP_SEQ_NO INT,
STEP_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_PROC_STEP_COMPONENT'
CREATE table seis_proc_step_component (
SEIS_PROC_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
PROCESS_STEP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INPUT_IND  VARCHAR(1),
OUTPUT_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_RECORD'
CREATE table seis_record (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
RECORD_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTUAL_ACQTN_DESIGN_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_FILE_NUMBER  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
LOGICAL_RECORD_NUMBER  VARCHAR(20),
PATCH_ID  VARCHAR(20),
PATCH_USED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
RCRD_CHANNEL_COUNT INT,
RECORDING_REMARK  VARCHAR(2000),
RECORD_NUMBER  VARCHAR(20),
RECORD_QUALITY  VARCHAR(20),
RECORD_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_SHOT_POINT_ID  VARCHAR(16),
SOURCE  VARCHAR(20),
TAPE_NUMBER  VARCHAR(20),
TIME_DELAY DECIMAL(10,5),
TIME_DELAY_OUOM  VARCHAR(20),
UPHOLE_TIME DECIMAL(10,5),
UPHOLE_TIME_OUOM  VARCHAR(20),
VESSEL_CONFIG_OBS_NO INT,
VESSEL_ID  VARCHAR(20),
VESSEL_SF_TYPE  VARCHAR(30),
X_OFFSET DECIMAL(8,2),
Y_OFFSET DECIMAL(8,2),
Z_OFFSET DECIMAL(8,2),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_RECVR_MAKE'
CREATE table seis_recvr_make (
SEIS_RCVR_MAKE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
BASE_HORIZONTAL_FREQ SMALLINT,
BASE_VERTICAL_FREQ SMALLINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEIS_RCVR_TYPE  VARCHAR(20),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_RECVR_SETUP'
CREATE table seis_recvr_setup (
ACQTN_DESIGN_ID  VARCHAR(20) NOT NULL,
RCVR_SETUP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVG_FEATHERING_ANGLE DECIMAL(9,3),
AVG_STREAMER_DEPTH DECIMAL(6,2),
AVG_STREAMER_DEPTH_OUOM  VARCHAR(20),
BASE_FREQ SMALLINT,
DEPTH_CONTROLLER  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIXED_IND  VARCHAR(1),
GROUP_SPACING DECIMAL(6,2),
GROUP_SPACING_OUOM  VARCHAR(20),
INLINE_OFFSET DECIMAL(8,2),
INLINE_OFFSET_DIRECTION  VARCHAR(20),
OFFLINE_OFFSET DECIMAL(8,2),
OFFLINE_OFFSET_DIRECTION  VARCHAR(20),
OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RCVR_ARRAY_TYPE  VARCHAR(20),
RCVR_MAKE  VARCHAR(20),
RCVR_PHONE_COUNT SMALLINT,
RCVR_SPACING DECIMAL(6,2),
RCVR_SPACING_OUOM  VARCHAR(20),
RCVR_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPREAD_DESCRIPTION  VARCHAR(40),
SPREAD_DESCRIPTION_OUOM  VARCHAR(20),
STREAMER_COUNT SMALLINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SEGMENT'
CREATE table seis_segment (
SEGMENT_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACQTN_DESIGN_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REFRACTION_REFLECTION  VARCHAR(20),
REMARK  VARCHAR(2000),
ROW_AUDIT_BY  VARCHAR(30),
ROW_AUDIT_DATE TIMESTAMP(0),
SEIS_DIMENSION  VARCHAR(20),
SEIS_LINE_ID  VARCHAR(20),
SEIS_LINE_SET_TYPE  VARCHAR(30),
SEIS_SEGMENT_REASON  VARCHAR(20),
SEIS_SPECTRUM_TYPE  VARCHAR(20),
SEIS_STATION_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
TEST_EXPERIMENTAL  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SET'
CREATE table seis_set (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACQTN_DESIGN_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
AREA_SIZE DECIMAL(20,10),
AREA_SIZE_OUOM  VARCHAR(20),
COORD_ACQUISITION_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
CURRENT_SEIS_STATUS  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_ID  VARCHAR(20),
GEOGRAPHIC_COORD_SYSTEM_ID  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
MAX_LATITUDE DECIMAL(14,9),
MAX_LONGITUDE DECIMAL(14,9),
MIN_LATITUDE DECIMAL(14,9),
MIN_LONGITUDE DECIMAL(14,9),
NUMERIC_ID BIGINT,
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
XY_COORD_SYSTEM_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SET_AREA'
CREATE table seis_set_area (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SET_AUTHORIZE'
CREATE table seis_set_authorize (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
AUTHORIZE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AUTHORIZED_BY  VARCHAR(20),
AUTHORIZE_TYPE  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LIMIT_DESC  VARCHAR(2000),
LIMIT_TYPE  VARCHAR(20),
PARTNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRICE_PER_LENGTH DECIMAL(12,2),
REASON_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SET_COMPONENT'
CREATE table seis_set_component (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_ACTIVITY_OBS_NO INT,
SEIS_ACT_SEIS_SET_ID VARCHAR(20),
SEIS_ACT_SEIS_SET_TYPE VARCHAR(30),
SEIS_SET_COMPONENT_TYPE  VARCHAR(20),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_OBS_NO INT,
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20)
,
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SET_GEOMETRY'
CREATE table seis_set_geometry (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
GEOMETRY_FORMAT  VARCHAR(20) NOT NULL,
GEOMETRY_ID  VARCHAR(20) NOT NULL,
GEOMETRY_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
BIN_GRID_ID  VARCHAR(20),
BIN_SOURCE  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOMETRY_DATE TIMESTAMP(0),
GEOMETRY_SOURCE  VARCHAR(20),
GEOMETRY_TYPE  VARCHAR(20),
OBJECT_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SEIS_GEOMETRY_SOURCE  VARCHAR(20),
SEIS_NUMERIC_ID BIGINT,
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SET_JURISDICTION'
CREATE table seis_set_jurisdiction (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
JURISDICTION  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SET_PLAN'
CREATE table seis_set_plan (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLANNED_END_DATE TIMESTAMP(0),
PLANNED_LENGTH DECIMAL(10,5),
PLANNED_LENGTH_OUOM  VARCHAR(20),
PLANNED_START_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SET_STATUS'
CREATE table seis_set_status (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEIS_STATUS  VARCHAR(20),
SOURCE  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_SP_SURVEY'
CREATE table seis_sp_survey (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
SEIS_POINT_ID  VARCHAR(16) NOT NULL,
SEIS_SP_SURVEY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AZIMUTH DECIMAL(5,2),
AZIMUTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EW_DISTANCE DECIMAL(7,2),
EW_DISTANCE_OUOM  VARCHAR(20),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LOCATION_TYPE  VARCHAR(20),
MONUMENT  VARCHAR(20),
MONUMENT_SF_TYPE  VARCHAR(30),
NORTH_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
NS_DISTANCE DECIMAL(7,2),
NS_DISTANCE_OUOM  VARCHAR(20),
NS_START_LINE  VARCHAR(20),
ORIENTATION  VARCHAR(20),
POINT_OFFSET DECIMAL(8,3),
POINT_OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_LOC  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SURFACE_LOC  VARCHAR(20),
WELL_NODE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_STREAMER'
CREATE table seis_streamer (
STREAMER_ID  VARCHAR(20) NOT NULL,
ACQTN_DESIGN_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
CABLE_MAKE  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
STREAMER_LENGTH DECIMAL(9,3),
STREAMER_LENGTH_OUOM  VARCHAR(20),
STREAMER_POSITION  VARCHAR(20),
VESSEL_CONFIG_OBS_NO INT,
VESSEL_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_STREAMER_BUILD'
CREATE table seis_streamer_build (
STREAMER_ID  VARCHAR(20) NOT NULL,
STREAMER_COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPONENT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
POSITION_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STREAMER_POSITION DECIMAL(10,5),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_STREAMER_COMP'
CREATE table seis_streamer_comp (
STREAMER_ID  VARCHAR(20) NOT NULL,
COMPONENT_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPONENT_COUNT SMALLINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_TRANSACTION'
CREATE table seis_transaction (
SEIS_TRANSACTION_ID  VARCHAR(20) NOT NULL,
TRANSACTION_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LENGTH DECIMAL(12,7),
LENGTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRICE_PER_LENGTH DECIMAL(12,2),
REFERENCE_NUM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOTAL_PRICE DECIMAL(12,2),
TRANSACTION_DATE TIMESTAMP(0),
TRANSACTION_STATUS  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_TRANS_COMPONENT'
CREATE table seis_trans_component (
SEIS_TRANSACTION_ID  VARCHAR(20) NOT NULL,
TRANSACTION_TYPE  VARCHAR(20) NOT NULL,
TRANSACTION_COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
AUTHORIZE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CIRC_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
DISCOUNT_RATE DECIMAL(15,12),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSPECTION_ID  VARCHAR(20),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LENGTH DECIMAL(12,7),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRICE_PER_LENGTH DECIMAL(12,2),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
TOTAL_PRICE DECIMAL(12,2),
TRANSACTION_STATUS  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_VELOCITY'
CREATE table seis_velocity (
VELOCITY_VOLUME_ID  VARCHAR(20) NOT NULL,
VOLUME_POINT  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BIN_GRID_ID  VARCHAR(20),
BIN_POINT_ID  VARCHAR(16),
BIN_SOURCE  VARCHAR(20),
COMPUTE_METHOD  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LONGITUDE DECIMAL(14,9),
PPDM_GUID  VARCHAR(38),
RECEIVER_MD DECIMAL(10,5),
RECEIVER_MD_OUOM  VARCHAR(20),
RECEIVER_VERT_DEPTH DECIMAL(10,5),
RECEIVER_VERT_DEPTH_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_POINT_ID  VARCHAR(16),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SEIS_TIME DECIMAL(10,5),
SEIS_TIME_OUOM  VARCHAR(20),
SEIS_WELL_SET_ID  VARCHAR(20),
SEIS_WELL_SET_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SOURCE_MD DECIMAL(10,5),
SOURCE_MD_OUOM  VARCHAR(20),
SOURCE_VERT_DEPTH DECIMAL(10,5),
SOURCE_VERT_DEPTH_OUOM  VARCHAR(20),
VELOCITY DECIMAL(10,5),
VELOCITY_AZIMUTH DECIMAL(10,6),
VELOCITY_DEPTH DECIMAL(10,5),
VELOCITY_INCLINATION DECIMAL(5,2),
VELOCITY_INCLINATION_OUOM  VARCHAR(20),
VELOCITY_OUOM  VARCHAR(20),
VELOCITY_TYPE  VARCHAR(20),
VELOCITY_X DECIMAL(10,5),
VELOCITY_Y DECIMAL(10,5),
VELOCITY_Z DECIMAL(10,5),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_VELOCITY_INTERVAL'
CREATE table seis_velocity_interval (
INTERVAL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
COMPUTE_METHOD  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LAST_UPDATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SEIS_TIME_DATUM DECIMAL(7,2),
SEIS_TIME_DATUM_OUOM  VARCHAR(20),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
UWI  VARCHAR(20),
VELOCITY_QUALITY  VARCHAR(20),
VELOCITY_TYPE  VARCHAR(20),
VELOCITY_VALUE DECIMAL(7,2),
VELOCITY_VALUE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_VELOCITY_VOLUME'
CREATE table seis_velocity_volume (
VELOCITY_VOLUME_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BIN_GRID_ID  VARCHAR(20),
BIN_GRID_SEIS_SET_ID  VARCHAR(20),
BIN_GRID_SEIS_SET_TYPE  VARCHAR(30),
BIN_GRID_SOURCE  VARCHAR(20),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PICKED_BY  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEIS_WELL_SET_ID  VARCHAR(20),
SEIS_WELL_SET_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
VELOCITY_DIMENSION  VARCHAR(20),
VELOCITY_ORIGIN  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_VESSEL'
CREATE table seis_vessel (
VESSEL_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
VESSEL_CONFIG_OBS_NO INT,
ACQTN_DESIGN_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FATH_AZIMUTH DECIMAL(6,3),
FATH_OFFSET DECIMAL(9,3),
MASTER_VESSEL_IND  VARCHAR(1),
OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_POINT  VARCHAR(20),
REMARK  VARCHAR(2000),
SHOT_OFFSET DECIMAL(9,3),
SLAVE_VESSEL_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
STREAMER_FAR_OFFSET DECIMAL(9,3),
STREAMER_NEAR_OFFSET DECIMAL(9,3),
VESSEL_AZIMUTH DECIMAL(15,12),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SEIS_WELL'
CREATE table seis_well (
SEIS_SET_ID  VARCHAR(20) NOT NULL,
SEIS_SET_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CHECKSHOT_SURVEY_TYPE  VARCHAR(20),
CHECKSHOT_VELOCITY DECIMAL(7,2),
CHECKSHOT_VELOCITY_OUOM  VARCHAR(20),
DIR_SURVEY_ID  VARCHAR(20),
DIR_SURVEY_SOURCE  VARCHAR(20),
DIR_SURVEY_UWI  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RECEIVER_UWI  VARCHAR(20),
REMARK  VARCHAR(2000),
SEISMIC_PATH  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_UWI  VARCHAR(20),
SURVEY_ID  VARCHAR(20),
SURVEY_RUN_NUM  VARCHAR(20),
VSP_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_AIRCRAFT'
CREATE table sf_aircraft (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AIRCRAFT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LENGTH DECIMAL(10,3),
LENGTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_AIRSTRIP'
CREATE table sf_airstrip (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AIRSTRIP_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LENGTH DECIMAL(10,3),
LENGTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SURFACE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_ALIAS'
CREATE table sf_alias (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_BA_CREW'
CREATE table sf_ba_crew (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
CREW_COMPANY_BA_ID  VARCHAR(20) NOT NULL,
CREW_ID  VARCHAR(20) NOT NULL,
SF_BA_CREW_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_BA_SERVICE'
CREATE table sf_ba_service (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
BUSINESS_ASSOCIATE  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_SERVICE_TYPE  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SERVICE_QUALITY  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_BRIDGE'
CREATE table sf_bridge (
BRIDGE_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BRIDGE_CAPACITY DECIMAL(10,5),
BRIDGE_CAPACITY_OUOM  VARCHAR(20),
BRIDGE_HEIGHT DECIMAL(10,3),
BRIDGE_HEIGHT_OUOM  VARCHAR(20),
BRIDGE_LENGTH DECIMAL(10,3),
BRIDGE_LENGTH_OUOM  VARCHAR(20),
BRIDGE_TYPE  VARCHAR(20),
BRIDGE_WIDTH DECIMAL(10,3),
BRIDGE_WIDTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SURFACE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_COMPONENT'
CREATE table sf_component (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
USE_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_LICENSE_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
HSE_INCIDENT_ID  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_JURISDICTION  VARCHAR(20),
LAND_SALE_NUMBER  VARCHAR(30),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_LICENSE_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_COMPONENT_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
UWI  VARCHAR(20),
WELL_LICENSE_ID  VARCHAR(20),
WELL_LICENSE_SOURCE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_DESCRIPTION'
CREATE table sf_description (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
DESCRIPTION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
COST DECIMAL(12,2),
COST_OUOM  VARCHAR(20),
COST_UOM  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
DESC_TYPE  VARCHAR(20),
DESC_VALUE DECIMAL(10,5),
DESC_VALUE_CODE  VARCHAR(20),
DESC_VALUE_OUOM  VARCHAR(20),
DESC_VALUE_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_DISPOSAL'
CREATE table sf_disposal (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM  VARCHAR(20),
AREA_SIZE_UOM  VARCHAR(20),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM  VARCHAR(20),
CAPACITY_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_DOCK'
CREATE table sf_dock (
DOCK_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DOCK_LENGTH DECIMAL(10,3),
DOCK_LENGTH_OUOM  VARCHAR(20),
DOCK_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SURFACE_TYPE  VARCHAR(20),
WATER_DEPTH DECIMAL(10,5),
WATER_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_ELECTRIC'
CREATE table sf_electric (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
ELECTRIC_FACILITY_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_EQUIPMENT'
CREATE table sf_equipment (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CATALOGUE_EQUIP_ID  VARCHAR(20),
COMPONENT_COUNT BIGINT,
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EQUIPMENT_NAME  VARCHAR(255),
EXPIRY_DATE TIMESTAMP(0),
INSTALL_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PURCHASE_DATE TIMESTAMP(0),
REFERENCE_NUM  VARCHAR(255),
REMARK  VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_GEOMETRY'
CREATE table sf_geometry (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
GEOMETRY_FORMAT  VARCHAR(20) NOT NULL,
GEOMETRY_ID  VARCHAR(20) NOT NULL,
GEOMETRY_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOMETRY_DATE TIMESTAMP(0),
GEOMETRY_SOURCE  VARCHAR(20),
GEOMETRY_TYPE  VARCHAR(20),
OBJECT_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_HABITAT'
CREATE table sf_habitat (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM  VARCHAR(20),
BED_COUNT BIGINT,
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM  VARCHAR(20),
CAPACITY_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_LANDING'
CREATE table sf_landing (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVATION_FREQ_DESC  VARCHAR(240),
ACTIVATION_TONE_DESC  VARCHAR(240),
ACTIVE_IND  VARCHAR(1),
AIRPSPACE_DESC  VARCHAR(240),
ALTITUDE DECIMAL(10,5),
ALTITUDE_OUOM  VARCHAR(20),
APPROACH_DIRECTION  VARCHAR(240),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM  VARCHAR(20),
CITY_ID  VARCHAR(20),
COMMUNICATION_FREQ DECIMAL(15,5),
COMMUNICATION_FREQ_DESC  VARCHAR(240),
DEPART_DIRECTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FUEL_AVAIL_DESC  VARCHAR(240),
LANDING_FACILITY_CODE  VARCHAR(20),
LANDING_TYPE  VARCHAR(20),
LIGHTING_AVAIL_IND  VARCHAR(1),
LIGHTING_CYCLE_DESC  VARCHAR(240),
LIGHTING_DESC  VARCHAR(240),
MAX_ALLOW_MASS DECIMAL(10,5),
MAX_ALLOW_MASS_DESC  VARCHAR(240),
MAX_ALLOW_MASS_OUOM  VARCHAR(20),
PERM_OBSTACLE_DESC  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
RADIO_CALL_NAME  VARCHAR(240),
RADIO_CHANNEL  VARCHAR(240),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPECIAL_PROCEDURE_DESC  VARCHAR(240),
SURFACE_DESC  VARCHAR(240),
SURFACE_TYPE  VARCHAR(20),
WEATHER_INFO_DESC  VARCHAR(240),
WINDCONE_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_MAINTAIN'
CREATE table sf_maintain (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
MAINTAIN_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTUAL_END_DATE TIMESTAMP(0),
ACTUAL_START_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAINTAIN_BA_ID  VARCHAR(20),
MAINTAIN_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SCHEDULE_END_DATE TIMESTAMP(0),
SCHEDULE_START_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_MONUMENT'
CREATE table sf_monument (
MONUMENT_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORD_ACQUISITION_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HORIZ_COORD_SYSTEM  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
MONUMENT_ELEV DECIMAL(10,5),
MONUMENT_ELEV_OUOM  VARCHAR(20),
MONUMENT_LATITUDE DECIMAL(14,9),
MONUMENT_LONGITUDE DECIMAL(14,9),
MONUMENT_NAME  VARCHAR(60),
MONUMENT_NUMERIC_ID BIGINT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
VERT_COORD_SYSTEM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_OTHER'
CREATE table sf_other (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM  VARCHAR(20),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM  VARCHAR(20),
CAPACITY_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEIGHT DECIMAL(10,5),
HEIGHT_OUOM  VARCHAR(20),
LENGTH DECIMAL(10,3),
LENGTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
WIDTH DECIMAL(10,5),
WIDTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_PAD'
CREATE table sf_pad (
PAD_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_PLATFORM'
CREATE table sf_platform (
PLATFORM_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DRILL_SLOT_COUNT SMALLINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTALLED_DATE TIMESTAMP(0),
PLATFORM_NAME  VARCHAR(255),
PLATFORM_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMOVAL_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
WATER_DEPTH DECIMAL(10,5),
WATER_DEPTH_DATUM  VARCHAR(20),
WATER_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_PORT'
CREATE table sf_port (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_SIZE DECIMAL(10,5),
AREA_SIZE_OUOM  VARCHAR(20),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM  VARCHAR(20),
CAPACITY_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MIN_WATER_DEPTH DECIMAL(10,5),
MIN_WATER_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_RAILWAY'
CREATE table sf_railway (
RAILWAY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
RAIL_GAUGE DECIMAL(10,3),
RAIL_GAUGE_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_RESTRICTION'
CREATE table sf_restriction (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_REST_REMARK'
CREATE table sf_rest_remark (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
RESTRICTION_ID  VARCHAR(20) NOT NULL,
RESTRICTION_VERSION INT,
RESTRICTION_REMARK_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESTRICTION_REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_RIG'
CREATE table sf_rig (
RIG_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BOILER_MANUFACTURER  VARCHAR(240),
BOILER_POWER DECIMAL(10,5),
BOILER_POWER_OUOM  VARCHAR(20),
CHOKE_MANIFOLD_PRESS DECIMAL(8,2),
CHOKE_MANIFOLD_PRESS_OUOM  VARCHAR(20),
CHOKE_MANIFOLD_SIZE DECIMAL(10,5),
CHOKE_MANIFOLD_SIZE_OUOM  VARCHAR(20),
CLEAR_WORK_HEIGHT DECIMAL(10,5),
CLEAR_WORK_HEIGHT_OUOM  VARCHAR(20),
COMMISSION_DATE TIMESTAMP(0),
DECOMMISSION_DATE TIMESTAMP(0),
DESANDER_TYPE  VARCHAR(20),
DESILTER_TYPE  VARCHAR(20),
DRAWWORKS_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HOOKBLOCK_RATING DECIMAL(15,5),
HOOKBLOCK_RATING_OUOM  VARCHAR(20),
HOOKBLOCK_TYPE  VARCHAR(20),
HOOK_LOAD_CAPACITY DECIMAL(15,5),
HOOK_LOAD_CAPACITY_OUOM  VARCHAR(20),
KB_GROUND_DIST DECIMAL(10,3),
KB_GROUND_DIST_OUOM  VARCHAR(20),
MAST_HEIGHT DECIMAL(10,5),
MAST_HEIGHT_OUOM  VARCHAR(20),
MAST_TYPE  VARCHAR(20),
MAX_DEPTH DECIMAL(10,5),
MAX_DEPTH_OUOM  VARCHAR(20),
MUD_TANK_COUNT BIGINT,
MUD_TANK_SIZE DECIMAL(10,5),
MUD_TANK_SIZE_OUOM  VARCHAR(20),
OPERATOR_BA_ID  VARCHAR(20),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RIG_CATEGORY  VARCHAR(20),
RIG_CLASS  VARCHAR(20),
RIG_CODE  VARCHAR(20),
RIG_NAME  VARCHAR(240),
RIG_TYPE  VARCHAR(20),
ROTARY_TABLE_CAP DECIMAL(15,5),
ROTARY_TABLE_CAP_OUOM  VARCHAR(20),
ROTARY_TABLE_SIZE DECIMAL(15,5),
ROTARY_TABLE_SIZE_OUOM  VARCHAR(20),
SOURCE  VARCHAR(20),
SUBSTRUCTURE_TYPE  VARCHAR(20),
SUBSTRUCT_CASING_CAP DECIMAL(15,5),
SUBSTRUCT_CASING_CAP_OUOM  VARCHAR(20),
SUBSTRUCT_SETBACK_CAP DECIMAL(15,5),
SUBSTRUCT_SETBACK_CAP_OUOM  VARCHAR(20),
SWIVEL_RATING DECIMAL(15,5),
SWIVEL_RATING_OUOM  VARCHAR(20),
SWIVEL_TYPE  VARCHAR(20),
TOP_DRIVE_MODEL  VARCHAR(255),
TOP_DRIVE_RATING DECIMAL(15,5),
TOP_DRIVE_RATING_OUOM  VARCHAR(20),
WATER_DEPTH DECIMAL(10,5),
WATER_DEPTH_DATUM  VARCHAR(20),
WATER_DEPTH_OUOM  VARCHAR(20),
WORKING_PRESSURE DECIMAL(10,5),
WORKING_PRESSURE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_RIG_BOP'
CREATE table sf_rig_bop (
RIG_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
BOP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANNULAR_COUNT BIGINT,
BOP_COUNT BIGINT,
BOP_DIAMETER DECIMAL(10,5),
BOP_DIAMETER_OUOM  VARCHAR(20),
BOP_NACE_CERTIFIED_IND  VARCHAR(1),
BOP_POSITION_DESC  VARCHAR(240),
BOP_PRESSURE_RATING DECIMAL(10,5),
BOP_PRESSURE_RATING_OUOM  VARCHAR(20),
BOP_TYPE  VARCHAR(20),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
DOUBLE_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INPUT_TYPE  VARCHAR(20),
INSTALL_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUM  VARCHAR(12),
REMARK  VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SINGLE_COUNT BIGINT,
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_RIG_GENERATOR'
CREATE table sf_rig_generator (
RIG_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
GENERATOR_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CATALOGUE_EQUIP_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GENERATOR_COUNT BIGINT,
GENERATOR_TYPE  VARCHAR(20),
INPUT_TYPE  VARCHAR(20),
INSTALL_DATE TIMESTAMP(0),
POWER DECIMAL(10,5),
POWER_OUOM  VARCHAR(20),
POWER_RATING DECIMAL(10,5),
POWER_RATING_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUM  VARCHAR(12),
REMARK  VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_RIG_OVERHEAD_EQUIP'
CREATE table sf_rig_overhead_equip (
RIG_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
EQUIP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM  VARCHAR(20),
CAPACITY_TYPE  VARCHAR(20),
CAPACITY_UOM  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INPUT_TYPE  VARCHAR(20),
INSIDE_DIAMETER DECIMAL(10,5),
INSIDE_DIAMETER_OUOM  VARCHAR(20),
INSTALL_DATE TIMESTAMP(0),
OVERHEAD_COUNT BIGINT,
OVERHEAD_EQUIP_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_RIG_PUMP'
CREATE table sf_rig_pump (
RIG_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
PUMP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CATALOGUE_EQUIP_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INPUT_TYPE  VARCHAR(20),
INSTALL_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PUMP_COUNT BIGINT,
PUMP_FUNCTION  VARCHAR(20),
PUMP_HP DECIMAL(10,5),
PUMP_HP_OUOM  VARCHAR(20),
PUMP_RATING DECIMAL(10,5),
PUMP_RATING_OUOM  VARCHAR(20),
PUMP_TYPE  VARCHAR(20),
REFERENCE_NUM  VARCHAR(12),
REMARK  VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_RIG_SHAKER'
CREATE table sf_rig_shaker (
RIG_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
SHAKER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INPUT_TYPE  VARCHAR(20),
INSTALL_DATE TIMESTAMP(0),
POSITION_DESC  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUM  VARCHAR(12),
REMARK  VARCHAR(2000),
REMOVE_DATE TIMESTAMP(0),
SHAKER_COUNT BIGINT,
SHAKER_SIZE DECIMAL(10,5),
SHAKER_SIZE_DESC  VARCHAR(240),
SHAKER_SIZE_OUOM  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_ROAD'
CREATE table sf_road (
ROAD_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CAPACITY DECIMAL(10,5),
CAPACITY_OUOM  VARCHAR(20),
COMMUNICATION_FREQ DECIMAL(15,5),
COMMUNICATION_FREQ_DESC  VARCHAR(240),
CONTROL_TYPE  VARCHAR(20),
CURRENT_OPERATOR_BA_ID  VARCHAR(20),
DIRECTION  VARCHAR(20),
DRIVING_SIDE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROAD_LENGTH DECIMAL(10,3),
ROAD_LENGTH_OUOM  VARCHAR(20),
ROAD_TYPE  VARCHAR(20),
ROAD_WIDTH DECIMAL(10,3),
ROAD_WIDTH_OUOM  VARCHAR(20),
SOURCE  VARCHAR(20),
SURFACE_TYPE  VARCHAR(20),
TRAFFIC_FLOW_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_STATUS'
CREATE table sf_status (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATUS  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_SUPPORT_FACILITY'
CREATE table sf_support_facility (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
USE_DESC  VARCHAR(240),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_TOWER'
CREATE table sf_tower (
TOWER_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMMUNICATION_FREQ DECIMAL(15,5),
COMMUNICATION_FREQ_DESC  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOWER_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_VEHICLE'
CREATE table sf_vehicle (
VEHICLE_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CURRENT_OWNER  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ENGINE_SIZE DECIMAL(10,5),
ENGINE_SIZE_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_EXPIRY_DATE TIMESTAMP(0),
LICENSE_NUM  VARCHAR(30),
LICENSE_REGISTER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VEHICLE_NAME  VARCHAR(255),
VEHICLE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_VESSEL'
CREATE table sf_vessel (
VESSEL_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BACKUP_ANTENNA_LOCATION  VARCHAR(30),
BACKUP_ANTENNA_TYPE  VARCHAR(20),
CURRENT_OPERATOR  VARCHAR(20),
DRILL_HOLE_POSITION  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
POSITIONING_METHOD  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRIMARY_ANTENNA_LOCATION  VARCHAR(30),
PRIMARY_ANTENNA_TYPE  VARCHAR(20),
REGISTRY_COUNTRY  VARCHAR(20),
REMARK  VARCHAR(2000),
SECONDARY_ANTENNAL_LOCATION  VARCHAR(240),
SECONDARY_ANTENNA_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
VESSEL_BEAM DECIMAL(6,2),
VESSEL_DISPLACEMENT DECIMAL(6,2),
VESSEL_DRAFT DECIMAL(6,2),
VESSEL_LENGTH DECIMAL(6,2),
VESSEL_NAME  VARCHAR(100),
VESSEL_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_WASTE'
CREATE table sf_waste (
WASTE_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CAPACITY DOUBLE PRECISION,
CAPACITY_OUOM  VARCHAR(20),
CURRENT_OWNER  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_EXPIRY_DATE TIMESTAMP(0),
LICENSE_NUM  VARCHAR(30),
LICENSE_REGISTER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
WASTE_FACILITY_NAME  VARCHAR(255),
WASTE_FACILITY_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_WASTE_DISPOSAL'
CREATE table sf_waste_disposal (
WASTE_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
WASTE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ADJUST_REASON  VARCHAR(20),
AMOUNT_ADJUSTMENT DOUBLE PRECISION,
AMOUNT_ADJUSTMENT_OUOM  VARCHAR(20),
AMOUNT_ADJUSTMENT_UOM  VARCHAR(20),
AMOUNT_RECEIVED DOUBLE PRECISION,
AMOUNT_RECEIVED_OUOM  VARCHAR(20),
AMOUNT_RECEIVED_UOM  VARCHAR(20),
AMOUNT_SHIPPED DOUBLE PRECISION,
AMOUNT_SHIPPED_OUOM  VARCHAR(20),
AMOUNT_SHIPPED_UOM  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATOR_BA_ID  VARCHAR(20),
ORIGIN_FACILITY_ID  VARCHAR(20),
ORIGIN_FACILITY_TYPE  VARCHAR(20),
ORIGIN_HSE_INCIDENT_ID  VARCHAR(20),
ORIGIN_UWI  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
RECEIVER_BA_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORTING_UOM  VARCHAR(20),
SERVICE_QUALITY  VARCHAR(20),
SERVICE_TYPE  VARCHAR(20),
SHIPPED_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
TRANSPORT_BA_ID  VARCHAR(20),
WASTE_HANDLING_METHOD  VARCHAR(20),
WASTE_HAZARD  VARCHAR(20),
WASTE_MATERIAL  VARCHAR(20),
WASTE_ORIGIN  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SF_XREF'
CREATE table sf_xref (
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
SUPPORT_FACILITY_ID2  VARCHAR(20) NOT NULL,
SF_TYPE2  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FROM_DISTANCE DECIMAL(10,5),
FROM_DISTANCE_OUOM  VARCHAR(20),
PORTION_PERCENT DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TO_DISTANCE DECIMAL(10,5),
TO_DISTANCE_OUOM  VARCHAR(20),
XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SOURCE_DOCUMENT'
CREATE table source_document (
SOURCE_DOCUMENT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
DOCUMENT_TITLE  VARCHAR(240),
DOCUMENT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIGURE_REFERENCE  VARCHAR(240),
ISSUE  VARCHAR(10),
LANGUAGE  VARCHAR(20),
PAGE_REFERENCE  VARCHAR(20),
PLATE_REFERENCE  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
PUBLICATION  VARCHAR(20),
PUBLICATION_DATE TIMESTAMP(0),
PUBLICATION_YEAR SMALLINT,
PUBLISHER  VARCHAR(240),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SOURCE_DOC_AUTHOR'
CREATE table source_doc_author (
SOURCE_DOCUMENT  VARCHAR(20) NOT NULL,
AUTHOR_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AUTHOR_BA_ID  VARCHAR(20),
AUTHOR_FIRST_NAME  VARCHAR(30),
AUTHOR_INITIAL  VARCHAR(3),
AUTHOR_LAST_NAME  VARCHAR(40),
AUTHOR_SEQ_NO INT,
AUTHOR_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SOURCE_DOC_BIBLIO'
CREATE table source_doc_biblio (
SOURCE_DOCUMENT  VARCHAR(20) NOT NULL,
BIBLIO_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DOCUMENT_NAME  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REFERENCED_DOCUMENT  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SPACING_UNIT'
CREATE table spacing_unit (
SPACING_UNIT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPACING_UNIT_DESC  VARCHAR(2000),
SPACING_UNIT_NAME  VARCHAR(30),
SPACING_UNIT_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SPACING_UNIT_INST'
CREATE table spacing_unit_inst (
SPACING_UNIT_ID  VARCHAR(20) NOT NULL,
INSTRUMENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SPATIAL_DESCRIPTION'
CREATE table spatial_description (
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CARTER_IND  VARCHAR(1),
CONGRESS_IND  VARCHAR(1),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
DLS_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FPS_IND  VARCHAR(1),
GEODETIC_IND  VARCHAR(1),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM  VARCHAR(20),
INACTIVATION_DATE TIMESTAMP(0),
LIBYA_IND  VARCHAR(1),
LINE_IND  VARCHAR(1),
LINE_VERSION_IND  VARCHAR(1),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
MAX_LATITUDE DECIMAL(14,9),
MAX_LONGITUDE DECIMAL(14,9),
MINERAL_ZONE_IND  VARCHAR(1),
MIN_LATITUDE DECIMAL(14,9),
MIN_LONGITUDE DECIMAL(14,9),
NE_LOC_IND  VARCHAR(1),
NORTH_SEA_IND  VARCHAR(1),
NTS_IND  VARCHAR(1),
OFFSHORE_IND  VARCHAR(1),
OHIO_IND  VARCHAR(1),
PBL_IND  VARCHAR(1),
POINT_IND  VARCHAR(1),
POINT_VERSION_IND  VARCHAR(1),
POLYGON_IND  VARCHAR(1),
POLYGON_VERSION_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESC_TEXT_IND  VARCHAR(1),
SPATIAL_DESC_TYPE  VARCHAR(20),
TEXAS_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_BOUNDARY'
CREATE table sp_boundary (
POLYGON_ID  VARCHAR(20) NOT NULL,
POINT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
DEPTH DECIMAL(10,5),
DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEVATION DECIMAL(10,5),
ELEVATION_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LOCATION_QUALITY  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
POINT_LABEL  VARCHAR(30),
POINT_NO DECIMAL(12,2),
POINT_POSITION  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_BOUNDARY_VERSION'
CREATE table sp_boundary_version (
POLYGON_ID  VARCHAR(20) NOT NULL,
POINT_SEQ_NO INT,
SOURCE  VARCHAR(20) NOT NULL,
VERSION_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
EASTING DECIMAL(15,7),
EASTING_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM  VARCHAR(20),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID  VARCHAR(20),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_QUALIFIER  VARCHAR(20),
LOCATION_QUALITY  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID  VARCHAR(20),
MD DECIMAL(10,5),
MD_OUOM  VARCHAR(20),
MONUMENT_ID  VARCHAR(20),
MONUMENT_SF_TYPE  VARCHAR(30),
NODE_POSITION  VARCHAR(20),
NORTHING DECIMAL(15,7),
NORTHING_OUOM  VARCHAR(20),
NORTH_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
ORIGINAL_REF_NUM  VARCHAR(30),
POLAR_AZIMUTH DECIMAL(10,6),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
VERSION_TYPE  VARCHAR(20),
X_COORDINATE DECIMAL(11,2),
X_OFFSET DECIMAL(15,2),
X_OFFSET_OUOM  VARCHAR(20),
Y_COORDINATE DECIMAL(11,2),
Y_OFFSET DECIMAL(15,2),
Y_OFFSET_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_COMPONENT'
CREATE table sp_component (
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO INT,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ADDRESS_OBS_NO INT,
BA_ADDRESS_SOURCE  VARCHAR(20),
BA_LICENSEE_BA_ID  VARCHAR(20),
BA_LICENSE_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
HSE_INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_REQUEST_ID  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_STATUS  VARCHAR(20),
LAND_RIGHT_STATUS_SEQ_NO INT,
LAND_RIGHT_STATUS_TYPE  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LAND_SALE_OFFERING_ID  VARCHAR(20),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
LITH_SAMPLE_ID  VARCHAR(20),
NODE_ID  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESENT_PRODUCT_TYPE  VARCHAR(20),
RESENT_RESERVE_CLASS_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_BIN_GRID_ID  VARCHAR(20)
,
SEIS_BIN_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SIZE_SEQ_NO INT,
SIZE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SPACING_UNIT_ID  VARCHAR(20),
SP_COMPONENT_TYPE  VARCHAR(20),
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
SUPPORT_FACILITY_TYPE  VARCHAR(30),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_DESC_TEXT'
CREATE table sp_desc_text (
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO INT,
TEXT_ID  VARCHAR(20) NOT NULL,
DESCRIPTION_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_DESC_XREF'
CREATE table sp_desc_xref (
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO INT,
SPATIAL_DESCRIPTION_ID_2  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO_2 INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OVERLAP_SIZE DECIMAL(20,10),
OVERLAP_SIZE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_GEOMETRY'
CREATE table sp_geometry (
SPATIAL_OBS_NO INT,
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
GEOMETRY_FORMAT  VARCHAR(20) NOT NULL,
GEOMETRY_ID  VARCHAR(20) NOT NULL,
GEOMETRY_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOMETRY_DATE TIMESTAMP(0),
GEOMETRY_SOURCE  VARCHAR(20),
GEOMETRY_TYPE  VARCHAR(20),
OBJECT_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_LINE'
CREATE table sp_line (
LINE_ID  VARCHAR(20) NOT NULL,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
DATUM_ELEV DECIMAL(10,5),
DATUM_ELEV_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LINE_SET_ID  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
MAX_PLOT_SCALE  VARCHAR(20),
MIN_PLOT_SCALE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REFERENCE_DATUM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_LINE_POINT'
CREATE table sp_line_point (
LINE_ID  VARCHAR(20) NOT NULL,
POINT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BEND_IND  VARCHAR(1),
DEPTH DECIMAL(10,5),
DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEVATION DECIMAL(10,5),
ELEVATION_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FIRST_POINT_IND  VARCHAR(1),
LAST_POINT_IND  VARCHAR(1),
LATITUDE DECIMAL(14,9),
LOCATION_QUALITY  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
POINT_LABEL  VARCHAR(30),
POINT_NO DECIMAL(12,2),
POINT_POSITION  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_LINE_POINT_VERSION'
CREATE table sp_line_point_version (
LINE_ID  VARCHAR(20) NOT NULL,
POINT_SEQ_NO INT,
SOURCE  VARCHAR(20) NOT NULL,
VERSION_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
EASTING DECIMAL(15,7),
EASTING_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM  VARCHAR(20),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID  VARCHAR(20),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_QUALIFIER  VARCHAR(20),
LOCATION_QUALITY  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID  VARCHAR(20),
MD DECIMAL(10,5),
MD_OUOM  VARCHAR(20),
MONUMENT_ID  VARCHAR(20),
MONUMENT_SF_TYPE  VARCHAR(30),
NODE_POSITION  VARCHAR(20),
NORTHING DECIMAL(15,7),
NORTHING_OUOM  VARCHAR(20),
NORTH_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
ORIGINAL_REF_NUM  VARCHAR(30),
POLAR_AZIMUTH DECIMAL(10,6),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
VERSION_TYPE  VARCHAR(20),
X_COORDINATE DECIMAL(11,2),
X_OFFSET DECIMAL(15,2),
X_OFFSET_OUOM  VARCHAR(20),
Y_COORDINATE DECIMAL(11,2),
Y_OFFSET DECIMAL(15,2),
Y_OFFSET_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_MINERAL_ZONE'
CREATE table sp_mineral_zone (
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO INT,
MINERAL_ZONE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_QUALIFIER  VARCHAR(20),
BASE_ZONE_DEFINITION_ID  VARCHAR(20),
DEEP_RIGHT_REVERSION_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INACTIVATION_DATE TIMESTAMP(0),
METES_AND_BOUNDS  VARCHAR(2000),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOP_QUALIFIER  VARCHAR(20),
TOP_ZONE_DEFINITION_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL'
CREATE table sp_parcel (
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO INT,
PARCEL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(1024),
DLS_ROAD_ALLOWANCE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM  VARCHAR(20),
INACTIVATION_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
PARCEL_CARTER_ID  VARCHAR(20),
PARCEL_CONGRESS_ID  VARCHAR(20),
PARCEL_DLS_ID  VARCHAR(20),
PARCEL_FPS_ID  VARCHAR(20),
PARCEL_LIBYA_ID  VARCHAR(20),
PARCEL_LOT_ID  VARCHAR(20),
PARCEL_LOT_NUM  VARCHAR(10),
PARCEL_LOT_TYPE  VARCHAR(20),
PARCEL_NE_LOC_ID  VARCHAR(20),
PARCEL_NORTH_SEA_ID  VARCHAR(20),
PARCEL_NTS_ID  VARCHAR(20),
PARCEL_OFFSHORE_ID  VARCHAR(20),
PARCEL_OHIO_ID  VARCHAR(20),
PARCEL_PBL_ID  VARCHAR(20),
PARCEL_TEXAS_ID  VARCHAR(20),
PERCENT_OWNERSHIP DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_CARTER'
CREATE table sp_parcel_carter (
PARCEL_CARTER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
CARTER_RANGE DECIMAL(5,1),
CARTER_SECTION DECIMAL(5,1),
CARTER_TOWNSHIP  VARCHAR(3),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
MAP_QUAD_MIN DECIMAL(3,1),
MAP_QUAD_NAME  VARCHAR(60),
NS_DIRECTION  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
SPOT_CODE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_CONGRESS'
CREATE table sp_parcel_congress (
PARCEL_CONGRESS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
CONGRESS_RANGE DECIMAL(5,1),
CONGRESS_SECTION DECIMAL(5,1),
CONGRESS_SECTION_SUFFIX  VARCHAR(1),
CONGRESS_TOWNSHIP DECIMAL(6,1),
CONGRESS_TWP_NAME  VARCHAR(60),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
NS_DIRECTION  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRINCIPAL_MERIDIAN  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SECTION_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
SPOT_CODE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_DLS'
CREATE table sp_parcel_dls (
PARCEL_DLS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
DLS_LEGAL_SUBDIVISION SMALLINT,
DLS_MERIDIAN SMALLINT,
DLS_MERIDIAN_DIRECTION  VARCHAR(1),
DLS_QUARTER_SECTION  VARCHAR(4),
DLS_QUARTER_SECTION_QUARTER  VARCHAR(16),
DLS_RANGE SMALLINT,
DLS_RANGE_MODIFIER  VARCHAR(1),
DLS_SECTION SMALLINT,
DLS_TOWNSHIP SMALLINT,
DLS_TOWNSHIP_MODIFIER  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRINCIPAL_MERIDIAN  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_DLS_ROAD'
CREATE table sp_parcel_dls_road (
PARCEL_DLS_ID  VARCHAR(20) NOT NULL,
DLS_ROAD_ALLOWANCE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROAD_ALLOWANCE_PORTION  VARCHAR(20),
ROAD_ALLOW_DESC  VARCHAR(240),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_FPS'
CREATE table sp_parcel_fps (
PARCEL_FPS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GRID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REFERENCE_LATITUDE DECIMAL(14,9),
REFERENCE_LONGITUDE DECIMAL(14,9),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SECTION SMALLINT,
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
UNIT  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_LIBYA'
CREATE table sp_parcel_libya (
PARCEL_LYBIA_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LIBYA_AREA  VARCHAR(12),
LIBYA_BLOCK  VARCHAR(12),
LIBYA_SECTION  VARCHAR(12),
LIBYA_SUBSECTION  VARCHAR(12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_LOT'
CREATE table sp_parcel_lot (
PARCEL_LOT_ID  VARCHAR(20) NOT NULL,
PARCEL_LOT_TYPE  VARCHAR(20) NOT NULL,
PARCEL_LOT_NUM  VARCHAR(10) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GROSS_SIZE DECIMAL(20,10),
GROSS_SIZE_OUOM  VARCHAR(20),
LOT_DESCRIPTION  VARCHAR(1024),
LOT_NAME  VARCHAR(255),
PARCEL_CONGRESS_ID  VARCHAR(20),
PARCEL_OHIO_ID  VARCHAR(20),
PARCEL_PBL_ID  VARCHAR(20),
PARCEL_TEXAS_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_M_B'
CREATE table sp_parcel_m_b (
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO INT,
M_B_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(1024),
DLS_ROAD_ALLOWANCE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EW_DIRECTION_OUOM  VARCHAR(20),
EW_DISTANCE DECIMAL(15,5),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INACTIVATION_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
NS_DISTANCE DECIMAL(15,5),
NS_DISTANCE_OUOM  VARCHAR(20),
NS_START_LINE  VARCHAR(20),
ORIENTATION  VARCHAR(20),
PARCEL_CARTER_ID  VARCHAR(20),
PARCEL_CONGRESS_ID  VARCHAR(20),
PARCEL_DLS_ID  VARCHAR(20),
PARCEL_FPS_ID  VARCHAR(20),
PARCEL_LIBYA_ID  VARCHAR(20),
PARCEL_LOT_ID  VARCHAR(20),
PARCEL_LOT_NUM  VARCHAR(10),
PARCEL_LOT_TYPE  VARCHAR(20),
PARCEL_NE_LOC_ID  VARCHAR(20),
PARCEL_NORTH_SEA_ID  VARCHAR(20),
PARCEL_NTS_ID  VARCHAR(20),
PARCEL_OFFSHORE_ID  VARCHAR(20),
PARCEL_OHIO_ID  VARCHAR(20),
PARCEL_PBL_ID  VARCHAR(20),
PARCEL_TEXAS_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_LOC  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SURFACE_LOC  VARCHAR(240),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_NE_LOC'
CREATE table sp_parcel_ne_loc (
PARCEL_NE_LOC_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NE_DISTRICT  VARCHAR(16),
NE_LOT_CODE  VARCHAR(20),
NE_MAP_QUAD_MIN DECIMAL(3,1),
NE_MAP_QUAD_NAME  VARCHAR(30),
NE_MAP_QUAD_SECTION  VARCHAR(2),
NE_TOWNSHIP_NAME  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_NORTH_SEA'
CREATE table sp_parcel_north_sea (
PARCEL_NORTH_SEA_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BLOCK_NO SMALLINT,
BLOCK_SUFFIX  VARCHAR(2),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PRINCIPAL_MERIDIAN  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
QUADRANT SMALLINT,
QUADRANT_PREFIX  VARCHAR(2),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
SUBDIVISION  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_NTS'
CREATE table sp_parcel_nts (
PARCEL_NTS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BLOCK  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LETTER_QUADRANGLE  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PRIMARY_QUADRANGLE SMALLINT,
PROVINCE_STATE  VARCHAR(20),
QUARTER_UNIT  VARCHAR(1),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SIXTEENTH SMALLINT,
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
UNIT SMALLINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_OFFSHORE'
CREATE table sp_parcel_offshore (
PARCEL_OFFSHORE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BLOCK_ADDITION  VARCHAR(1),
BLOCK_MODIFIER  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GRID_BLOCK_RANGE SMALLINT,
GRID_BLOCK_TIER SMALLINT,
NS_DIRECTION  VARCHAR(20),
OCS_NUM  VARCHAR(8),
OFFSHORE_AREA_CODE  VARCHAR(20),
OFFSHORE_BLOCK  VARCHAR(6),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
UTM_QUADRANT  VARCHAR(7),
WATER_BOTTOM_ZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_OHIO'
CREATE table sp_parcel_ohio (
PARCEL_OHIO_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
JURISDICTION  VARCHAR(20),
MAP_QUAD_MIN DECIMAL(3,1),
MAP_QUAD_NAME  VARCHAR(30),
OHIO_TOWNSHIP_NAME  VARCHAR(30),
OHIO_TWP_LOT_CODE  VARCHAR(20),
OHIO_TWP_SECTION_CODE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRINCIPAL_MERIDIAN  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
SPOT_CODE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_PBL'
CREATE table sp_parcel_pbl (
PARCEL_PBL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
JURISDICTION  VARCHAR(20),
PBL_BLOCK  VARCHAR(20),
PBL_LOT  VARCHAR(20),
PBL_PLAN  VARCHAR(20),
PBL_SUBDIVISION  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_REMARK'
CREATE table sp_parcel_remark (
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO INT,
PARCEL_ID  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_PARCEL_TEXAS'
CREATE table sp_parcel_texas (
PARCEL_TEXAS_ID  VARCHAR(20) NOT NULL,
ABSTRACT_NUM  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BLOCK_FRACTION  VARCHAR(3),
COORD_SYSTEM_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LABOR  VARCHAR(4),
LEAGUE  VARCHAR(4),
NS_DIRECTION  VARCHAR(20),
PORCION_NUM  VARCHAR(30),
PORCION_SURVEY_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REFERENCE_PLAN_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
SECTION_FRACTION  VARCHAR(3),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
SPOT_CODE  VARCHAR(20),
TEXAS_BLOCK  VARCHAR(4),
TEXAS_LOT  VARCHAR(4),
TEXAS_SECTION  VARCHAR(4),
TEXAS_SHARE  VARCHAR(30),
TEXAS_SUBDIVISION  VARCHAR(4),
TEXAS_SURVEY  VARCHAR(60),
TEXAS_TOWNSHIP DECIMAL(4,1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_POINT'
CREATE table sp_point (
POINT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
DATUM_ELEV_OUOM  VARCHAR(20),
DATUM_ELEV DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
ELEVATION DECIMAL(10,5),
ELEVATION_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_QUALITY  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
MEASURED_DEPTH DECIMAL(10,5),
MEASURED_DEPTH_OUOM  VARCHAR(20),
POINT_LABEL  VARCHAR(30),
POINT_NO DECIMAL(12,2),
POINT_POSITION  VARCHAR(20),
POINT_SEQ_NO INT,
PPDM_GUID  VARCHAR(38),
REFERENCE_DATUM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_POINT_VERSION'
CREATE table sp_point_version (
POINT_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
VERSION_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
EASTING DECIMAL(15,7),
EASTING_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM  VARCHAR(20),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID  VARCHAR(20),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_QUALIFIER  VARCHAR(20),
LOCATION_QUALITY  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID  VARCHAR(20),
MD DECIMAL(10,5),
MD_OUOM  VARCHAR(20),
MONUMENT_ID  VARCHAR(20),
MONUMENT_SF_TYPE  VARCHAR(30),
NODE_POSITION  VARCHAR(20),
NORTHING DECIMAL(15,7),
NORTHING_OUOM  VARCHAR(20),
NORTH_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
ORIGINAL_REF_NUM  VARCHAR(30),
POLAR_AZIMUTH DECIMAL(10,6),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
VERSION_TYPE  VARCHAR(20),
X_COORDINATE DECIMAL(11,2),
X_OFFSET DECIMAL(15,2),
X_OFFSET_OUOM  VARCHAR(20),
Y_COORDINATE DECIMAL(11,2),
Y_OFFSET DECIMAL(15,2),
Y_OFFSET_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_POLYGON'
CREATE table sp_polygon (
POLYGON_ID  VARCHAR(20) NOT NULL,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
BOUNDARY_DIRECTION  VARCHAR(20),
CONTAINED_BY_POLYGON_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
DATUM_ELEV DECIMAL(10,5),
DATUM_ELEV_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUSION_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUSION_IND  VARCHAR(1),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
MAX_PLOT_SCALE  VARCHAR(20),
MIN_PLOT_SCALE  VARCHAR(20),
POLYGON_SET_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REFERENCE_DATUM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_ZONE_DEFINITION'
CREATE table sp_zone_definition (
ZONE_DEFINITION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_QUALIFIER  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
DEFINED_STRAT_UNIT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID  VARCHAR(20),
OWNER_REF_NUM  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_QUALIFIER  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
UWI  VARCHAR(20),
ZONE_DERIVATION_METHOD  VARCHAR(20),
ZONE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_ZONE_DEFIN_XREF'
CREATE table sp_zone_defin_xref (
ZONE_DEFINITION_ID_1  VARCHAR(20) NOT NULL,
ZONE_DEFINITION_ID_2  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESPONSIBLE_BA_ID  VARCHAR(20),
SOURCE  VARCHAR(20),
XREF_REASON  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SP_ZONE_SUBSTANCE'
CREATE table sp_zone_substance (
SPATIAL_DESCRIPTION_ID  VARCHAR(20) NOT NULL,
SPATIAL_OBS_NO INT,
MINERAL_ZONE_ID  VARCHAR(20) NOT NULL,
SUBSTANCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_QUALIFIER  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXCLUDED_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
INCLUDED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_QUALIFIER  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_ACQTN_METHOD'
CREATE table strat_acqtn_method (
STRAT_ACQTN_METHOD_ID  VARCHAR(20) NOT NULL,
ACQTN_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_STATION_ID BIGINT,
INTERP_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STRAT_ACQTN_METHOD  VARCHAR(20),
STRAT_COLUMN_ID  VARCHAR(20),
STRAT_COLUMN_SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_ALIAS'
CREATE table strat_alias (
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
ALIAS_STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
ALIAS_STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_COLUMN'
CREATE table strat_column (
STRAT_COLUMN_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_COLUMN_NAME  VARCHAR(60),
STRAT_COLUMN_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_COLUMN_ACQTN'
CREATE table strat_column_acqtn (
STRAT_COLUMN_ID  VARCHAR(20) NOT NULL,
STRAT_COLUMN_SOURCE  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
STRAT_COLUMN_ACQTN_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CORE_ID  VARCHAR(20),
CORE_SOURCE  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_INTERP_ID  VARCHAR(20),
FIELD_STATION_ID BIGINT,
FIELD_STRAT_UNIT_ID  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
LOG_CURVE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
WS_INTERP_ID  VARCHAR(20),
WS_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_COLUMN_UNIT'
CREATE table strat_column_unit (
STRAT_COLUMN_ID  VARCHAR(20) NOT NULL,
STRAT_COLUMN_SOURCE  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
CERTIFIED_IND  VARCHAR(1),
CONFORMITY_RELATIONSHIP  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETATION_VERSION  VARCHAR(20),
LITHOLOGY  VARCHAR(20),
OCCURRENCE_TYPE  VARCHAR(20),
ORDINAL_SEQ_NO INT,
OVERTURNED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
REPEAT_STRAT_OCCUR_NO SMALLINT,
REPEAT_STRAT_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SOUR_GAS_IND  VARCHAR(1),
STRAT_INTERPRET_METHOD  VARCHAR(20),
STRAT_TOPO_RELATION_IND  VARCHAR(1),
SW_APPLICATION_ID  VARCHAR(20),
VERSION_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_COLUMN_XREF'
CREATE table strat_column_xref (
STRAT_COLUMN_ID_1  VARCHAR(20) NOT NULL,
STRAT_COLUMN_SOURCE_1  VARCHAR(20) NOT NULL,
STRAT_COLUMN_ID_2  VARCHAR(20) NOT NULL,
STRAT_COLUMN_SOURCE_2  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STRAT_COLUMN_XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_COL_UNIT_AGE'
CREATE table strat_col_unit_age (
STRAT_COLUMN_ID  VARCHAR(20) NOT NULL,
STRAT_COLUMN_SOURCE  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
AGE_SOURCE  VARCHAR(20) NOT NULL,
AGE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET  VARCHAR(20),
AVERAGE_REL_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET  VARCHAR(20),
LOWER_REL_STRAT_UNIT_ID  VARCHAR(20),
MAX_AGE DECIMAL(15,5),
MAX_AGE_ERROR_MINUS DECIMAL(15,5),
MAX_AGE_ERROR_PLUS DECIMAL(15,5),
MIN_AGE DECIMAL(15,5),
MIN_AGE_ERROR_MINUS DECIMAL(15,5),
MIN_AGE_ERROR_PLUS DECIMAL(15,5),
POST_QUALIFIER  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PRE_QUALIFIER  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_AGE_METHOD  VARCHAR(20),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET  VARCHAR(20),
UPPER_REL_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_EQUIVALENCE'
CREATE table strat_equivalence (
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
EQUIV_STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
EQUIV_STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
EQUIV_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_ID2  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AREA_TYPE2  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIV_DIRECTION  VARCHAR(20),
EQUIV_INTERP_ID  VARCHAR(20),
EQUIV_STRAT_COLUMN_ID  VARCHAR(20),
EQUIV_STRAT_COLUMN_SOURCE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_COLUMN_ID  VARCHAR(20),
STRAT_COLUMN_SOURCE  VARCHAR(20),
STRAT_EQUIVALENCE_TYPE  VARCHAR(20),
STRAT_INTERP_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_FIELD_ACQTN'
CREATE table strat_field_acqtn (
STRAT_FIELD_ACQTN_ID  VARCHAR(20) NOT NULL,
FIELD_STATION_ID BIGINT,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CORE_ID  VARCHAR(20),
CORE_SOURCE  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
LOG_CURVE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
STRAT_COLUMN_ID  VARCHAR(20),
STRAT_COLUMN_SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_FIELD_GEOMETRY'
CREATE table strat_field_geometry (
FIELD_STATION_ID BIGINT,
GEOMETRY_FORMAT  VARCHAR(20) NOT NULL,
GEOMETRY_ID  VARCHAR(20) NOT NULL,
GEOMETRY_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_STATION_NUMERIC_ID BIGINT,
GEOMETRY_DATE TIMESTAMP(0),
GEOMETRY_SOURCE  VARCHAR(20),
GEOMETRY_TYPE  VARCHAR(20),
OBJECT_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_FIELD_NODE'
CREATE table strat_field_node (
FIELD_STATION_ID BIGINT,
NODE_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
NODE_LOC_TYPE  VARCHAR(20),
ORIGINAL_OBS_NO INT,
ORIGINAL_XY_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SELECTED_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_FIELD_SECTION'
CREATE table strat_field_section (
FIELD_STATION_ID BIGINT,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
CERTIFIED_IND  VARCHAR(1),
CONFORMITY_RELATIONSHIP  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETATION_VERSION  VARCHAR(20),
INTERPRETER  VARCHAR(20),
LITHOLOGY  VARCHAR(20),
ORDINAL_SEQ_NO INT,
OVERTURNED_IND  VARCHAR(1),
PICK_DATE TIMESTAMP(0),
PICK_LOCATION  VARCHAR(20),
PICK_QUALIFIER  VARCHAR(20),
PICK_QUALIF_REASON  VARCHAR(20),
PICK_QUALITY  VARCHAR(20),
PICK_VERSION_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_PICK_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
REPEAT_STRAT_OCCUR_NO SMALLINT,
REPEAT_STRAT_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_INTERPRET_METHOD  VARCHAR(20),
STRAT_UNIT_MD DECIMAL(10,5),
STRAT_UNIT_MD_OUOM  VARCHAR(20),
STRAT_UNIT_TVD DECIMAL(10,5),
SW_APPLICATION_ID  VARCHAR(20),
TRUE_THICKNESS_IND  VARCHAR(1),
TVD_METHOD  VARCHAR(20),
VERSION_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_FIELD_STATION'
CREATE table strat_field_station (
FIELD_STATION_ID BIGINT,
ACTIVE_IND  VARCHAR(1),
AIR_PHOTO_NUM  VARCHAR(40),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
COMPLETE_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_STATION_NUMERIC_ID BIGINT,
FIELD_STATION_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_FLD_INTERP_AGE'
CREATE table strat_fld_interp_age (
FIELD_STATION_ID BIGINT,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
AGE_SOURCE  VARCHAR(20) NOT NULL,
AGE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET  VARCHAR(20),
AVERAGE_REL_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET  VARCHAR(20),
LOWER_REL_STRAT_UNIT_ID  VARCHAR(20),
POST_QUALIFIER  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PRE_QUALIFIER  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_AGE_METHOD  VARCHAR(20),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET  VARCHAR(20),
UPPER_REL_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_HIERARCHY'
CREATE table strat_hierarchy (
PARENT_STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
PARENT_STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
CHILD_STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
CHILD_STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
HIERARCHY_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
CHILD_INTERP_ID2  VARCHAR(20),
CHILD_STRAT_COLUMN_ID  VARCHAR(20),
CHILD_STRAT_COLUMN_SOURCE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARENT_INTERP_ID  VARCHAR(20),
PARENT_STRAT_COLUMN_ID  VARCHAR(20),
PARENT_STRAT_COLUMN_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_HIERARCHY_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_HIERARCHY_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_HIERARCHY_DESC'
CREATE table strat_hierarchy_desc (
HIERARCHY_DESC_ID  VARCHAR(20) NOT NULL,
HIERARCHY_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARENT_STRAT_UNIT_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_HIERARCHY_TYPE  VARCHAR(20),
STRAT_TYPE  VARCHAR(20),
STRAT_UNIT_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_INTERP_CORR'
CREATE table strat_interp_corr (
CORRELATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
CORRELATION_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_INTERP_ID_1  VARCHAR(20),
FIELD_INTERP_ID_2  VARCHAR(20),
FIELD_STATION_ID_1 BIGINT,
FIELD_STATION_ID_2 BIGINT,
FIELD_STRAT_NAME_SET_1  VARCHAR(20),
FIELD_STRAT_NAME_SET_2  VARCHAR(20),
FIELD_STRAT_UNIT_ID_1  VARCHAR(20),
FIELD_STRAT_UNIT_ID_2  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_CORRELATION_CRITERIA  VARCHAR(20),
STRAT_CORRELATION_QUALITY  VARCHAR(20),
STRAT_CORRELATION_TYPE  VARCHAR(20),
STRAT_INTERPRET_METHOD  VARCHAR(20),
UWI_1  VARCHAR(20),
UWI_2  VARCHAR(20),
UWI_INTERP_ID_1  VARCHAR(20),
UWI_INTERP_ID_2  VARCHAR(20),
UWI_STRAT_NAME_SET_1  VARCHAR(20),
UWI_STRAT_NAME_SET_2  VARCHAR(20),
UWI_STRAT_UNIT_ID_1  VARCHAR(20),
UWI_STRAT_UNIT_ID_2  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_NAME_SET'
CREATE table strat_name_set (
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
CERTIFIED_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STRAT_NAME_SET_NAME  VARCHAR(60),
STRAT_NAME_SET_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_NAME_SET_XREF'
CREATE table strat_name_set_xref (
STRAT_NAME_SET_ID_1  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID_2  VARCHAR(20) NOT NULL,
XREF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_NODE_VERSION'
CREATE table strat_node_version (
FIELD_STATION_ID BIGINT,
NODE_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
NODE_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
EASTING DECIMAL(15,7),
EASTING_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM  VARCHAR(20),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID  VARCHAR(20),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_QUALIFIER  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID  VARCHAR(20),
MD DECIMAL(10,5),
MD_OUOM  VARCHAR(20),
NODE_LOC_TYPE  VARCHAR(20),
NORTHING DECIMAL(15,7),
NORTHING_OUOM  VARCHAR(20),
NORTH_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
POLAR_AZIMUTH DECIMAL(10,6),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
VERSION_TYPE  VARCHAR(20),
X_OFFSET DECIMAL(15,2),
X_OFFSET_OUOM  VARCHAR(20),
Y_OFFSET DECIMAL(15,2),
Y_OFFSET_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_TOPO_RELATION'
CREATE table strat_topo_relation (
STRAT_NAME_SET_ID_1  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID_1  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID_2  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID_2  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TOPO_RELATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERP_ID_1  VARCHAR(20),
INTERP_ID_2  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRAT_COLUMN_ID_1  VARCHAR(20),
STRAT_COLUMN_ID_2  VARCHAR(20),
STRAT_COLUMN_SOURCE_1  VARCHAR(20),
STRAT_COLUMN_SOURCE_2  VARCHAR(20),
STRAT_TOPO_RELATION  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_UNIT'
CREATE table strat_unit (
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
CONFIDENCE_ID  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FAULT_TYPE  VARCHAR(20),
FORM_CODE  VARCHAR(20),
GROUP_CODE  VARCHAR(20),
LONG_NAME  VARCHAR(255),
ORDINAL_AGE_CODE DECIMAL(15,5),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
STRAT_INTERPRET_METHOD  VARCHAR(20),
STRAT_STATUS  VARCHAR(20),
STRAT_TYPE  VARCHAR(20),
STRAT_UNIT_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_UNIT_AGE'
CREATE table strat_unit_age (
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
AGE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET  VARCHAR(20),
AVERAGE_REL_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET  VARCHAR(20),
LOWER_REL_STRAT_UNIT_ID  VARCHAR(20),
MAX_AGE DECIMAL(15,5),
MAX_AGE_ERROR_MINUS DECIMAL(15,5),
MAX_AGE_ERROR_PLUS DECIMAL(15,5),
MIN_AGE DECIMAL(15,5),
MIN_AGE_ERROR_MINUS DECIMAL(15,5),
MIN_AGE_ERROR_PLUS DECIMAL(15,5),
POST_QUALIFIER  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PRE_QUALIFIER  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_AGE_METHOD  VARCHAR(20),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET  VARCHAR(20),
UPPER_REL_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_UNIT_COMPONENT'
CREATE table strat_unit_component (
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_UNIT_COMPONENT_TYPE  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20)
,
WELL_ACTIVITY_UWI  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_UNIT_DESCRIPTION'
CREATE table strat_unit_description (
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
DESCRIPTION_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
DESCRIPTION_DATE TIMESTAMP(0),
DESCRIPTION_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_PAGES  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_UNIT_DESC  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_WELL_ACQTN'
CREATE table strat_well_acqtn (
STRAT_WELL_ACQTN_ID  VARCHAR(20) NOT NULL,
UWI  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CORE_ID  VARCHAR(20),
CORE_SOURCE  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FIELD_INTERP_ID  VARCHAR(20),
FIELD_STATION_ID BIGINT,
FIELD_STRAT_NAME_SET_ID  VARCHAR(20),
FIELD_STRAT_UNIT_ID  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
LOG_CURVE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROJECT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SC_INTERP_ID  VARCHAR(20),
SC_STRAT_UNIT_ID  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
STRAT_COLUMN_ID  VARCHAR(20),
STRAT_COLUMN_SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_WELL_INTERP_AGE'
CREATE table strat_well_interp_age (
UWI  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
AGE_SOURCE  VARCHAR(20) NOT NULL,
AGE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_AGE DECIMAL(15,5),
AVERAGE_AGE_ERROR_MINUS DECIMAL(15,5),
AVERAGE_AGE_ERROR_PLUS DECIMAL(15,5),
AVERAGE_REL_STRAT_NAME_SET  VARCHAR(20),
AVERAGE_REL_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOWER_MAX_AGE DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_MIN_AGE DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
LOWER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
LOWER_REL_STRAT_NAME_SET  VARCHAR(20),
LOWER_REL_STRAT_UNIT_ID  VARCHAR(20),
POST_QUALIFIER  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PRE_QUALIFIER  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_AGE_METHOD  VARCHAR(20),
UPPER_MAX_AGE DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MAX_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_MIN_AGE DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_MINUS DECIMAL(15,5),
UPPER_MIN_AGE_ERROR_PLUS DECIMAL(15,5),
UPPER_REL_STRAT_NAME_SET  VARCHAR(20),
UPPER_REL_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE STRAT_WELL_SECTION'
CREATE table strat_well_section (
UWI  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
CERTIFIED_IND  VARCHAR(1),
CONFORMITY_RELATIONSHIP  VARCHAR(20),
DOMINANT_LITHOLOGY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETER  VARCHAR(20),
ORDINAL_SEQ_NO INT,
OVERTURNED_IND  VARCHAR(1),
PICK_DATE TIMESTAMP(0),
PICK_DEPTH DECIMAL(10,5),
PICK_DEPTH_OUOM  VARCHAR(20),
PICK_LOCATION  VARCHAR(20),
PICK_QUALIFIER  VARCHAR(20),
PICK_QUALIF_REASON  VARCHAR(20),
PICK_QUALITY  VARCHAR(20),
PICK_TVD DECIMAL(10,5),
PICK_VERSION_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_PICK_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
REPEAT_STRAT_OCCUR_NO SMALLINT,
REPEAT_STRAT_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_INTERPRET_METHOD  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
TVD_METHOD  VARCHAR(20),
VERSION_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SUBSTANCE'
CREATE table substance (
SUBSTANCE_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
CONVERSION_QUANTITY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PREFERRED_UOM  VARCHAR(20),
PROPERTY_SET_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE SUBSTANCE_COMPOSITION'
CREATE table substance_composition (
SUBSTANCE_TYPE  VARCHAR(20) NOT NULL,
SUB_SUBSTANCE_TYPE  VARCHAR(20) NOT NULL,
CONVERSION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DEFINED_BY_BA_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FORMULA  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SUBSTANCE_COMPONENT_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL'
CREATE table well (
UWI  VARCHAR(20) NOT NULL,
ABANDONMENT_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
ASSIGNED_FIELD  VARCHAR(20),
BASE_NODE_ID  VARCHAR(20),
BOTTOM_HOLE_LATITUDE DECIMAL(14,9),
BOTTOM_HOLE_LONGITUDE DECIMAL(14,9),
CASING_FLANGE_ELEV DECIMAL(10,5),
CASING_FLANGE_ELEV_OUOM  VARCHAR(20),
COMPLETION_DATE TIMESTAMP(0),
CONFIDENTIAL_DATE TIMESTAMP(0),
CONFIDENTIAL_DEPTH DECIMAL(10,5),
CONFIDENTIAL_DEPTH_OUOM  VARCHAR(20),
CONFIDENTIAL_TYPE  VARCHAR(20),
CONFID_STRAT_NAME_SET_ID  VARCHAR(20),
CONFID_STRAT_UNIT_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
CURRENT_CLASS  VARCHAR(20),
CURRENT_STATUS  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
DEEPEST_DEPTH DECIMAL(10,5),
DEEPEST_DEPTH_OUOM  VARCHAR(20),
DEPTH_DATUM  VARCHAR(20),
DEPTH_DATUM_ELEV DECIMAL(10,5),
DEPTH_DATUM_ELEV_OUOM  VARCHAR(20),
DERRICK_FLOOR_ELEV DECIMAL(10,5),
DERRICK_FLOOR_ELEV_OUOM  VARCHAR(20),
DIFFERENCE_LAT_MSL DECIMAL(10,5),
DISCOVERY_IND  VARCHAR(1),
DISTRICT  VARCHAR(20),
DRILL_TD DECIMAL(10,5),
DRILL_TD_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV_REF_DATUM  VARCHAR(20),
ENVIRONMENT_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FAULTED_IND  VARCHAR(1),
FINAL_DRILL_DATE TIMESTAMP(0),
FINAL_TD DECIMAL(10,5),
FINAL_TD_OUOM  VARCHAR(20),
GEOGRAPHIC_REGION  VARCHAR(20),
GEOLOGIC_PROVINCE  VARCHAR(20),
GROUND_ELEV DECIMAL(10,5),
GROUND_ELEV_OUOM  VARCHAR(20),
GROUND_ELEV_TYPE  VARCHAR(20),
INITIAL_CLASS  VARCHAR(20),
KB_ELEV DECIMAL(10,5),
KB_ELEV_OUOM  VARCHAR(20),
LEASE_NAME  VARCHAR(60),
LEASE_NUM  VARCHAR(20),
LEGAL_SURVEY_TYPE  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
LOG_TD DECIMAL(10,5),
LOG_TD_OUOM  VARCHAR(20),
MAX_TVD DECIMAL(10,5),
MAX_TVD_OUOM  VARCHAR(20),
NET_PAY INT,
NET_PAY_OUOM  VARCHAR(20),
OLDEST_STRAT_AGE  VARCHAR(20),
OLDEST_STRAT_NAME_SET_AGE  VARCHAR(20),
OLDEST_STRAT_NAME_SET_ID  VARCHAR(20),
OLDEST_STRAT_UNIT_ID  VARCHAR(20),
OPERATOR  VARCHAR(20),
PLATFORM_ID  VARCHAR(20),
PLATFORM_SF_TYPE  VARCHAR(30),
PLOT_NAME  VARCHAR(20),
PLOT_SYMBOL  VARCHAR(20),
PLUGBACK_DEPTH DECIMAL(10,5),
PLUGBACK_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRIMARY_SOURCE  VARCHAR(20),
PROFILE_TYPE  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
REGULATORY_AGENCY  VARCHAR(20),
REMARK  VARCHAR(2000),
RIG_ON_SITE_DATE TIMESTAMP(0),
RIG_RELEASE_DATE TIMESTAMP(0),
ROTARY_TABLE_ELEV DECIMAL(10,5),
ROTARY_TABLE_ELEV_OUOM  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SPUD_DATE TIMESTAMP(0),
STATUS_TYPE  VARCHAR(20),
SUBSEA_ELEV_REF_TYPE  VARCHAR(20),
SURFACE_LATITUDE DECIMAL(14,9),
SURFACE_LONGITUDE DECIMAL(14,9),
SURFACE_NODE_ID  VARCHAR(20),
TAX_CREDIT_CODE  VARCHAR(20),
TD_STRAT_AGE  VARCHAR(20),
TD_STRAT_NAME_SET_AGE  VARCHAR(20),
TD_STRAT_NAME_SET_ID  VARCHAR(20)
,
TD_STRAT_UNIT_ID  VARCHAR(20),
WATER_ACOUSTIC_VEL DECIMAL(10,5),
WATER_ACOUSTIC_VEL_OUOM  VARCHAR(20),
WATER_DEPTH DECIMAL(10,5),
WATER_DEPTH_DATUM  VARCHAR(20),
WATER_DEPTH_OUOM  VARCHAR(20),
WELL_EVENT_NUM  VARCHAR(4),
WELL_GOVERNMENT_ID  VARCHAR(20),
WELL_INTERSECT_MD DECIMAL(10,5),
WELL_LEVEL_TYPE  VARCHAR(20),
WELL_NAME  VARCHAR(255),
WELL_NUM  VARCHAR(20),
WELL_NUMERIC_ID BIGINT,
WHIPSTOCK_DEPTH DECIMAL(10,5),
WHIPSTOCK_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ACTIVITY'
CREATE table well_activity (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVITY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_DURATION DECIMAL(10,5),
ACTIVITY_DURATION_OUOM  VARCHAR(20),
ACTIVITY_PRODUCT  VARCHAR(20),
ACTIVITY_SET_ID  VARCHAR(20),
ACTIVITY_TYPE  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
BLOWOUT_FLUID  VARCHAR(20),
CONTROL_DATE TIMESTAMP(0),
CONTROL_DEPTH DECIMAL(10,5),
CONTROL_DEPTH_OUOM  VARCHAR(20),
DOWNTIME_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE  VARCHAR(20),
EVENT_DATE TIMESTAMP(0),
EVENT_DEPTH DECIMAL(10,5),
EVENT_DEPTH_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FINAL_MUD_DENSITY DECIMAL(10,5),
FINAL_MUD_DENSITY_OUOM  VARCHAR(20),
FINAL_MUD_VISCOSITY DECIMAL(10,5),
FINAL_MUD_VISCOSITY_OUOM  VARCHAR(20),
LITHOLOGY  VARCHAR(20),
LOST_CIRC_SEVERITY  VARCHAR(20),
LOST_MATERIAL_AMOUNT DECIMAL(10,5),
LOST_MATERIAL_AMOUNT_OUOM  VARCHAR(20),
LOST_MATERIAL_TYPE  VARCHAR(20),
LOST_VOLUME DECIMAL(14,4),
LOST_VOLUME_OUOM  VARCHAR(20),
LOST_VOLUME_PRODUCT  VARCHAR(20),
LOST_VOLUME_UOM  VARCHAR(20),
PERIOD_OBS_NO INT,
PPDM_GUID  VARCHAR(38),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
REMARK  VARCHAR(2000),
REPORTED_CODE  VARCHAR(12),
REPORTED_ELAPSED_TIME DECIMAL(10,5),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
START_DATE TIMESTAMP(0),
START_MUD_DENSITY DECIMAL(10,5),
START_MUD_DENSITY_OUOM  VARCHAR(20),
START_MUD_VISCOSITY DECIMAL(10,5),
START_MUD_VISCOSITY_OUOM  VARCHAR(20),
START_TIME  VARCHAR(20),
START_TIMEZONE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
TOTAL_TIME DECIMAL(10,5),
TOTAL_TIME_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ACTIVITY_CAUSE'
CREATE table well_activity_cause (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVITY_OBS_NO INT,
CAUSE_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_OBS_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ACTIVITY_COMPONENT'
CREATE table well_activity_component (
UWI  VARCHAR(20) NOT NULL,
ACTIVITY_SOURCE  VARCHAR(20) NOT NULL,
ACTIVITY_OBS_NO INT,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BA_SERVICE_PROVIDED_BY  VARCHAR(20),
BA_SERVICE_SEQ_NO INT,
BIT_INTERVAL_OBS_NO INT,
BIT_SOURCE  VARCHAR(20),
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CEMENT_OBS_NO INT,
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
CREW_COMPANY_BA_ID  VARCHAR(20),
CREW_ID  VARCHAR(20),
DIR_SURVEY_ID  VARCHAR(20),
DIR_SURVEY_SOURCE  VARCHAR(20),
DRILL_BIT_PERIOD_OBS_NO INT,
DRILL_CHECK_OBS_NO INT,
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_OBS_NO INT,
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
MAINT_EQUIPMENT_ID  VARCHAR(20),
MAINT_EQUIP_MAINT_ID  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ACTIVITY_TYPE  VARCHAR(20),
PDEN_AMENDMENT_SEQ_NO INT,
PDEN_ID  VARCHAR(40),
PDEN_PERIOD_TYPE  VARCHAR(20),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PDEN_VOLUME_DATE  VARCHAR(12),
PDEN_VOLUME_METHOD  VARCHAR(20),
PERFORATION_OBS_NO INT,
PERFORATION_SOURCE  VARCHAR(20),
PERIOD_OBS_NO INT,
PHYSICAL_ITEM_ID  VARCHAR(20),
PLUGBACK_OBS_NO INT,
PLUGBACK_SOURCE  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20)
,
PR_STR_FORM_OBS_NO INT,
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
TUBING_OBS_NO INT,
TUBING_SOURCE  VARCHAR(20),
TUBING_TYPE  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_CORE_ID  VARCHAR(20),
WELL_CORE_SOURCE  VARCHAR(20),
WELL_LOG_ID  VARCHAR(20),
WELL_LOG_SOURCE  VARCHAR(20),
WELL_TEST_NUM  VARCHAR(4),
WELL_TEST_RUN_NUM  VARCHAR(4),
WELL_TEST_SOURCE  VARCHAR(20),
WELL_TEST_TYPE  VARCHAR(20),
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ACTIVITY_DURATION'
CREATE table well_activity_duration (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVITY_OBS_NO INT,
DURATION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_DURATION DECIMAL(10,5),
ACTIVITY_DURATION_OUOM  VARCHAR(20),
DOWNTIME_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE  VARCHAR(20),
EVENT_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_OBS_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
START_TIME  VARCHAR(20),
START_TIMEZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ACTIVITY_SET'
CREATE table well_activity_set (
ACTIVITY_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_SET_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ACTIVITY_TYPE'
CREATE table well_activity_type (
ACTIVITY_SET_ID  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REGULATORY_REPORT_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ACTIVITY_TYPE_ALIAS'
CREATE table well_activity_type_alias (
ACTIVITY_SET_ID  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
ALIAS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ACTIVITY_TYPE_EQUIV'
CREATE table well_activity_type_equiv (
ACTIVITY_SET_ID  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
ACTIVITY_SET_ID2  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE2  VARCHAR(20) NOT NULL,
EQUIV_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIV_OWNER_BA_ID  VARCHAR(20),
EQUIV_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_AIR_DRILL'
CREATE table well_air_drill (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
AIR_DRILL_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
COMPRESSOR_COUNT BIGINT,
CONTRACTOR  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_COMPRESSOR_CAP_VOL INT,
MAX_COMPRESSOR_CAP_VOL_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_AIR_DRILL_INTERVAL'
CREATE table well_air_drill_interval (
UWI  VARCHAR(20) NOT NULL,
AIR_DRILL_SOURCE  VARCHAR(20) NOT NULL,
AIR_DRILL_OBS_NO INT,
DEPTH_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AIR_GAS_CODE  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
COMPRESSOR_RATE_VOLUME INT,
COMPRESSOR_RATE_VOLUME_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_INTERVAL_PRESSURE INT,
MAX_INTERVAL_PRESSURE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
WATER_INFLUX_AMOUNT INT,
WATER_INFLUX_AMOUNT_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_AIR_DRILL_PERIOD'
CREATE table well_air_drill_period (
UWI  VARCHAR(20) NOT NULL,
INTERVAL_SOURCE  VARCHAR(20) NOT NULL,
AIR_DRILL_OBS_NO INT,
DEPTH_OBS_NO INT,
PERIOD_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ALIAS'
CREATE table well_alias (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
WELL_ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_AREA'
CREATE table well_area (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_BA_SERVICE'
CREATE table well_ba_service (
UWI  VARCHAR(20) NOT NULL,
PROVIDED_BY  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CONTACT_BA_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROVIDED_FOR  VARCHAR(20),
PROVISION_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
REPRESENTED_BA_ID  VARCHAR(20),
SERVICE_DATE TIMESTAMP(0),
SERVICE_PERIOD DECIMAL(6,2),
SERVICE_PERIOD_UOM  VARCHAR(20),
SERVICE_QUALITY  VARCHAR(20),
SERVICE_TIME TIMESTAMP(0),
SERVICE_TIMEZONE  VARCHAR(20),
SERVICE_TIME_DESC  VARCHAR(240),
SERVICE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
WELL_ACTIVITY_OBS_NO INT,
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_DRILL_PERIOD_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CEMENT'
CREATE table well_cement (
UWI  VARCHAR(20) NOT NULL,
WELL_TUBE_SOURCE  VARCHAR(20) NOT NULL,
TUBING_TYPE  VARCHAR(20) NOT NULL,
TUBING_OBS_NO INT,
CEMENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CEMENT_AMOUNT DECIMAL(7,2),
CEMENT_AMOUNT_OUOM  VARCHAR(20),
CEMENT_AMOUNT_UOM  VARCHAR(20),
CEMENT_BA_ID  VARCHAR(20),
CEMENT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERFORATION_BASE_DEPTH DECIMAL(10,5),
PERFORATION_BASE_DEPTH_OUOM  VARCHAR(20),
PERFORATION_COUNT DECIMAL(6,2),
PERFORATION_PER_UOM  VARCHAR(20),
PERFORATION_TOP_DEPTH DECIMAL(10,5),
PERFORATION_TOP_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECEMENT_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STAGE_NO SMALLINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_COMPLETION'
CREATE table well_completion (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
COMPLETION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
COMPLETION_DATE TIMESTAMP(0),
COMPLETION_METHOD  VARCHAR(20),
COMPLETION_STRAT_UNIT_ID  VARCHAR(20),
COMPLETION_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_COMPONENT'
CREATE table well_component (
UWI  VARCHAR(20) NOT NULL,
COMPONENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
PR_STR_SOURCE  VARCHAR(20),
PR_STR_UWI  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20),
THESAURUS_WORD_ID  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
WELL_ACTIVITY_UWI  VARCHAR(20),
WELL_COMPONENT_TYPE  VARCHAR(20)
,
WORK_ORDER_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE'
CREATE table well_core (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_REPORT  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
CONTRACTOR  VARCHAR(20),
CORE_BARREL_SIZE DECIMAL(9,3),
CORE_BARREL_SIZE_OUOM  VARCHAR(20),
CORE_DIAMETER DECIMAL(8,3),
CORE_DIAMETER_OUOM  VARCHAR(20),
CORE_HANDLING_TYPE  VARCHAR(20),
CORE_ORIENTED_IND  VARCHAR(1),
CORE_SHOW_TYPE  VARCHAR(20),
CORE_TYPE  VARCHAR(20),
CORING_FLUID  VARCHAR(20),
DIGIT_AVAIL_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAMMA_CORRELATION_IND  VARCHAR(1),
OPERATION_SEQ_NO INT,
PPDM_GUID  VARCHAR(38),
PRIMARY_CORE_STRAT_UNIT_ID  VARCHAR(20),
RECOVERED_AMOUNT DECIMAL(10,5),
RECOVERED_AMOUNT_OUOM  VARCHAR(20),
RECOVERED_AMOUNT_UOM  VARCHAR(20),
RECOVERY_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
REPORTED_CORE_NUM  VARCHAR(20),
RUN_NUM  VARCHAR(20),
SHOT_RECOVERED_COUNT SMALLINT,
SIDEWALL_IND  VARCHAR(1),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOTAL_SHOT_COUNT SMALLINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_ANALYSIS'
CREATE table well_core_analysis (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_DATE TIMESTAMP(0),
ANALYZING_COMPANY  VARCHAR(20),
ANALYZING_COMPANY_LOC  VARCHAR(32),
ANALYZING_FILE_NUM  VARCHAR(15),
CORE_ANALYST_NAME  VARCHAR(60),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PRIMARY_SAMPLE_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SAMPLE_DIAMETER DECIMAL(8,3),
SAMPLE_DIAMETER_OUOM  VARCHAR(20),
SAMPLE_LENGTH DECIMAL(6,3),
SAMPLE_LENGTH_OUOM  VARCHAR(20),
SAMPLE_SHAPE  VARCHAR(20),
SECOND_SAMPLE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_ANAL_METHOD'
CREATE table well_core_anal_method (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CORE_SOLVENT  VARCHAR(20),
CUTTING_FLUID  VARCHAR(20),
DENSITY_ANALYSIS  VARCHAR(50),
DRYING_METHOD  VARCHAR(50),
DRYING_TEMPERATURE DECIMAL(5,2),
DRYING_TEMPERATURE_OUOM  VARCHAR(20),
DRYING_TIME DECIMAL(7,2),
DRYING_TIME_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXTRACT_METHOD  VARCHAR(50),
EXTRACT_TIME DECIMAL(7,2),
EXTRACT_TIME_OUOM  VARCHAR(20),
FLUID_SAT_ANALYSIS  VARCHAR(50),
PERMEABILITY_ANALYSIS  VARCHAR(50),
POROSITY_ANALYSIS  VARCHAR(50),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_ANAL_REMARK'
CREATE table well_core_anal_remark (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_DESCRIPTION'
CREATE table well_core_description (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
DESCRIPTION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
CORE_DESCRIPTION_COMPANY  VARCHAR(20),
DESCRIPTION_DATE TIMESTAMP(0),
DIP_ANGLE SMALLINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERVAL_THICKNESS DECIMAL(10,5),
INTERVAL_THICKNESS_OUOM  VARCHAR(20),
LITHOLOGY_DESC  VARCHAR(240),
POROSITY_LENGTH DECIMAL(10,5),
POROSITY_LENGTH_OUOM  VARCHAR(20),
POROSITY_QUALITY  VARCHAR(20),
POROSITY_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHOW_LENGTH DECIMAL(10,5),
SHOW_LENGTH_OUOM  VARCHAR(20),
SHOW_TYPE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_REMARK'
CREATE table well_core_remark (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_SAMPLE_ANAL'
CREATE table well_core_sample_anal (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
SAMPLE_NUM  VARCHAR(12) NOT NULL,
SAMPLE_ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BULK_DENSITY DECIMAL(9,4),
BULK_DENSITY_OUOM  VARCHAR(20),
BULK_MASS_OIL_SAT DECIMAL(9,4),
BULK_MASS_OIL_SAT_OUOM  VARCHAR(20),
BULK_MASS_SAND_SAT DECIMAL(9,4),
BULK_MASS_SAND_SAT_OUOM  VARCHAR(20),
BULK_MASS_WATER_SAT DECIMAL(9,4),
BULK_MASS_WATER_SAT_OUOM  VARCHAR(20),
BULK_VOLUME_OIL_SAT DECIMAL(9,4),
BULK_VOLUME_WATER_SAT DECIMAL(9,4),
CONFINE_PERM_PRESSURE DECIMAL(9,3),
CONFINE_PERM_PRESSURE_OUOM  VARCHAR(20),
CONFINE_POR_PRESSURE DECIMAL(9,3),
CONFINE_POR_PRESSURE_OUOM  VARCHAR(20),
CONFINE_SAT_PRESSURE DECIMAL(9,3),
CONFINE_SAT_PRESSURE_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EFFECTIVE_POROSITY DECIMAL(9,4),
EXPIRY_DATE TIMESTAMP(0),
GAS_SAT_VOLUME DECIMAL(9,4),
GRAIN_DENSITY DECIMAL(9,4),
GRAIN_DENSITY_OUOM  VARCHAR(20),
GRAIN_MASS_OIL_SAT DECIMAL(9,4),
GRAIN_MASS_OIL_SAT_OUOM  VARCHAR(20),
GRAIN_MASS_WATER_SAT DECIMAL(9,4),
GRAIN_MASS_WATER_SAT_OUOM  VARCHAR(20),
INTERVAL_DEPTH DECIMAL(10,5),
INTERVAL_DEPTH_OUOM  VARCHAR(20),
INTERVAL_LENGTH DECIMAL(10,5),
INTERVAL_LENGTH_OUOM  VARCHAR(20),
K90 DECIMAL(12,4),
K90_OUOM  VARCHAR(20),
K90_QUALIFIER  VARCHAR(20),
KMAX DECIMAL(12,4),
KMAX_OUOM  VARCHAR(20),
KMAX_QUALIFIER  VARCHAR(20),
KVERT DECIMAL(12,4),
KVERT_OUOM  VARCHAR(20),
KVERT_QUALIFIER  VARCHAR(20),
OIL_SAT DECIMAL(9,4),
PORE_VOLUME_GAS_SAT DECIMAL(9,4),
PORE_VOLUME_OIL_SAT DECIMAL(9,4),
PORE_VOLUME_WATER_SAT DECIMAL(9,4),
POROSITY DECIMAL(9,4),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
WATER_SAT DECIMAL(9,4),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_SAMPLE_DESC'
CREATE table well_core_sample_desc (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
SAMPLE_NUM  VARCHAR(12) NOT NULL,
SAMPLE_ANALYSIS_OBS_NO INT,
SAMPLE_DESC_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
DIP_ANGLE SMALLINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LITHOLOGY_DESC  VARCHAR(240),
POROSITY_LENGTH DECIMAL(10,5),
POROSITY_LENGTH_OUOM  VARCHAR(20),
POROSITY_QUALITY  VARCHAR(20),
POROSITY_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECOVERED_AMOUNT DECIMAL(10,5),
RECOVERED_AMOUNT_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SAMPLE_TYPE  VARCHAR(20),
SHOW_LENGTH DECIMAL(10,5),
SHOW_LENGTH_OUOM  VARCHAR(20),
SHOW_QUALITY  VARCHAR(20),
SHOW_TYPE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SWC_RECOVERY_TYPE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_SAMPLE_RMK'
CREATE table well_core_sample_rmk (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
SAMPLE_NUM  VARCHAR(12) NOT NULL,
SAMPLE_ANALYSIS_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_SHIFT'
CREATE table well_core_shift (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
SHIFT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_SHIFT_DEPTH DECIMAL(10,5),
BASE_SHIFT_DEPTH_OUOM  VARCHAR(20),
CORE_SHIFT_COMPANY  VARCHAR(20),
CORE_SHIFT_IND  VARCHAR(1),
CORE_SHIFT_METHOD  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_SHIFT_DEPTH DECIMAL(10,5),
TOP_SHIFT_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_CORE_STRAT_UNIT'
CREATE table well_core_strat_unit (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
CORE_ID  VARCHAR(20) NOT NULL,
DESCRIPTION_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
CORE_STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CORE_STRAT_UNIT_MD DECIMAL(10,5),
CORE_STRAT_UNIT_MD_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DIR_SRVY'
CREATE table well_dir_srvy (
UWI  VARCHAR(20) NOT NULL,
SURVEY_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AZIMUTH_NORTH_TYPE  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
COMPUTE_METHOD  VARCHAR(20),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
DIR_SURVEY_CLASS  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
MAGNETIC_DECLINATION DECIMAL(4,2),
OFFSET_NORTH_TYPE  VARCHAR(20),
PLANE_OF_PROPOSAL DECIMAL(10,6),
PPDM_GUID  VARCHAR(38),
RECORD_MODE  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORT_APD DECIMAL(10,5),
REPORT_LOG_DATUM  VARCHAR(20),
REPORT_LOG_DATUM_ELEV DECIMAL(10,5),
REPORT_LOG_DATUM_ELEV_OUOM  VARCHAR(20),
REPORT_PERM_DATUM  VARCHAR(20),
REPORT_PERM_DATUM_ELEV DECIMAL(10,5),
REPORT_PERM_DATUM_ELEV_OUOM  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SURVEY_COMPANY  VARCHAR(20),
SURVEY_DATE TIMESTAMP(0),
SURVEY_NUMERIC_ID BIGINT,
SURVEY_QUALITY  VARCHAR(20),
SURVEY_START_DATE TIMESTAMP(0),
SURVEY_TYPE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DIR_SRVY_STATION'
CREATE table well_dir_srvy_station (
UWI  VARCHAR(20) NOT NULL,
SURVEY_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AZIMUTH DECIMAL(5,2),
AZIMUTH_OUOM  VARCHAR(20),
DOG_LEG_SEVERITY DECIMAL(5,2),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INCLINATION DECIMAL(5,2),
INCLINATION_OUOM  VARCHAR(20),
LATITUDE DECIMAL(14,9),
LONGITUDE DECIMAL(14,9),
NS_DIRECTION  VARCHAR(20),
PERIOD_OBS_NO INT,
POINT_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STATION_ID  VARCHAR(20),
STATION_MD DECIMAL(10,5),
STATION_MD_OUOM  VARCHAR(20),
STATION_TVD DECIMAL(10,5),
STATION_TVD_OUOM  VARCHAR(20),
VERTICAL_SECTION DECIMAL(15,2),
VERTICAL_SECTION_OUOM  VARCHAR(20),
X_OFFSET DECIMAL(7,2),
X_OFFSET_OUOM  VARCHAR(20),
Y_OFFSET DECIMAL(7,2),
Y_OFFSET_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DIR_SURVEY_GEOMETRY'
CREATE table well_dir_survey_geometry (
UWI  VARCHAR(20) NOT NULL,
SURVEY_ID  VARCHAR(20) NOT NULL,
SURVEY_SOURCE  VARCHAR(20) NOT NULL,
GEOMETRY_FORMAT  VARCHAR(20) NOT NULL,
GEOMETRY_ID  VARCHAR(20) NOT NULL,
GEOMETRY_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOMETRY_DATE TIMESTAMP(0),
GEOMETRY_SOURCE  VARCHAR(20),
GEOMETRY_TYPE  VARCHAR(20),
OBJECT_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SURVEY_NUMERIC_ID BIGINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_ADD_INV'
CREATE table well_drill_add_inv (
UWI  VARCHAR(20) NOT NULL,
DRILL_PERIOD_OBS_NO INT,
ADDITIVE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
QUANTITY_COUNT_OPENING DECIMAL(12,2),
QUANTITY_COUNT_ORDERED DECIMAL(12,2),
QUANTITY_COUNT_REMAINING DECIMAL(12,2),
QUANTITY_COUNT_USED DECIMAL(12,2),
QUANTITY_VALUE_OPENING DECIMAL(15,5),
QUANTITY_VALUE_ORDERED DECIMAL(15,5),
QUANTITY_VALUE_OUOM  VARCHAR(20),
QUANTITY_VALUE_REMAINING DECIMAL(15,5),
QUANTITY_VALUE_UOM  VARCHAR(20),
QUANTITY_VALUE_USED DECIMAL(15,5),
REMARK  VARCHAR(2000),
REPORT_TIME_TYPE  VARCHAR(20),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_ASSEMBLY'
CREATE table well_drill_assembly (
UWI  VARCHAR(20) NOT NULL,
ASSEMBLY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ASSEMBLY_REF_NUMBER  VARCHAR(30),
CALCULATED_LENGTH DECIMAL(10,3),
CALCULATED_WEIGHT DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_TIME TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_ASSEMBLY_COMP'
CREATE table well_drill_assembly_comp (
UWI  VARCHAR(20) NOT NULL,
ASSEMBLY_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CATALOGUE_EQUIP_ID  VARCHAR(20),
COMPONENT_COUNT BIGINT,
COMPONENT_DESC  VARCHAR(1024),
COMPONENT_LENGTH DECIMAL(10,3),
COMPONENT_LENGTH_OUOM  VARCHAR(20),
COMPONENT_SEQ_NO INT,
COMPONENT_TYPE  VARCHAR(20),
COMPONENT_WEIGHT DECIMAL(10,5),
COMPONENT_WEIGHT_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_INSIDE_DIAMETER DECIMAL(8,3),
MAX_INSIDE_DIAMETER_OUOM  VARCHAR(20),
MAX_OUTSIDE_DIAMETER DECIMAL(8,3),
MAX_OUTSIDE_DIAMETER_OUOM  VARCHAR(20),
MIN_INSIDE_DIAMETER DECIMAL(8,3),
MIN_INSIDE_DIAMETER_OUOM  VARCHAR(20),
MIN_OUTSIDE_DIAMETER DECIMAL(8,3),
MIN_OUTSIDE_DIAMETER_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SERIAL_NUMBER  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_ASSEMBLY_PER'
CREATE table well_drill_assembly_per (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
ASSEMBLY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_TIME TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_BIT_CONDITION'
CREATE table well_drill_bit_condition (
UWI  VARCHAR(20) NOT NULL,
BIT_SOURCE  VARCHAR(20) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
CONDITION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BEARING_CONDITION  VARCHAR(20),
DRILL_BIT_CONDITION  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_BIT_INTERVAL'
CREATE table well_drill_bit_interval (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AVG_FORCE_ON_BIT DECIMAL(10,5),
AVG_FORCE_ON_BIT_OUOM  VARCHAR(20),
AVG_PENETRATION_RATE DECIMAL(10,5),
AVG_PENETRATION_RATE_OUOM  VARCHAR(20),
BIT_COMPANY  VARCHAR(20),
BIT_DRILLED_RATE DECIMAL(10,5),
BIT_DRILLED_RATE_OUOM  VARCHAR(20),
BIT_JET_COUNT BIGINT,
BIT_JET_REMARK  VARCHAR(2000),
BIT_NUMBER  VARCHAR(20),
BIT_OPERATING_TIME DECIMAL(10,5),
BIT_OPERATING_TIME_OUOM  VARCHAR(20),
BIT_REMARK  VARCHAR(2000),
BIT_SIZE DECIMAL(10,5),
BIT_SIZE_DESC  VARCHAR(20),
BIT_SIZE_OUOM  VARCHAR(20),
CUTTING_STRUCTURE_LOC  VARCHAR(20),
CUTTING_STRUCTURE_MDC  VARCHAR(20),
CUTTING_STRUCTURE_TI  VARCHAR(20),
CUTTING_STRUCTURE_TO  VARCHAR(20),
DISTANCE_DRILLED DECIMAL(10,5),
DISTANCE_DRILLED_OUOM  VARCHAR(20),
DRILL_BIT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FLOW_RATE DECIMAL(10,5),
FLOW_RATE_OUOM  VARCHAR(20),
GAGE_OUT_DISTANCE DECIMAL(10,3),
GAGE_OUT_DISTANCE_OUOM  VARCHAR(20),
MAX_FORCE_ON_BIT DECIMAL(10,5),
MAX_FORCE_ON_BIT_OUOM  VARCHAR(20),
MAX_PENETRATION_RATE DECIMAL(10,5),
MAX_PENETRATION_RATE_OUOM  VARCHAR(20),
MIN_FORCE_ON_BIT DECIMAL(10,5),
MIN_FORCE_ON_BIT_OUOM  VARCHAR(20),
MIN_PENETRATION_RATE DECIMAL(10,5),
MIN_PENETRATION_RATE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REASON_PULLED  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORTED_TFA DECIMAL(10,5),
REPORTED_TFA_OUOM  VARCHAR(20),
RUN_IN_DEPTH DECIMAL(10,5),
RUN_IN_DEPTH_OUOM  VARCHAR(20),
RUN_OUT_DEPTH DECIMAL(10,5),
RUN_OUT_DEPTH_OUOM  VARCHAR(20),
TORQUE DECIMAL(10,5),
TORQUE_OUOM  VARCHAR(20),
TOTAL_BIT_REVOLUTIONS BIGINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_BIT_JET'
CREATE table well_drill_bit_jet (
UWI  VARCHAR(20) NOT NULL,
BIT_SOURCE  VARCHAR(20) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
JET_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
JET_DIAMETER DECIMAL(8,3),
JET_DIAMETER_OUOM  VARCHAR(20),
JET_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_BIT_PERIOD'
CREATE table well_drill_bit_period (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
BIT_SOURCE  VARCHAR(20) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
DRILL_BIT_PERIOD_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AVG_FORCE_ON_BIT DECIMAL(10,5),
AVG_FORCE_ON_BIT_OUOM  VARCHAR(20),
AVG_PENETRATION_RATE DECIMAL(10,5),
AVG_PENETRATION_RATE_OUOM  VARCHAR(20),
AVG_ROTARY_RPM DECIMAL(10,5),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BIT_OPERATING_TIME DECIMAL(10,5),
BIT_OPERATING_TIME_OUOM  VARCHAR(20),
DRILL_OP_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_RATE DECIMAL(10,5),
FLOW_RATE_OUOM  VARCHAR(20),
MAX_FORCE_ON_BIT DECIMAL(10,5),
MAX_FORCE_ON_BIT_OUOM  VARCHAR(20),
MAX_PENETRATION_RATE DECIMAL(10,5),
MAX_PENETRATION_RATE_OUOM  VARCHAR(20),
MAX_ROTARY_RPM DECIMAL(10,5),
MIN_FORCE_ON_BIT DECIMAL(10,5),
MIN_FORCE_ON_BIT_OUOM  VARCHAR(20),
MIN_PENETRATION_RATE DECIMAL(10,5),
MIN_PENETRATION_RATE_OUOM  VARCHAR(20),
MIN_ROTARY_RPM DECIMAL(10,5),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TORQUE DECIMAL(10,5),
TORQUE_OUOM  VARCHAR(20),
TOTAL_BIT_REVOLUTION BIGINT,
TOTAL_DRILLED_DIST DECIMAL(10,5),
TOTAL_DRILLED_DIST_OUOM  VARCHAR(20),
TOTAL_PERIOD_RUN DECIMAL(10,5),
TOTAL_PERIOD_RUN_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_CHECK'
CREATE table well_drill_check (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
DRILL_CHECK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CHECK_SET_ID  VARCHAR(20),
CHECK_TYPE  VARCHAR(20),
CONTRACTOR_NAME  VARCHAR(255),
CONTRACTOR_REP_BA_ID  VARCHAR(20),
DEFICIENT_IND  VARCHAR(1),
DEFICIENT_PERIOD DECIMAL(10,5),
DEFICIENT_PERIOD_OUOM  VARCHAR(20),
DEFICIENT_PERIOD_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OPERATOR_NAME  VARCHAR(255),
OPERATOR_REP_BA_ID  VARCHAR(20),
PASSED_IND  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
RECORDED_TIME TIMESTAMP(0),
RECORDED_TIMEZONE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_CHECK_SET'
CREATE table well_drill_check_set (
CHECK_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FULL_NAME  VARCHAR(255),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUM  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_CHECK_TYPE'
CREATE table well_drill_check_type (
CHECK_SET_ID  VARCHAR(20) NOT NULL,
CHECK_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONTRACTOR_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FREQUENCY  VARCHAR(20),
OPERATOR_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_EQUIPMENT'
CREATE table well_drill_equipment (
UWI  VARCHAR(20) NOT NULL,
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
EQUIPMENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OFFSITE_DATE TIMESTAMP(0),
OFFSITE_TIME TIMESTAMP(0),
ONSITE_DATE TIMESTAMP(0),
ONSITE_TIME TIMESTAMP(0),
OPERATED_BY_BA_ID  VARCHAR(20),
PARENT_EQUIPMENT_ID  VARCHAR(20),
PERIOD_ON_WELL DECIMAL(10,5),
PERIOD_ON_WELL_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
RENTED_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
TIMEZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_INT_DETAIL'
CREATE table well_drill_int_detail (
UWI  VARCHAR(20) NOT NULL,
BIT_SOURCE  VARCHAR(20) NOT NULL,
BIT_INTERVAL_OBS_NO INT,
BIT_DETAIL_TYPE  VARCHAR(20) NOT NULL,
DETAIL_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BIT_DETAIL_CODE  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DETAIL_DESC  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
TIMEZONE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_MUD_ADDITIVE'
CREATE table well_drill_mud_additive (
UWI  VARCHAR(20) NOT NULL,
DRILL_PERIOD_OBS_NO INT,
ADDITIVE_ID  VARCHAR(20) NOT NULL,
ADDITIVE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
ADDITIVE_METHOD  VARCHAR(20),
ADDITIVE_PERIOD DECIMAL(10,5),
ADDITIVE_PERIOD_OUOM  VARCHAR(20),
ADDITIVE_PERIOD_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
QUANTITY_COUNT DECIMAL(12,2),
QUANTITY_VALUE DECIMAL(15,5),
QUANTITY_VALUE_OUOM  VARCHAR(20),
QUANTITY_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
START_TIME TIMESTAMP(0),
TIMEZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_MUD_INTRVL'
CREATE table well_drill_mud_intrvl (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
MEDIA_TYPE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CASING_DEPTH DECIMAL(10,5),
CASING_DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_MUD_WEIGHT DECIMAL(10,5),
MAX_MUD_WEIGHT_OUOM  VARCHAR(20),
MAX_MUD_WEIGHT_UOM  VARCHAR(20),
MAX_WEIGHT_DEPTH DECIMAL(10,5),
MAX_WEIGHT_DEPTH_OUOM  VARCHAR(20),
MUD_END_DEPTH DECIMAL(10,5),
MUD_END_DEPTH_OUOM  VARCHAR(20),
MUD_START_DEPTH DECIMAL(10,5),
MUD_START_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_MUD_WEIGHT'
CREATE table well_drill_mud_weight (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
DEPTH_OBS_NO INT,
MEDIA_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MUD_DEPTH DECIMAL(10,5),
MUD_DEPTH_OUOM  VARCHAR(20),
MUD_WEIGHT DECIMAL(10,5),
MUD_WEIGHT_OUOM  VARCHAR(20),
MUD_WEIGHT_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_PERIOD'
CREATE table well_drill_period (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BHA_WEIGHT DECIMAL(10,5),
BHA_WEIGHT_OUOM  VARCHAR(20),
BOILER_FUEL DECIMAL(10,5),
BOILER_FUEL_OUOM  VARCHAR(20),
CAMP_IND  VARCHAR(1),
CASING_PRESS_MAX DECIMAL(10,5),
CASING_PRESS_MAX_OUOM  VARCHAR(20),
CIRC_PRESSURE DECIMAL(10,5),
CIRC_PRESSURE_MAX DECIMAL(10,5),
CIRC_PRESSURE_MAX_OUOM  VARCHAR(20),
CIRC_PRESSURE_MIN DECIMAL(10,5),
CIRC_PRESSURE_MIN_OUOM  VARCHAR(20),
CIRC_PRESSURE_OUOM  VARCHAR(20),
CIRC_PRESSURE_TYPE  VARCHAR(20),
CONTRACTOR_BA_ID  VARCHAR(20),
CONTRACTOR_REP_BA_ID  VARCHAR(20),
CONTRACTOR_REP_NAME  VARCHAR(255),
CONTRACTOR_REP_SIGNED_IND  VARCHAR(1),
CUM_CREW_SAFETY_DAYS BIGINT,
CUM_RIG_SAFETY_DAYS BIGINT,
DRILL_ACTIVITY_SET_ID  VARCHAR(20),
DRILL_ACTIVITY_TYPE  VARCHAR(20),
DRILL_PIPE_SINGLE_COUNT BIGINT,
DRILL_PIPE_SINGLE_LEN DECIMAL(10,3),
DRILL_PIPE_SINGLE_LEN_OUOM  VARCHAR(20),
DRILL_PIPE_STAND_COUNT BIGINT,
DRILL_PIPE_STAND_LEN DECIMAL(10,3),
DRILL_PIPE_STAND_LEN_OUOM  VARCHAR(20),
DRILL_STRING_TORQUE DECIMAL(10,5),
DRILL_STRING_TORQUE_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FINANCE_ID  VARCHAR(20),
HOLE_DRAG DECIMAL(10,5),
HOLE_DRAG_OUOM  VARCHAR(20),
HOLE_FILL_LENGTH DECIMAL(10,3),
HOLE_FILL_LENGTH_OUOM  VARCHAR(20),
HOOKLOAD_MAX DECIMAL(10,5),
HOOKLOAD_MAX_OUOM  VARCHAR(20),
JOB_NUM  VARCHAR(255),
KB_DOWN_LENGTH DECIMAL(10,5),
KB_DOWN_LENGTH_OUOM  VARCHAR(20),
MUD_SYSTEM_TYPE  VARCHAR(20),
MUD_TYPE_OIL_IND  VARCHAR(1),
MUD_TYPE_WATER_IND  VARCHAR(1),
OPERATOR_BA_ID  VARCHAR(20),
OPERATOR_FUEL DECIMAL(10,5),
OPERATOR_FUEL_OUOM  VARCHAR(20),
OPERATOR_FUEL_UOM  VARCHAR(20),
OPERATOR_REP_BA_ID  VARCHAR(20),
OPERATOR_REP_NAME  VARCHAR(255),
OPERATOR_REP_SIGNED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PRIMARY_ACTIVITY_IND  VARCHAR(1),
RATE_SCHEDULE_ID  VARCHAR(20),
REENTRY_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
REPORTED_BASE_LOCATION  VARCHAR(255),
REPORTED_KB_ELEV DECIMAL(10,5),
REPORTED_KB_ELEV_OUOM  VARCHAR(20),
REPORTED_LICENCE_NUM  VARCHAR(255),
REPORTED_PERIOD_NUM  VARCHAR(30),
REPORTED_PROFILE_TYPE  VARCHAR(20),
REPORTED_RIG_NAME  VARCHAR(255),
REPORTED_RIG_REL_DATE TIMESTAMP(0),
REPORTED_RIG_REL_TIME TIMESTAMP(0),
REPORTED_RIG_REL_TIMEZONE  VARCHAR(20),
REPORTED_SPUD_DATE TIMESTAMP(0),
REPORTED_SPUD_TIME TIMESTAMP(0),
REPORTED_SPUD_TIMEZONE  VARCHAR(20),
REPORTED_TOP_LOCATION  VARCHAR(255),
REPORTED_UWI  VARCHAR(255),
REPORTED_WELL_NAME  VARCHAR(255),
REPORT_TIME_TYPE  VARCHAR(20),
RIG_FUEL DECIMAL(10,5),
RIG_FUEL_OUOM  VARCHAR(20),
RIG_FUEL_UOM  VARCHAR(20),
SAFETY_MEETING_TOPIC  VARCHAR(255)
,
SOURCE  VARCHAR(20),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
START_TIMEZONE  VARCHAR(20),
TOT_DRILL_TOOL_LENGTH DECIMAL(10,3),
TOT_DRILL_TOOL_LENGTH_OUOM  VARCHAR(20),
TOT_DRILL_TOOL_WEIGHT DECIMAL(10,5),
TOT_DRILL_TOOL_WEIGHT_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_CREW'
CREATE table well_drill_period_crew (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
CREW_COMPANY_BA_ID  VARCHAR(20) NOT NULL,
DETAIL_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BOOKED_TIME DECIMAL(10,5),
BOOKED_TIME_UOM  VARCHAR(20),
CREW_MEMBER_BA_ID  VARCHAR(20),
CREW_MEMBER_NAME  VARCHAR(255),
CREW_MEMBER_NUM  VARCHAR(255),
CREW_MEMBER_RECORD_IND  VARCHAR(1),
CREW_POSITION  VARCHAR(20),
CREW_RECORD_IND  VARCHAR(1),
CREW_REFERENCE_NUM  VARCHAR(30),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INJURY_IND  VARCHAR(1),
INJURY_INITIAL_IND  VARCHAR(1),
NO_INJURY_IND  VARCHAR(1),
OVERHEAD_COST DECIMAL(12,2),
OVERHEAD_COST_UOM  VARCHAR(20),
OVERHEAD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SUBSISTANCE_IND  VARCHAR(1),
SUPPORT_FACILITY__ID  VARCHAR(20),
TOTAL_CREW_COUNT BIGINT,
TOTAL_INJURY_COUNT  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_EQUIP'
CREATE table well_drill_period_equip (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVG_BOILER_PH DECIMAL(4,2),
AVG_BOILER_STACK_TEMP DECIMAL(5,2),
AVG_BOILER_STACK_TEMP_OUOM  VARCHAR(20),
AVG_PUMP_PRESSURE DECIMAL(10,5),
AVG_PUMP_PRESSURE_OUOM  VARCHAR(20),
BOOKED_TIME DECIMAL(6,2),
BOOKED_TIME_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_OBS_NO INT,
EQUIP_REF_NUM  VARCHAR(255),
EXPIRY_DATE TIMESTAMP(0),
INTAKE_DENSITY DECIMAL(10,5),
INTAKE_DENSITY_OUOM  VARCHAR(20),
OVERFLOW_DENSITY DECIMAL(10,5),
OVERFLOW_DENSITY_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PUMP_LINER_INSIDE_DIAM DECIMAL(10,5),
PUMP_LINER_INSIDE_DIAM_OUOM  VARCHAR(20),
PUMP_STROKE BIGINT,
PUMP_STROKE_OUOM  VARCHAR(20),
REDUCED_PUMP_DEPTH DECIMAL(10,5),
REDUCED_PUMP_DEPTH_OUOM  VARCHAR(20),
REDUCED_PUMP_PRESS DECIMAL(8,2),
REDUCED_PUMP_PRESS_OUOM  VARCHAR(20),
REDUCED_PUMP_STROKE DECIMAL(10,5),
REDUCED_PUMP_STROKE_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TUBING_OBS_NO INT,
TUBING_SOURCE  VARCHAR(20),
TUBING_TYPE  VARCHAR(20),
UNDERFLOW_DENSITY DECIMAL(10,5),
UNDERFLOW_DENSITY_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_INV'
CREATE table well_drill_period_inv (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
INVENTORY_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CAT_ADDITIVE_ID  VARCHAR(20),
CAT_EQUIP_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INVENTORY_MATERIAL_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
QUANTITY_ON_HAND DOUBLE PRECISION,
QUANTITY_ON_HAND_OUOM  VARCHAR(20),
QUANTITY_ON_HAND_UOM  VARCHAR(20),
QUANTITY_ORDERED DOUBLE PRECISION,
QUANTITY_ORDERED_OUOM  VARCHAR(20),
QUANTITY_ORDERED_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORT_TIME TIMESTAMP(0),
REPORT_TIME_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_SERV'
CREATE table well_drill_period_serv (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
PROVIDED_BY  VARCHAR(20) NOT NULL,
SERVICE_SEQ_NO INT,
SEGMENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
METRIC_CODE  VARCHAR(20),
METRIC_MAX_VALUE DOUBLE PRECISION,
METRIC_MIN_VALUE DOUBLE PRECISION,
METRIC_VALUE DOUBLE PRECISION,
METRIC_VALUE_OUOM  VARCHAR(20),
METRIC_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SERVICE_DESC  VARCHAR(1024),
SERVICE_METRIC  VARCHAR(20),
SOURCE  VARCHAR(20),
START_TIME TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_PERIOD_VESSEL'
CREATE table well_drill_period_vessel (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
VESSEL_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEADING DECIMAL(10,5),
HEADING_NORTH_TYPE  VARCHAR(20),
PASSENGERS_OFF BIGINT,
PASSENGERS_ON BIGINT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RISER_ANGLE DECIMAL(10,5),
RISER_TENSION DECIMAL(10,5),
RISER_TENSION_OUOM  VARCHAR(20),
RISER_TENSION_UOM  VARCHAR(20),
SOURCE  VARCHAR(20),
VESSEL_ROLE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_PIPE_INV'
CREATE table well_drill_pipe_inv (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
INVENTORY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CAT_EQUIP_ID  VARCHAR(20),
COUPLING_TYPE  VARCHAR(20),
DAMAGED_JOINT_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
JOINT_COUNT BIGINT,
LINEAR_MASS DECIMAL(10,5),
LINEAR_MASS_OUOM  VARCHAR(20),
LOAN_AUTHORIZED_BY_BA_ID  VARCHAR(20),
LOAN_COUNT BIGINT,
LOAN_TO_BA_ID  VARCHAR(20),
LOST_COUNT BIGINT,
MAX_JOINT_OUTSIDE_DIAM DECIMAL(8,3),
MAX_JOINT_OUTSIDE_DIAM_OUOM  VARCHAR(20),
MAX_OUTSIDE_DIAMETER DECIMAL(8,3),
MAX_OUTSIDE_DIAMETER_OUOM  VARCHAR(20),
MIN_INSIDE_DIAMETER DECIMAL(8,3),
MIN_INSIDE_DIAMETER_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORT_TIME TIMESTAMP(0),
REPORT_TIME_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
TUBING_GRADE  VARCHAR(20),
TUBING_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_REMARK'
CREATE table well_drill_remark (
UWI  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_PERIOD_OBS_NO INT,
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_BY_BA_ID  VARCHAR(20),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
START_PERIOD_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_REPORT'
CREATE table well_drill_report (
UWI  VARCHAR(20) NOT NULL,
REPORT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONTRACTOR_BA_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
END_TIMEZONE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FILE_DATE TIMESTAMP(0),
FILE_TIME TIMESTAMP(0),
FILE_TIMEZONE  VARCHAR(20),
PERIOD_COUNT BIGINT,
PERIOD_DURATION DECIMAL(10,5),
PERIOD_DURATION_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECORD_COUNT BIGINT,
REFERENCE_NUM  VARCHAR(30),
REMARK  VARCHAR(2000),
REPORTED_CONTRACTOR_NAME  VARCHAR(255),
REPORTED_RIG_NUM  VARCHAR(255),
SOURCE  VARCHAR(20),
STANDARD_DIGITAL_FORMAT  VARCHAR(20),
START_DATE TIMESTAMP(0),
START_TIME TIMESTAMP(0),
START_TIMEZONE  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
VENDOR_DIGITAL_FORMAT  VARCHAR(20),
VERSION_SEQ_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_SHAKER'
CREATE table well_drill_shaker (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
SHAKER_ID  VARCHAR(20) NOT NULL,
SCREEN_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CATALOGUE_EQUIP_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
NEW_SCREEN_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SCREEN_CHANGE_IND  VARCHAR(1),
SCREEN_LOCATION  VARCHAR(20),
SCREEN_MESH_DESC  VARCHAR(240),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_STATISTIC'
CREATE table well_drill_statistic (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
STATISTIC_TYPE  VARCHAR(20) NOT NULL,
STATISTIC_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CURRENCY_CONVERSION DECIMAL(10,5),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(1024),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
STATISTIC_CODE  VARCHAR(20),
STATISTIC_DATE TIMESTAMP(0),
STATISTIC_TIME TIMESTAMP(0),
STATISTIC_TIMEZONE  VARCHAR(20),
STATISTIC_VALUE DOUBLE PRECISION,
STATISTIC_VALUE_OUOM  VARCHAR(20),
STATISTIC_VALUE_UOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_DRILL_WEATHER'
CREATE table well_drill_weather (
UWI  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
WEATHER_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HEAVE DECIMAL(10,5),
PITCH DECIMAL(10,5),
PPDM_GUID  VARCHAR(38),
RECORDED_TIME TIMESTAMP(0),
RECORDED_TIMEZONE  VARCHAR(20),
REMARK  VARCHAR(2000),
ROAD_CONDITION  VARCHAR(20),
ROLL DECIMAL(10,5),
SOURCE  VARCHAR(20),
SWELL_HEIGHT DECIMAL(10,5),
TEMPERATURE DECIMAL(10,5),
TEMPERATURE_OUOM  VARCHAR(20),
WATER_CONDITION  VARCHAR(20),
WAVE_HEIGHT DECIMAL(10,5),
WEATHER_CONDITION  VARCHAR(20),
WIND_DIRECTION  VARCHAR(20),
WIND_STRENGTH  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_EQUIPMENT'
CREATE table well_equipment (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
EQUIPMENT_ID  VARCHAR(20) NOT NULL,
EQUIP_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTALL_BASE_DEPTH DECIMAL(10,5),
INSTALL_BASE_DEPTH_OUOM  VARCHAR(20),
INSTALL_DATE TIMESTAMP(0),
INSTALL_SEQ_NO INT,
INSTALL_TOP_DEPTH DECIMAL(10,5),
INSTALL_TOP_DEPTH_OUOM  VARCHAR(20),
PARENT_EQUIPMENT_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMOVAL_DATE TIMESTAMP(0),
STRING_ID  VARCHAR(20),
STRING_SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_FACILITY'
CREATE table well_facility (
UWI  VARCHAR(20) NOT NULL,
FACILITY_ID  VARCHAR(20) NOT NULL,
FACILITY_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_USE_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SINGLE_SOURCE_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
STRING_ID  VARCHAR(20),
STRING_SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_GEOMETRY'
CREATE table well_geometry (
UWI  VARCHAR(20) NOT NULL,
GEOMETRY_FORMAT  VARCHAR(20) NOT NULL,
GEOMETRY_ID  VARCHAR(20) NOT NULL,
GEOMETRY_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOMETRY_DATE TIMESTAMP(0),
GEOMETRY_SOURCE  VARCHAR(20),
GEOMETRY_TYPE  VARCHAR(20),
OBJECT_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
WELL_NUMERIC_ID BIGINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_HORIZ_DRILL'
CREATE table well_horiz_drill (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BUILDUP_RADIUS_TYPE  VARCHAR(20),
BUILDUP_RATE_DEGREE DECIMAL(4,2),
BUILDUP_RATE_LENGTH INT,
BUILDUP_RATE_LENGTH_OUOM  VARCHAR(20),
CONTRACTOR  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
HORIZ_DISPLACEMENT INT,
HORIZ_DISPLACEMENT_OUOM  VARCHAR(20),
HORIZ_DRILLING_REASON  VARCHAR(20),
HORIZ_DRILLING_TYPE  VARCHAR(20),
HORIZ_STRAT_UNIT_ID  VARCHAR(20),
LATERAL_HOLE_ID SMALLINT,
LATERAL_HOLE_LENGTH DECIMAL(10,5),
LATERAL_HOLE_LENGTH_OUOM  VARCHAR(20),
MAX_DEVIATION_ANGLE DECIMAL(5,2),
PAY_LENGTH DECIMAL(10,5),
PAY_LENGTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RAT_HOLE_DEPTH DECIMAL(10,5),
RAT_HOLE_DEPTH_OUOM  VARCHAR(20),
RAT_HOLE_DEPTH_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
RESERVOIR  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
WB_LENGTH_IN_FORM DECIMAL(10,5),
WB_LENGTH_IN_FORM_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_HORIZ_DRILL_KOP'
CREATE table well_horiz_drill_kop (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
KICKOFF_POINT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
KICKOFF_POINT_MD DECIMAL(10,5),
KICKOFF_POINT_MD_OUOM  VARCHAR(20),
KICKOFF_POINT_TVD DECIMAL(10,5),
KICKOFF_POINT_TVD_OUOM  VARCHAR(20),
LATERAL_HOLE_ID SMALLINT,
NODE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_HORIZ_DRILL_POE'
CREATE table well_horiz_drill_poe (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
POINT_OF_ENTRY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LATERAL_HOLE_ID SMALLINT,
NODE_ID  VARCHAR(20),
POINT_OF_ENTRY_MD DECIMAL(10,5),
POINT_OF_ENTRY_MD_OUOM  VARCHAR(20),
POINT_OF_ENTRY_STRAT_UNIT  VARCHAR(20),
POINT_OF_ENTRY_TVD DECIMAL(10,5),
POINT_OF_ENTRY_TVD_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRAT_NAME_SET_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_HORIZ_DRILL_SPOKE'
CREATE table well_horiz_drill_spoke (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
KICKOFF_POINT_OBS_NO INT,
SPOKE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LATERAL_HOLE_ID SMALLINT,
NODE_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SPOKE_LENGTH DECIMAL(10,5),
SPOKE_LENGTH_OUOM  VARCHAR(20),
SPOKE_MD DECIMAL(10,5),
SPOKE_MD_OUOM  VARCHAR(20),
SPOKE_TVD DECIMAL(10,5),
SPOKE_TVD_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LICENSE'
CREATE table well_license (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AGENT  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AUTHORIZED_STRAT_UNIT_ID  VARCHAR(20),
BIDDING_ROUND_NUM  VARCHAR(20),
CONTRACTOR  VARCHAR(20),
DIRECTION_TO_LOC DECIMAL(5,2),
DIRECTION_TO_LOC_OUOM  VARCHAR(20),
DISTANCE_REF_POINT  VARCHAR(20),
DISTANCE_TO_LOC DECIMAL(7,2),
DISTANCE_TO_LOC_OUOM  VARCHAR(20),
DRILL_RIG_NUM  VARCHAR(20),
DRILL_SLOT_NO SMALLINT,
DRILL_TOOL  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXCEPTION_GRANTED  VARCHAR(20),
EXCEPTION_REQUESTED  VARCHAR(20),
EXPIRED_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FEES_PAID_IND  VARCHAR(1),
LICENSEE  VARCHAR(20),
LICENSEE_CONTACT_ID  VARCHAR(20),
LICENSE_DATE TIMESTAMP(0),
LICENSE_NUM  VARCHAR(30),
NO_OF_WELLS SMALLINT,
OFFSHORE_COMPLETION_TYPE  VARCHAR(20),
PERMIT_REFERENCE_NUM  VARCHAR(20),
PERMIT_REISSUE_DATE TIMESTAMP(0),
PERMIT_TYPE  VARCHAR(20),
PLATFORM_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROJECTED_DEPTH DECIMAL(10,5),
PROJECTED_DEPTH_OUOM  VARCHAR(20),
PROJECTED_STRAT_UNIT_ID  VARCHAR(20),
PROJECTED_TVD DECIMAL(10,5),
PROJECTED_TVD_OUOM  VARCHAR(20),
PROPOSED_SPUD_DATE TIMESTAMP(0),
PURPOSE  VARCHAR(240),
RATE_SCHEDULE_ID  VARCHAR(20),
REGULATION  VARCHAR(20),
REGULATORY_AGENCY  VARCHAR(20),
REGULATORY_CONTACT_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
RIG_CODE  VARCHAR(20),
RIG_SF_TYPE  VARCHAR(30),
RIG_SUBSTR_HEIGHT DECIMAL(7,2),
RIG_SUBSTR_HEIGHT_OUOM  VARCHAR(20),
RIG_SUPPORT_FACILITY_ID  VARCHAR(20),
RIG_TYPE  VARCHAR(20),
SECTION_OF_REGULATION  VARCHAR(240),
STRAT_NAME_SET_ID  VARCHAR(20),
SURVEYOR  VARCHAR(20),
TARGET_OBJECTIVE_FLUID  VARCHAR(20),
VIOLATION_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LICENSE_ALIAS'
CREATE table well_license_alias (
UWI  VARCHAR(20) NOT NULL,
WELL_LIC_SOURCE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
ALIAS_SOURCE  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE_DOCUMENT  VARCHAR(20),
SW_APPLICATION_ID  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LICENSE_AREA'
CREATE table well_license_area (
UWI  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
WELL_LIC_SOURCE  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LICENSE_COND'
CREATE table well_license_cond (
UWI  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
WELL_LIC_SOURCE  VARCHAR(20) NOT NULL,
CONDITION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_CODE  VARCHAR(20),
CONDITION_TYPE  VARCHAR(20),
CONDITION_VALUE DECIMAL(12,2),
CONDITION_VALUE_OUOM  VARCHAR(20),
CONDITION_VALUE_UOM  VARCHAR(20),
CONTACT_BA_ID  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DESCRIPTION  VARCHAR(240),
DUE_CONDITION  VARCHAR(20),
DUE_DATE TIMESTAMP(0),
DUE_FREQUENCY  VARCHAR(20),
DUE_TERM SMALLINT,
DUE_TERM_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXEMPT_IND  VARCHAR(1),
EXPIRY_DATE TIMESTAMP(0),
FULFILLED_BY_BA_ID  VARCHAR(20),
FULFILLED_DATE TIMESTAMP(0),
FULFILLED_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
PRODUCT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
RESTRICTION_ID  VARCHAR(20),
RESTRICTION_VERSION INT,
SOURCE  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LICENSE_REMARK'
CREATE table well_license_remark (
UWI  VARCHAR(20) NOT NULL,
WELL_LIC_SOURCE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
REMARK_ID  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AUTHOR  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LICENSE_STATUS'
CREATE table well_license_status (
UWI  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
LICENSE_SOURCE  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LICENSE_STATUS  VARCHAR(20),
LICENSE_STATUS_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LICENSE_VIOLATION'
CREATE table well_license_violation (
UWI  VARCHAR(20) NOT NULL,
WELL__LIC_SOURCE  VARCHAR(20) NOT NULL,
LICENSE_ID  VARCHAR(20) NOT NULL,
VIOLATION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CONDITION_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESOLVE_DATE TIMESTAMP(0),
RESOLVE_DESC  VARCHAR(1024),
RESOLVE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
VIOLATION_DATE TIMESTAMP(0),
VIOLATION_DESC  VARCHAR(1024),
VIOLATION_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG'
CREATE table well_log (
UWI  VARCHAR(20) NOT NULL,
WELL_LOG_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACQUIRED_FOR_BA_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BYPASS_IND  VARCHAR(1),
CASED_HOLE_IND  VARCHAR(1),
COMPOSITE_IND  VARCHAR(1),
DEPTH_TYPE  VARCHAR(20),
DICTIONARY_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOG_JOB_ID  VARCHAR(20),
LOG_JOB_SOURCE  VARCHAR(20),
LOG_REF_NUM  VARCHAR(60),
LOG_TITLE  VARCHAR(240),
LOG_TOOL_PASS_NO SMALLINT,
MWD_IND  VARCHAR(1),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TRIP_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_AXIS_COORD'
CREATE table well_log_axis_coord (
UWI  VARCHAR(20) NOT NULL,
CURVE_ID  VARCHAR(20) NOT NULL,
AXIS_ID  VARCHAR(20) NOT NULL,
COORDINATE_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AXIS_VALUE DOUBLE PRECISION,
AXIS_VALUE_OUOM  VARCHAR(20),
AXIS_VALUE_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TEXT_VALUE  VARCHAR(1024),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CLASS'
CREATE table well_log_class (
UWI  VARCHAR(20) NOT NULL,
WELL_LOG_ID  VARCHAR(20) NOT NULL,
WELL_LOG_CLASS  VARCHAR(20) NOT NULL,
WELL_LOG_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PRIMARY_TYPE_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CLS_CRV_CLS'
CREATE table well_log_cls_crv_cls (
WELL_LOG_CLASS  VARCHAR(20) NOT NULL,
CURVE_CLASS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CRV_CLS_XREF'
CREATE table well_log_crv_cls_xref (
PARENT_CURVE_CLASS_ID  VARCHAR(20) NOT NULL,
CHILD_CURVE_CLASS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CURVE'
CREATE table well_log_curve (
UWI  VARCHAR(20) NOT NULL,
CURVE_ID  VARCHAR(20) NOT NULL,
ACQUIRED_FOR_BA_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
API_CODE_SYSTEM  VARCHAR(20),
API_CURVE_CLASS SMALLINT,
API_CURVE_CODE SMALLINT,
API_CURVE_MODIFIER SMALLINT,
API_LOG_CODE SMALLINT,
BASE_CURVE_IND  VARCHAR(1),
BYPASS_IND  VARCHAR(1),
CASED_HOLE_IND  VARCHAR(1),
COMPOSITE_IND  VARCHAR(1),
CURVE_OUOM  VARCHAR(20),
CURVE_OUTPUT_TYPE  VARCHAR(20),
CURVE_QUALITY  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
DICTIONARY_ID  VARCHAR(20),
DICT_CURVE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
EXPLICIT_INDEX_IND  VARCHAR(1),
FIRST_GOOD_VALUE DOUBLE PRECISION,
FIRST_GOOD_VALUE_INDEX DOUBLE PRECISION,
FRAME_ID  VARCHAR(20),
GOOD_VALUE_TYPE  VARCHAR(20),
INDEX_CURVE_ID  VARCHAR(20),
INDEX_OUOM  VARCHAR(20),
INDEX_UOM  VARCHAR(20),
JOB_ID  VARCHAR(20),
LAST_GOOD_VALUE DOUBLE PRECISION,
LAST_GOOD_VALUE_INDEX DOUBLE PRECISION,
LOG_TOOL_PASS_NO SMALLINT,
LOG_TOOL_TYPE  VARCHAR(20),
MAX_INDEX DOUBLE PRECISION,
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_INDEX DOUBLE PRECISION,
MEAN_VALUE DOUBLE PRECISION,
MEAN_VALUE_STD_DEV DOUBLE PRECISION,
MIN_INDEX DOUBLE PRECISION,
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_INDEX DOUBLE PRECISION,
MULTIPLE_INDEX_IND  VARCHAR(1),
MWD_IND  VARCHAR(1),
NULL_COUNT BIGINT,
NULL_REPRESENTATION  VARCHAR(20),
ORDER_SEQ_NO INT,
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PRIMARY_INDEX_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORTED_DESC  VARCHAR(2000),
REPORTED_MNEMONIC  VARCHAR(255),
REPORTED_UNIT_MNEMONIC  VARCHAR(255),
SOURCE  VARCHAR(20),
TRIP_OBS_NO INT,
VALUE_COUNT BIGINT,
WELL_LOG_ID  VARCHAR(20),
WELL_LOG_JOB_SOURCE  VARCHAR(20),
WELL_LOG_SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CURVE_AXIS'
CREATE table well_log_curve_axis (
UWI  VARCHAR(20) NOT NULL,
CURVE_ID  VARCHAR(20) NOT NULL,
AXIS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AXIS_OUOM  VARCHAR(20),
AXIS_SEQ_NO INT,
AXIS_UOM  VARCHAR(20),
DIMENSION_COUNT BIGINT,
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_AXIS_NAME  VARCHAR(255),
REPORTED_AXIS_OBJECT_NAME  VARCHAR(255),
SOURCE  VARCHAR(20),
SPACING DOUBLE PRECISION,
SPACING_OUOM  VARCHAR(20),
SPACING_UOM  VARCHAR(20),
VALUE_COUNT BIGINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CURVE_CLASS'
CREATE table well_log_curve_class (
CURVE_CLASS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CLASS_MNEMONIC  VARCHAR(255),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
QUANTITY_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SYSTEM_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CURVE_FRAME'
CREATE table well_log_curve_frame (
UWI  VARCHAR(20) NOT NULL,
WELL_LOG_ID  VARCHAR(20) NOT NULL,
WELL_LOG_SOURCE  VARCHAR(20) NOT NULL,
FRAME_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
DATE_FORMAT_DESC  VARCHAR(20),
DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FRAME_NAME  VARCHAR(255),
FRAME_SPACING DOUBLE PRECISION,
FRAME_SPACING_OUOM  VARCHAR(20),
FRAME_SPACING_UOM  VARCHAR(20),
GAPS_IND  VARCHAR(1),
INDEX_OUOM  VARCHAR(20),
INDEX_UOM  VARCHAR(20),
IRREGULAR_DESC  VARCHAR(240),
IRREGULAR_IND  VARCHAR(1),
LOG_DIRECTION  VARCHAR(20),
MAX_INDEX DOUBLE PRECISION,
MIN_INDEX DOUBLE PRECISION,
PPDM_GUID  VARCHAR(38),
PRIMARY_INDEX_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CURVE_PROC'
CREATE table well_log_curve_proc (
UWI  VARCHAR(20) NOT NULL,
CURVE_ID  VARCHAR(20) NOT NULL,
PROCESS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DICTIONARY_ID  VARCHAR(20),
DICT_PROCESS_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_MNEMONIC  VARCHAR(255),
SOURCE  VARCHAR(20),
SPLICE_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CURVE_REMARK'
CREATE table well_log_curve_remark (
UWI  VARCHAR(20) NOT NULL,
CURVE_ID  VARCHAR(20) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
REMARK_USE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CURVE_SCALE'
CREATE table well_log_curve_scale (
UWI  VARCHAR(20) NOT NULL,
CURVE_ID  VARCHAR(20) NOT NULL,
DIGITAL_CURVE_ID  VARCHAR(20) NOT NULL,
CURVE_SCALE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BACKUP_CURVE_SCALE  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LEFT_SCALE_VALUE DECIMAL(9,4),
MATRIX_LITHOLOGY_SETTING  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RIGHT_SCALE_VALUE DECIMAL(9,4),
SCALE_TRANSFORM_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TRACK_NUM  VARCHAR(30),
TRACK_WIDTH DECIMAL(10,5),
TRACK_WIDTH_OUOM  VARCHAR(20),
TRACK_WIDTH_UOM  VARCHAR(20),
VERTICAL_SCALE_RATIO  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CURVE_SPLICE'
CREATE table well_log_curve_splice (
UWI  VARCHAR(20) NOT NULL,
CURVE_ID  VARCHAR(20) NOT NULL,
SPLICE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CREATED_BY_BA_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
MAX_VALUE_INDEX DOUBLE PRECISION,
MIN_VALUE_INDEX DOUBLE PRECISION,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_CURVE_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_CURVE_VALUE'
CREATE table well_log_curve_value (
UWI  VARCHAR(20) NOT NULL,
CURVE_ID  VARCHAR(20) NOT NULL,
SAMPLE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INDEX_TYPE  VARCHAR(20),
INDEX_VALUE DOUBLE PRECISION,
INDEX_VALUE_UOM  VARCHAR(20),
MEASURED_VALUE DOUBLE PRECISION,
MEASURED_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DGTZ_CURVE'
CREATE table well_log_dgtz_curve (
UWI  VARCHAR(20) NOT NULL,
CURVE_ID  VARCHAR(20) NOT NULL,
DIGITAL_CURVE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
CURVE_QUALITY  VARCHAR(20),
DEPTH_CORRECTION_METHOD  VARCHAR(20),
DEPTH_INCREMENT DECIMAL(7,2),
DEPTH_INCREMENT_OUOM  VARCHAR(20),
DIGITIZED_DATE TIMESTAMP(0),
DIGITIZER  VARCHAR(60),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
NULL_VALUE DECIMAL(9,4),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DICTIONARY'
CREATE table well_log_dictionary (
DICTIONARY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OWNED_BY_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VERSION_OBS_NO INT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DICT_ALIAS'
CREATE table well_log_dict_alias (
DICTIONARY_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DICT_BA'
CREATE table well_log_dict_ba (
DICTIONARY_ID  VARCHAR(20) NOT NULL,
USE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PREFERRED_NAME  VARCHAR(255),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
USED_BY_BA_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DICT_CRV_CLS'
CREATE table well_log_dict_crv_cls (
CURVE_CLASS_ID  VARCHAR(20) NOT NULL,
DICTIONARY_ID  VARCHAR(20) NOT NULL,
DICT_CURVE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DICT_CURVE'
CREATE table well_log_dict_curve (
DICTIONARY_ID  VARCHAR(20) NOT NULL,
DICT_CURVE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(240),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MNEMONIC  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DICT_PARM'
CREATE table well_log_dict_parm (
DICTIONARY_ID  VARCHAR(20) NOT NULL,
PARAMETER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MNEMONIC  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
QUANTITY_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DICT_PARM_CLS'
CREATE table well_log_dict_parm_cls (
DICTIONARY_ID  VARCHAR(20) NOT NULL,
PARAMETER_ID  VARCHAR(20) NOT NULL,
PARAMETER_CLASS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DICT_PARM_VAL'
CREATE table well_log_dict_parm_val (
DICTIONARY_ID  VARCHAR(20) NOT NULL,
PARAMETER_ID  VARCHAR(20) NOT NULL,
VALUE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VALUE_MNEMONIC  VARCHAR(255),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_DICT_PROC'
CREATE table well_log_dict_proc (
DICTIONARY_ID  VARCHAR(20) NOT NULL,
PROCESS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MNEMONIC  VARCHAR(255),
NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_JOB'
CREATE table well_log_job (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
JOB_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CASING_SHOE_DEPTH DECIMAL(10,5),
CASING_SHOE_DEPTH_OUOM  VARCHAR(20),
DRILLING_MD DECIMAL(10,5),
DRILLING_MD_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
END_DATE TIMESTAMP(0),
ENGINEER  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LOGGING_COMPANY  VARCHAR(20),
LOGGING_UNIT  VARCHAR(20),
LOGGING_UNIT_BASE  VARCHAR(20),
OBSERVER  VARCHAR(60),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
START_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_PARM'
CREATE table well_log_parm (
UWI  VARCHAR(20) NOT NULL,
WELL_LOG_ID  VARCHAR(20) NOT NULL,
WELL_LOG_SOURCE  VARCHAR(20) NOT NULL,
PARAMETER_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
ARRAY_IND  VARCHAR(1),
DESCRIPTION  VARCHAR(1024),
DICTIONARY_ID  VARCHAR(20),
DICT_PARAMETER_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_OUTPUT  VARCHAR(20),
PARAMETER_TEXT_VALUE  VARCHAR(1024),
PARAMETER_VALUE DOUBLE PRECISION,
PARAMETER_VALUE_OUOM  VARCHAR(20),
PARAMETER_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_DESC  VARCHAR(1024),
REPORTED_MNEMONIC  VARCHAR(255),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_PARM_ARRAY'
CREATE table well_log_parm_array (
UWI  VARCHAR(20) NOT NULL,
WELL_LOG_ID  VARCHAR(20) NOT NULL,
WELL_LOG_SOURCE  VARCHAR(20) NOT NULL,
PARAMETER_SEQ_NO INT,
ELEMENT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
DIMENSION  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEMENT_NUM  VARCHAR(60),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER_TEXT_VALUE  VARCHAR(1024),
PARAMETER_VALUE DOUBLE PRECISION,
PARAMETER_VALUE_OUOM  VARCHAR(20),
PARAMETER_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_PARM_CLASS'
CREATE table well_log_parm_class (
PARAMETER_CLASS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CLASS_NAME  VARCHAR(255),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
QUANTITY_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_PASS'
CREATE table well_log_pass (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
JOB_ID  VARCHAR(20) NOT NULL,
TRIP_OBS_NO INT,
LOG_TOOL_PASS_NO SMALLINT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_LOG_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
START_TIME TIMESTAMP(0),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_REMARK'
CREATE table well_log_remark (
UWI  VARCHAR(20) NOT NULL,
WELL_LOG_ID  VARCHAR(20) NOT NULL,
WELL_LOG_SOURCE  VARCHAR(20) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MADE_BY_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
REMARK_USE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_TRIP'
CREATE table well_log_trip (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
JOB_ID  VARCHAR(20) NOT NULL,
TRIP_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LOGGING_SERVICE_TYPE  VARCHAR(20),
MAX_DEPTH DECIMAL(10,5),
MAX_DEPTH_OUOM  VARCHAR(20),
MAX_TEMPERATURE DECIMAL(5,2),
MAX_TEMPERATURE_OUOM  VARCHAR(20),
MUD_SAMPLE_ID  VARCHAR(20),
MUD_SAMPLE_TYPE  VARCHAR(20),
MUD_SOURCE  VARCHAR(20),
OBSERVER  VARCHAR(60),
ON_BOTTOM_DATE TIMESTAMP(0),
ON_BOTTOM_TIME  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
REPORT_APD DECIMAL(10,5),
REPORT_LOG_DATUM  VARCHAR(20),
REPORT_LOG_DATUM_ELEV DECIMAL(10,5),
REPORT_LOG_DATUM_ELEV_OUOM  VARCHAR(20),
REPORT_LOG_RUN  VARCHAR(5),
REPORT_PERM_DATUM  VARCHAR(20),
REPORT_PERM_DATUM_ELEV DECIMAL(10,5),
REPORT_PERM_DATUM_ELEV_OUOM  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
TRIP_DATE TIMESTAMP(0),
TUBING_BOTTOM_DEPTH DECIMAL(10,5),
TUBING_BOTTOM_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_LOG_TRIP_REMARK'
CREATE table well_log_trip_remark (
UWI  VARCHAR(20) NOT NULL,
JOB_SOURCE  VARCHAR(20) NOT NULL,
JOB_ID  VARCHAR(20) NOT NULL,
TRIP_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_MISC_DATA'
CREATE table well_misc_data (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
MISC_DATA_TYPE  VARCHAR(20) NOT NULL,
MISC_DATA_OBS_NO  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COST DECIMAL(12,2),
CURRENCY_CONVERSION DECIMAL(10,5),
CURRENCY_OUOM  VARCHAR(20),
CURRENCY_UOM  VARCHAR(20),
DATA_VALUE DOUBLE PRECISION,
DATA_VALUE_OUOM  VARCHAR(20),
DATA_VALUE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_DATE TIMESTAMP(0),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
MISC_DATA_CODE  VARCHAR(20),
MISC_DATA_DESC  VARCHAR(1024),
PPDM_GUID  VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM  VARCHAR(20),
REFERENCE_VALUE_TYPE  VARCHAR(20),
REFERENCE_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_MUD_PROPERTY'
CREATE table well_mud_property (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
SAMPLE_ID  VARCHAR(20) NOT NULL,
PROPERTY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
AVERAGE_VALUE DOUBLE PRECISION,
AVERAGE_VALUE_OUOM  VARCHAR(20),
AVERAGE_VALUE_UOM  VARCHAR(20),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_VALUE DOUBLE PRECISION,
MAX_VALUE_OUOM  VARCHAR(20),
MAX_VALUE_UOM  VARCHAR(20),
MIN_VALUE DOUBLE PRECISION,
MIN_VALUE_OUOM  VARCHAR(20),
MIN_VALUE_UOM  VARCHAR(20),
MUD_PROPERTY  VARCHAR(20),
MUD_PROPERTY_CODE  VARCHAR(20),
MUD_PROPERTY_DESC  VARCHAR(1024),
MUD_PROPERTY_REF  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_VALUE DOUBLE PRECISION,
REFERENCE_VALUE_OUOM  VARCHAR(20),
REFERENCE_VALUE_UOM  VARCHAR(20),
REMARK  VARCHAR(2000),
SAMPLE_ANALYSIS_ID  VARCHAR(20),
SAMPLE_ANALYSIS_SOURCE  VARCHAR(20),
SAMPLE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_MUD_RESISTIVITY'
CREATE table well_mud_resistivity (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
SAMPLE_ID  VARCHAR(20) NOT NULL,
RESISTIVITY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MUD_RESISTIVITY DECIMAL(8,4),
MUD_RESISTIVITY_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESISTIVITY_TEMPERATURE DECIMAL(5,2),
RESISTIVITY_TEMPERATURE_OUOM  VARCHAR(20),
SAMPLE_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_MUD_SAMPLE'
CREATE table well_mud_sample (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
SAMPLE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
CIRCULATION_STOP_DATE TIMESTAMP(0),
CIRCULATION_STOP_TIME  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUID_FLOW DECIMAL(10,5),
FLUID_FLOW_OUOM  VARCHAR(20),
FLUID_LOSS DECIMAL(6,4),
FLUID_LOSS_OUOM  VARCHAR(20),
MUD_COLLECT_REASON  VARCHAR(20),
MUD_DENSITY DECIMAL(9,4),
MUD_DENSITY_OUOM  VARCHAR(20),
MUD_DENSITY_UOM  VARCHAR(20),
MUD_PH DECIMAL(7,4),
MUD_SAMPLE_TYPE  VARCHAR(20),
MUD_TYPE  VARCHAR(20),
MUD_VISCOSITY DECIMAL(8,3),
MUD_VISCOSITY_OUOM  VARCHAR(20),
PERIOD_OBS_NO INT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_DEPTH DECIMAL(10,5),
SAMPLE_DEPTH_OUOM  VARCHAR(20),
SAMPLE_TIME TIMESTAMP(0),
SOURCE_LOCATION  VARCHAR(20),
TIME_SINCE_CIRC DECIMAL(10,5),
TIME_SINCE_CIRC_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_NODE'
CREATE table well_node (
NODE_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COORDINATE_QUALITY  VARCHAR(20),
COORD_ACQUISITION_ID  VARCHAR(20),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_QUALITY  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
NODE_NUMERIC_ID BIGINT,
NODE_POSITION  VARCHAR(20),
ORIGINAL_OBS_NO INT,
ORIGINAL_XY_UOM  VARCHAR(20),
PLATFORM_ID  VARCHAR(20),
PLATFORM_SF_TYPE  VARCHAR(30),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SELECTED_OBS_NO INT,
SOURCE  VARCHAR(20),
UWI  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_NODE_AREA'
CREATE table well_node_area (
NODE_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
AREA_ID  VARCHAR(20) NOT NULL,
AREA_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_NODE_GEOMETRY'
CREATE table well_node_geometry (
NODE_ID  VARCHAR(20) NOT NULL,
GEOMETRY_FORMAT  VARCHAR(20) NOT NULL,
GEOMETRY_ID  VARCHAR(20) NOT NULL,
GEOMETRY_OBS_NO INT,
ACQUISITION_ID  VARCHAR(20),
ACTIVE_IND  VARCHAR(1),
COORD_SYSTEM_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GEOMETRY_DATE TIMESTAMP(0),
GEOMETRY_SOURCE  VARCHAR(20),
GEOMETRY_TYPE  VARCHAR(20),
NODE_NUMERIC_ID BIGINT,
OBJECT_SOURCE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_NODE_M_B'
CREATE table well_node_m_b (
NODE_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
DLS_ROAD_ALLOWANCE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EW_DIRECTION  VARCHAR(20),
EW_DISTANCE DECIMAL(7,2),
EW_DISTANCE_OUOM  VARCHAR(20),
EW_START_LINE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
LOCATION_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
NS_DISTANCE DECIMAL(7,2),
NS_DISTANCE_OUOM  VARCHAR(20),
NS_START_LINE  VARCHAR(20),
ORIENTATION  VARCHAR(20),
PARCEL_CARTER_ID  VARCHAR(20),
PARCEL_CONGRESS_ID  VARCHAR(20),
PARCEL_DLS_ID  VARCHAR(20),
PARCEL_FPS_ID  VARCHAR(20),
PARCEL_LIBYA_ID  VARCHAR(20),
PARCEL_NE_LOC_ID  VARCHAR(20),
PARCEL_NORTH_SEA_ID  VARCHAR(20),
PARCEL_NTS_ID  VARCHAR(20),
PARCEL_OFFSHORE_ID  VARCHAR(20),
PARCEL_OHIO_ID  VARCHAR(20),
PARCEL_PBL_ID  VARCHAR(20),
PARCEL_TEXAS  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_LOC  VARCHAR(20),
REMARK  VARCHAR(2000),
SURFACE_LOC  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_NODE_STRAT_UNIT'
CREATE table well_node_strat_unit (
UWI  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
INTERP_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_OFFSET_TVD DECIMAL(10,5),
BASE_OFFSET_TVD_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERPRETER_BA_ID  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
NODE_ID  VARCHAR(20),
NODE_POSITION  VARCHAR(20),
PICK_DATE TIMESTAMP(0),
PICK_DEPTH DECIMAL(10,5),
PICK_DEPTH_OUOM  VARCHAR(20),
PICK_LOCATION  VARCHAR(20),
PICK_METHOD  VARCHAR(20),
PICK_METHOD_DESC  VARCHAR(240),
PICK_QUALITY  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
TOP_OFFSET_TVD DECIMAL(10,5),
TOP_OFFSET_TVD_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_NODE_VERSION'
CREATE table well_node_version (
NODE_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
NODE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
COORD_ACQUISITION_ID  VARCHAR(20),
COORDINATE_QUALITY  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EASTING DECIMAL(15,7),
EASTING_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV DECIMAL(10,5),
ELEV_OUOM  VARCHAR(20),
EW_DIRECTION  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
GEOG_COORD_SYSTEM_ID  VARCHAR(20),
LATITUDE DECIMAL(14,9),
LEGAL_SURVEY_TYPE  VARCHAR(20),
LOCAL_COORD_SYSTEM_ID  VARCHAR(20),
LOCATION_QUALIFIER  VARCHAR(20),
LOCATION_QUALITY  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
LONGITUDE DECIMAL(14,9),
MAP_COORD_SYSTEM_ID  VARCHAR(20),
MD DECIMAL(10,5),
MD_OUOM  VARCHAR(20),
MONUMENT_ID  VARCHAR(20),
MONUMENT_SF_TYPE  VARCHAR(30),
NODE_POSITION  VARCHAR(20),
NORTHING DECIMAL(15,7),
NORTHING_OUOM  VARCHAR(20),
NORTH_TYPE  VARCHAR(20),
NS_DIRECTION  VARCHAR(20),
ORIGINAL_XY_UOM  VARCHAR(20),
PLATFORM_ID  VARCHAR(20),
PLATFORM_SF_TYPE  VARCHAR(30),
POLAR_AZIMUTH DECIMAL(10,6),
POLAR_OFFSET DECIMAL(8,2),
POLAR_OFFSET_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
UWI  VARCHAR(20),
VERSION_TYPE  VARCHAR(20),
X_OFFSET DECIMAL(15,2),
X_OFFSET_OUOM  VARCHAR(20),
Y_OFFSET DECIMAL(15,2),
Y_OFFSET_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_PAYZONE'
CREATE table well_payzone (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ZONE_ID  VARCHAR(20) NOT NULL,
ZONE_SOURCE  VARCHAR(20) NOT NULL,
PAYZONE_TYPE  VARCHAR(20) NOT NULL,
FLUID_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_OIL_CONTACT_DEPTH DECIMAL(10,5),
GAS_OIL_CONTACT_DEPTH_OUOM  VARCHAR(20),
GAS_WTR_CONTACT_DEPTH DECIMAL(10,5),
GAS_WTR_CONTACT_DEPTH_OUOM  VARCHAR(20),
GROSS_PAY DECIMAL(12,2),
GROSS_PAY_OUOM  VARCHAR(20),
NET_PAY DECIMAL(12,2),
NET_PAY_OUOM  VARCHAR(20),
OIL_WTR_CONTACT_DEPTH DECIMAL(10,5),
OIL_WTR_CONTACT_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_PERFORATION'
CREATE table well_perforation (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
PERFORATION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
COMPLETION_OBS_NO INT,
COMPLETION_SOURCE  VARCHAR(20),
COMPLETION_STATUS  VARCHAR(20),
COMPLETION_STATUS_TYPE  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERFORATION_ANGLE SMALLINT,
PERFORATION_BA_ID  VARCHAR(20),
PERFORATION_COUNT DECIMAL(7,2),
PERFORATION_DATE TIMESTAMP(0),
PERFORATION_DENSITY DECIMAL(5,1),
PERFORATION_DIAMETER DECIMAL(8,3),
PERFORATION_DIAMETER_OUOM  VARCHAR(20),
PERFORATION_METHOD  VARCHAR(20),
PERFORATION_PER_UOM  VARCHAR(20),
PERFORATION_PHASE  VARCHAR(20),
PERFORATION_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_PERF_REMARK'
CREATE table well_perf_remark (
UWI  VARCHAR(20) NOT NULL,
PERFORATION_SOURCE  VARCHAR(20) NOT NULL,
PERFORATION_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_BA_ID  VARCHAR(20),
REMARK_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_PERMIT_TYPE'
CREATE table well_permit_type (
GRANTED_BY_BA_ID  VARCHAR(20) NOT NULL,
PERMIT_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
RATE_SCHEDULE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_PLUGBACK'
CREATE table well_plugback (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
PLUGBACK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
CEMENT_AMOUNT DECIMAL(7,2),
CEMENT_AMOUNT_OUOM  VARCHAR(20),
CEMENT_AMOUNT_UOM  VARCHAR(20),
COMPLETION_OBS_NO INT,
COMPLETION_SOURCE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLUGBACK_BA_ID  VARCHAR(20),
PLUGBACK_DATE TIMESTAMP(0),
PLUG_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRAT_NAME_SET_ID  VARCHAR(20),
SURFACE_ABANDON_DATE TIMESTAMP(0),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_FOUND_DEPTH DECIMAL(10,5),
TOP_FOUND_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_POROUS_INTERVAL'
CREATE table well_porous_interval (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
POROUS_INTERVAL_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
AVERAGE_POROSITY DECIMAL(9,4),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_TVD DECIMAL(10,5),
BASE_TVD_OUOM  VARCHAR(20),
CORE_SAMPLE_LENGTH DECIMAL(10,5),
CORE_SAMPLE_LENGTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_SHOW_IND  VARCHAR(1),
GROSS_THICKNESS DECIMAL(10,5),
GROSS_THICKNESS_OUOM  VARCHAR(20),
NET_THICKNESS DECIMAL(10,5),
NET_THICKNESS_OUOM  VARCHAR(20),
OIL_SHOW_IND  VARCHAR(1),
POROSITY_CUTOFF DECIMAL(9,4),
POROSITY_QUALITY  VARCHAR(20),
POROSITY_TYPE  VARCHAR(20),
POROUS_FORM_AGE  VARCHAR(20),
POROUS_STRAT_UNIT_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRAT_AGE  VARCHAR(20),
STRAT_AGE_NAME_SET_ID  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_TVD DECIMAL(10,5),
TOP_TVD_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_PRESSURE'
CREATE table well_pressure (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
PRESSURE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ASSIGNED_FIELD  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EVENT_OBS_NO INT,
EVENT_SOURCE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FLOW_CASING_PRESSURE DECIMAL(8,2),
FLOW_CASING_PRESSURE_OUOM  VARCHAR(20),
FLOW_TUBING_PRESSURE DECIMAL(8,2),
FLOW_TUBING_PRESSURE_OUOM  VARCHAR(20),
INIT_RESERVOIR_PRESSURE DECIMAL(8,2),
INIT_RESERVOIR_PRESS_OUOM  VARCHAR(20),
POOL  VARCHAR(20),
POOL_DATUM  VARCHAR(20),
POOL_DATUM_DEPTH DECIMAL(10,5),
POOL_DATUM_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
REMARK  VARCHAR(2000),
SHUTIN_CASING_PRESSURE DECIMAL(8,2),
SHUTIN_CASING_PRESSURE_OUOM  VARCHAR(20),
SHUTIN_TUBING_PRESSURE DECIMAL(8,2),
SHUTIN_TUBING_PRESSURE_OUOM  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
WELL_DATUM_DEPTH DECIMAL(10,5),
WELL_DATUM_OUOM  VARCHAR(20),
WELL_TEST_NUM  VARCHAR(4),
WELL_TEST_RUN_NUM  VARCHAR(4),
WELL_TEST_SOURCE  VARCHAR(20),
WELL_TEST_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_PRESSURE_AOF'
CREATE table well_pressure_aof (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
PRESSURE_OBS_NO INT,
AOF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_TYPE  VARCHAR(20),
AOF_CALCULATE_METHOD  VARCHAR(20),
AOF_POTENTIAL DECIMAL(12,2),
AOF_POTENTIAL_OUOM  VARCHAR(20),
AOF_SLOPE DECIMAL(5,2),
BOTTOM_HOLE_PRESSURE_METHOD  VARCHAR(20),
CAOF_RATE DECIMAL(10,2),
CAOF_RATE_OUOM  VARCHAR(20),
CHOKE_SIZE_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_PERIOD_DURATION DECIMAL(7,2),
FLOW_PERIOD_DURATION_OUOM  VARCHAR(20),
FLOW_PRESSURE DECIMAL(8,2),
FLOW_PRESSURE_OUOM  VARCHAR(20),
FLOW_RATE DECIMAL(8,2),
FLOW_RATE_OUOM  VARCHAR(20),
FOUR_POINT_CAOF_RATE DECIMAL(10,2),
FOUR_POINT_CAOF_RATE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESERVOIR_PRESSURE DECIMAL(8,2),
RESERVOIR_PRESSURE_OUOM  VARCHAR(20),
SHUTIN_PRESSURE_TYPE  VARCHAR(20),
TEST_DATE TIMESTAMP(0),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_PRESSURE_AOF_4PT'
CREATE table well_pressure_aof_4pt (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
PRESSURE_OBS_NO INT,
AOF_OBS_NO INT,
POINT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BHFP DECIMAL(8,2),
BHFP_OUOM  VARCHAR(20),
CHOKE_SIZE_DESC  VARCHAR(20),
CONDENSATE_FLOW_RATE DECIMAL(8,2),
CONDENSATE_FLOW_RATE_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_SHUTIN_PRESSURE DECIMAL(8,2),
FINAL_SHUTIN_PRESSURE_OUOM  VARCHAR(20),
FLOW_DURATION DECIMAL(7,2),
FLOW_DURATION_OUOM  VARCHAR(20),
FLOW_PRESSURE DECIMAL(8,2),
FLOW_PRESSURE_OUOM  VARCHAR(20),
FLOW_RATE DECIMAL(8,2),
FLOW_RATE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
WATER_FLOW_RATE DECIMAL(8,2),
WATER_FLOW_RATE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_PRESSURE_BH'
CREATE table well_pressure_bh (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
PRESSURE_OBS_NO INT,
BHP_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BHFP DECIMAL(8,2),
BHFP_OUOM  VARCHAR(20),
BHP_METHOD  VARCHAR(20),
BH_TEST_CODE  VARCHAR(20),
DATUM_PRESSURE DECIMAL(8,2),
DATUM_PRESSURE_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PACKER_DEPTH DECIMAL(10,5),
PACKER_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRESSURE_GRADIENT DECIMAL(8,2),
PRESSURE_GRADIENT_OUOM  VARCHAR(20),
RECORDER_DATUM DECIMAL(10,5),
RECORDER_DATUM_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORTED_RUN_TVD DECIMAL(10,5),
REPORTED_RUN_TVD_OUOM  VARCHAR(20),
RUN_DEPTH DECIMAL(10,5),
RUN_DEPTH_OUOM  VARCHAR(20),
RUN_DEPTH_TEMPERATURE DECIMAL(5,2),
RUN_DEPTH_TEMPERATURE_OUOM  VARCHAR(20),
SHUTIN_PERIOD DECIMAL(7,2),
SHUTIN_PERIOD_OUOM  VARCHAR(20),
SURVEY_DATE TIMESTAMP(0),
TEST_DURATION DECIMAL(7,2),
TEST_DURATION_OUOM  VARCHAR(20),
TUBING_SIZE_DESC  VARCHAR(20),
WELL_HEAD_PRESSURE DECIMAL(8,2),
WELL_HEAD_PRESSURE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_REMARK'
CREATE table well_remark (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
REMARK_TYPE  VARCHAR(20) NOT NULL,
REMARK_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_DATE TIMESTAMP(0),
REMARK_STRAT_UNIT_ID  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_SHOW'
CREATE table well_show (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
SHOW_TYPE  VARCHAR(20) NOT NULL,
SHOW_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LITHOLOGY_DESC  VARCHAR(240),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RESERVOIR_IND  VARCHAR(1),
SAMPLE_TYPE  VARCHAR(20),
SHOW_SYMBOL  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_SHOW_REMARK'
CREATE table well_show_remark (
UWI  VARCHAR(20) NOT NULL,
SHOW_SOURCE  VARCHAR(20) NOT NULL,
SHOW_TYPE  VARCHAR(20) NOT NULL,
SHOW_OBS_NO INT,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_BA_ID  VARCHAR(20),
REMARK_DATE TIMESTAMP(0),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_SIEVE_ANALYSIS'
CREATE table well_sieve_analysis (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_DATE TIMESTAMP(0),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INTERVAL_DEPTH DECIMAL(10,5),
INTERVAL_DEPTH_OUOM  VARCHAR(20),
INTERVAL_LENGTH DECIMAL(10,5),
INTERVAL_LENGTH_OUOM  VARCHAR(20),
LABORATORY  VARCHAR(20),
LAB_FILE_NUM  VARCHAR(15),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_SIEVE_SCREEN'
CREATE table well_sieve_screen (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
SCREEN_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CAT_EQUIP_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PARTICLE_HELD_COUNT SMALLINT,
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SCREEN_MESH_SIZE SMALLINT,
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_STATUS'
CREATE table well_status (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
STATUS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_TIME TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERCENT_CAPABILITY DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
START_TIME TIMESTAMP(0),
STATUS  VARCHAR(20),
STATUS_DATE TIMESTAMP(0),
STATUS_DEPTH DECIMAL(10,5),
STATUS_DEPTH_OUOM  VARCHAR(20),
STATUS_TYPE  VARCHAR(20),
TIMEZONE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_SUPPORT_FACILITY'
CREATE table well_support_facility (
UWI  VARCHAR(20) NOT NULL,
SUPPORT_FACILITY_ID  VARCHAR(20) NOT NULL,
SF_TYPE  VARCHAR(30) NOT NULL,
SF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DEPTH_DATUM  VARCHAR(20),
DEPTH_DATUM_ELEV DECIMAL(10,5),
DEPTH_DATUM_ELEV_OUOM  VARCHAR(20),
DERRICK_FLOOR_ELEV DECIMAL(10,5),
DERRICK_FLOOR_ELEV_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV_REF_DATUM  VARCHAR(20),
ENVIRONMENT_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
KB_ELEV DECIMAL(10,5),
KB_ELEV_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RIG_ON_SITE_DATE TIMESTAMP(0),
RIG_RELEASE_DATE TIMESTAMP(0),
ROTARY_TABLE_ELEV DECIMAL(10,5),
ROTARY_TABLE_ELEV_OUOM  VARCHAR(20),
SF_USE_TYPE  VARCHAR(20),
SOURCE  VARCHAR(20),
SUBSEA_ELEV_REF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST'
CREATE table well_test (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
BHP_Z DECIMAL(10,5),
BOTTOM_CHOKE_DESC  VARCHAR(20),
BSW_PERCENT DECIMAL(10,6),
CALIPER_HOLE_DIAMETER DECIMAL(8,3),
CALIPER_HOLE_DIAMETER_OUOM  VARCHAR(20),
CASED_HOLE_IND  VARCHAR(1),
CASING_PRESSURE DECIMAL(8,2),
CASING_PRESSURE_OUOM  VARCHAR(20),
CHOKE_SIZE_DESC  VARCHAR(20),
COMPLETION_OBS_NO INT,
COMPLETION_SOURCE  VARCHAR(20),
CONDENSATE_AMOUNT_PERCENT DECIMAL(5,2),
CONDENSATE_FLOW_AMOUNT DECIMAL(12,2),
CONDENSATE_FLOW_AMOUNT_OUOM  VARCHAR(20),
CONDENSATE_FLOW_AMOUNT_UOM  VARCHAR(20),
CONDENSATE_GRAVITY DECIMAL(7,3),
CONDENSATE_RATIO DECIMAL(15,6),
CONDENSATE_RATIO_OUOM  VARCHAR(20),
DAMAGE_QUALITY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EVENT_OBS_NO INT,
EVENT_SOURCE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FLOW_PRESSURE DECIMAL(8,2),
FLOW_PRESSURE_OUOM  VARCHAR(20),
FLOW_TEMPERATURE DECIMAL(5,2),
FLOW_TEMPERATURE_OUOM  VARCHAR(20),
GAS_FLOW_AMOUNT DECIMAL(12,2),
GAS_FLOW_AMOUNT_OUOM  VARCHAR(20),
GAS_FLOW_AMOUNT_UOM  VARCHAR(20),
GAS_GRAVITY DECIMAL(7,3),
GOR DECIMAL(15,6),
GOR_OUOM  VARCHAR(20),
H2S_PERCENT DECIMAL(10,6),
HOLE_CONDITION  VARCHAR(20),
MAX_CONDENS_FLOW_RATE DECIMAL(12,2),
MAX_CONDENS_FLOW_RATE_OUOM  VARCHAR(20),
MAX_GAS_FLOW_RATE DECIMAL(12,2),
MAX_GAS_FLOW_RATE_OUOM  VARCHAR(20),
MAX_HYDROSTATIC_PRESSURE DECIMAL(8,2),
MAX_HYDROSTATIC_PRESS_OUOM  VARCHAR(20),
MAX_OIL_FLOW_RATE DECIMAL(12,2),
MAX_OIL_FLOW_RATE_OUOM  VARCHAR(20),
MAX_WATER_FLOW_RATE DECIMAL(12,2),
MAX_WATER_FLOW_RATE_OUOM  VARCHAR(20),
OIL_AMOUNT_PERCENT DECIMAL(5,2),
OIL_FLOW_AMOUNT DECIMAL(12,2),
OIL_FLOW_AMOUNT_OUOM  VARCHAR(20),
OIL_FLOW_AMOUNT_UOM  VARCHAR(20),
OIL_GRAVITY DECIMAL(6,2),
PERMEABILITY_QUALITY  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRIMARY_FLUID_RECOVERED  VARCHAR(20),
PRODUCTION_METHOD  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STR_FORM_OBS_NO INT,
RAT_HOLE_DIAMETER DECIMAL(8,3),
RAT_HOLE_DIAMETER_OUOM  VARCHAR(20),
RAT_HOLE_LENGTH DECIMAL(7,2),
RAT_HOLE_LENGTH_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORTED_STRAT_UNIT_ID  VARCHAR(20),
REPORT_TEMPERATURE DECIMAL(5,2),
REPORT_TEMPERATURE_OUOM  VARCHAR(20),
REPORT_TEST_NUM  VARCHAR(4),
SHOW_TYPE  VARCHAR(20),
SI_FLOW_RATIO DECIMAL(4,2),
START_TIME  VARCHAR(20),
STATIC_PRESSURE DECIMAL(8,2),
STATIC_PRESSURE_OUOM  VARCHAR(20),
STRAT_AGE  VARCHAR(20),
STRAT_AGE_NAME_SET_ID  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRING_SOURCE  VARCHAR(20),
SULPHUR_IND  VARCHAR(1)
,
TD DECIMAL(10,5),
TD_OUOM  VARCHAR(20),
TEMPERATURE_CORRECTION DECIMAL(5,2),
TEMPERATURE_CORRECTION_IND  VARCHAR(1),
TEMPERATURE_CORRECTION_OUOM  VARCHAR(20),
TEST_COMPANY  VARCHAR(20),
TEST_DATE TIMESTAMP(0),
TEST_DURATION DECIMAL(7,2),
TEST_DURATION_OUOM  VARCHAR(20),
TEST_HOLE_DIAMETER DECIMAL(8,3),
TEST_HOLE_DIAMETER_OUOM  VARCHAR(20),
TEST_RESULT_CODE  VARCHAR(20),
TEST_SUBTYPE  VARCHAR(20),
TOOL_OPEN_TIME  VARCHAR(20),
TOP_CHOKE_DESC  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
WATER_AMOUNT_PERCENT DECIMAL(5,2),
WATER_CUT_PERCENT DECIMAL(5,2),
WATER_FLOW_AMOUNT DECIMAL(12,2),
WATER_FLOW_AMOUNT_OUOM  VARCHAR(20),
WATER_FLOW_AMOUNT_UOM  VARCHAR(20),
WELLBORE_COMPLETION_TYPE  VARCHAR(20),
Z_FACTOR DECIMAL(10,5),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_ANALYSIS'
CREATE table well_test_analysis (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
PERIOD_TYPE  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BSW DECIMAL(10,6),
COMPLETION_OBS_NO INT,
CONDENSATE_GRAVITY DECIMAL(6,2),
CONDENSATE_RATIO DECIMAL(15,6),
CONDENSATE_RATIO_OUOM  VARCHAR(20),
CONDENSATE_TEMPERATURE DECIMAL(5,2),
CONDENSATE_TEMPERATURE_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLUID_TYPE  VARCHAR(20),
GAS_CONTENT  VARCHAR(15),
GAS_GRAVITY DECIMAL(6,2),
GOR DECIMAL(15,6),
GOR_OUOM  VARCHAR(20),
GWR DECIMAL(15,6),
GWR_OUOM  VARCHAR(20),
H2S_PERCENT DECIMAL(10,6),
LGR DECIMAL(15,6),
LGR_OUOM  VARCHAR(20),
OIL_DENSITY DECIMAL(9,4),
OIL_DENSITY_OUOM  VARCHAR(20),
OIL_GRAVITY DECIMAL(6,2),
OIL_TEMPERATURE DECIMAL(5,2),
OIL_TEMPERATURE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SALINITY_TYPE  VARCHAR(20),
SULPHUR_PERCENT DECIMAL(10,6),
WATER_CUT DECIMAL(5,2),
WATER_RESISTIVITY DECIMAL(8,4),
WATER_RESISTIVITY_OUOM  VARCHAR(20),
WATER_SALINITY DECIMAL(15,6),
WATER_SALINITY_OUOM  VARCHAR(20),
WATER_TEMPERATURE DECIMAL(5,2),
WATER_TEMPERATURE_OUOM  VARCHAR(20),
WOR DECIMAL(15,6),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_COMPUT_ANAL'
CREATE table well_test_comput_anal (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
REPORT_NO SMALLINT,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_COMPANY  VARCHAR(20),
COMPUTED_PERMEABILITY DECIMAL(8,2),
COMPUTED_PERMEABILITY_OUOM  VARCHAR(20),
CONFIDENCE_LIMIT DECIMAL(6,1),
CONFIDENCE_LIMIT_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EST_DAMAGE_RATIO DECIMAL(5,2),
EXPIRY_DATE TIMESTAMP(0),
EXTRAP_PRESSURE_PERCENT DECIMAL(5,2),
FINAL_RESERVOIR_PRESSURE DECIMAL(8,2),
FINAL_RESERVOIR_PRESS_OUOM  VARCHAR(20),
GAUGE_DEPTH DECIMAL(10,5),
GAUGE_DEPTH_OUOM  VARCHAR(20),
INVESTIGATION_RADIUS DECIMAL(7,2),
INVESTIGATION_RADIUS_OUOM  VARCHAR(20),
MAX_RESERVOIR_PRESSURE DECIMAL(8,2),
MAX_RESERVOIR_PRESSURE_OUOM  VARCHAR(20),
POTMTRC_SURF_HEIGHT INT,
POTMTRC_SURF_HEIGHT_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PRODUCTION_INDEX_RATE SMALLINT,
PRODUCTION_INDEX_RATE_OUOM  VARCHAR(20),
RECORDER_ID  VARCHAR(6),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_CONTAMINANT'
CREATE table well_test_contaminant (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
RECOVERY_OBS_NO INT,
CONTAMINANT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
CONTAMINANT_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_CUSHION'
CREATE table well_test_cushion (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
CUSHION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CUSHION_GAS_PRESSURE DECIMAL(8,2),
CUSHION_GAS_PRESSURE_OUOM  VARCHAR(20),
CUSHION_INHIBITOR_VOLUME DECIMAL(12,2),
CUSHION_INHIBITOR_VOL_OUOM  VARCHAR(20),
CUSHION_LENGTH DECIMAL(7,2),
CUSHION_LENGTH_OUOM  VARCHAR(20),
CUSHION_TYPE  VARCHAR(20),
CUSHION_VOLUME DECIMAL(12,2),
CUSHION_VOLUME_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_EQUIPMENT'
CREATE table well_test_equipment (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
EQUIPMENT_TYPE  VARCHAR(20) NOT NULL,
EQUIP_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EQUIP_LENGTH DECIMAL(7,2),
EQUIP_LENGTH_OUOM  VARCHAR(20),
EQUIP_WEIGHT DECIMAL(9,4),
EQUIP_WEIGHT_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
INSIDE_DIAMETER DECIMAL(8,3),
INSIDE_DIAMETER_OUOM  VARCHAR(20),
OUTSIDE_DIAMETER DECIMAL(8,3),
OUTSIDE_DIAMETER_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_FLOW'
CREATE table well_test_flow (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
PERIOD_TYPE  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
FLUID_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASIC_SEDIMENT_IND  VARCHAR(1),
BLOW_DESC  VARCHAR(2000),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GAS_RISER_DIAMETER DECIMAL(8,3),
GAS_RISER_DIAMETER_OUOM  VARCHAR(20),
MAX_FLUID_RATE DECIMAL(12,2),
MAX_FLUID_RATE_OUOM  VARCHAR(20),
MAX_FLUID_RATE_UOM  VARCHAR(20),
MAX_SURFACE_PRESSURE DECIMAL(8,2),
MAX_SURFACE_PRESSURE_OUOM  VARCHAR(20),
MEASUREMENT_TECHNIQUE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHAKEOUT_PERCENT DECIMAL(5,2),
TTS_ELAPSED_TIME DECIMAL(7,2),
TTS_ELAPSED_TIME_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_FLOW_MEAS'
CREATE table well_test_flow_meas (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
MEASUREMENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FLOW_DURATION DECIMAL(8,2),
FLOW_DURATION_OUOM  VARCHAR(20),
FLUID_TYPE  VARCHAR(20),
MEASUREMENT_PRESSURE DECIMAL(8,2),
MEASUREMENT_PRESSURE_OUOM  VARCHAR(20),
MEASUREMENT_TIME DECIMAL(7,2),
MEASUREMENT_TIME_OUOM  VARCHAR(20),
MEASUREMENT_VOLUME DECIMAL(12,2),
MEASUREMENT_VOLUME_OUOM  VARCHAR(20),
MEASUREMENT_VOLUME_UOM  VARCHAR(20),
PERIOD_OBS_NO INT,
PERIOD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SURFACE_CHOKE_DIAMETER DECIMAL(8,3),
SURFACE_CHOKE_DIAMETER_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_MUD'
CREATE table well_test_mud (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
MUD_TYPE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FILTRATE_RESISTIVITY DECIMAL(8,4),
FILTRATE_RESISTIVITY_OUOM  VARCHAR(20),
FILTRATE_SALINITY DECIMAL(15,6),
FILTRATE_SALINITY_OUOM  VARCHAR(20),
FILTRATE_SALINITY_UOM  VARCHAR(20),
FILTRATE_TEMPERATURE DECIMAL(5,2),
FILTRATE_TEMPERATURE_OUOM  VARCHAR(20),
MUD_PH DECIMAL(7,4),
MUD_RESISTIVITY DECIMAL(8,4),
MUD_RESISTIVITY_OUOM  VARCHAR(20),
MUD_SALINITY DECIMAL(15,6),
MUD_SALINITY_OUOM  VARCHAR(20),
MUD_SALINITY_UOM  VARCHAR(20),
MUD_SAMPLE_TYPE  VARCHAR(20),
MUD_TEMPERATURE DECIMAL(5,2),
MUD_TEMPERATURE_OUOM  VARCHAR(20),
MUD_VISCOSITY DECIMAL(8,3),
MUD_VISCOSITY_OUOM  VARCHAR(20),
MUD_WEIGHT DECIMAL(9,4),
MUD_WEIGHT_OUOM  VARCHAR(20),
MUD_WEIGHT_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_PERIOD'
CREATE table well_test_period (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
PERIOD_TYPE  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
CASING_PRESSURE DECIMAL(8,2),
CASING_PRESSURE_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PERIOD_DURATION DECIMAL(8,2),
PERIOD_DURATION_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
TUBING_PRESSURE DECIMAL(8,2),
TUBING_PRESSURE_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_PRESSURE'
CREATE table well_test_pressure (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
PERIOD_TYPE  VARCHAR(20) NOT NULL,
PERIOD_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
END_PRESSURE DECIMAL(8,2),
END_PRESSURE_OUOM  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
QUALITY_CODE  VARCHAR(20),
RECORDER_ID  VARCHAR(6),
REMARK  VARCHAR(2000),
START_PRESSURE DECIMAL(8,2),
START_PRESSURE_OUOM  VARCHAR(20),
SUMMARY_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_PRESS_MEAS'
CREATE table well_test_press_meas (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
MEASUREMENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MEASUREMENT_PRESSURE DECIMAL(8,2),
MEASUREMENT_PRESSURE_OUOM  VARCHAR(20),
MEASUREMENT_TEMPERATURE DECIMAL(5,2),
MEASUREMENT_TEMP_OUOM  VARCHAR(20),
MEASUREMENT_TIME DECIMAL(7,2),
MEASUREMENT_TIME_OUOM  VARCHAR(20),
PERIOD_OBS_NO INT,
PERIOD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECORDER_ID  VARCHAR(6),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_RECORDER'
CREATE table well_test_recorder (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
RECORDER_ID  VARCHAR(6) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MAX_CAPACITY_PRESSURE DECIMAL(8,2),
MAX_CAPACITY_PRESSURE_OUOM  VARCHAR(20),
MAX_CAPACITY_TEMP DECIMAL(5,2),
MAX_CAPACITY_TEMP_OUOM  VARCHAR(20),
PERFORMANCE_QUALITY  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECORDER_DEPTH DECIMAL(10,5),
RECORDER_DEPTH_OUOM  VARCHAR(20),
RECORDER_INSIDE_IND  VARCHAR(1),
RECORDER_MAX_TEMP DECIMAL(5,2),
RECORDER_MAX_TEMP_OUOM  VARCHAR(20),
RECORDER_MIN_TEMP DECIMAL(5,2),
RECORDER_MIN_TEMP_OUOM  VARCHAR(20),
RECORDER_POSITION  VARCHAR(20),
RECORDER_RESOLUTION DECIMAL(8,2),
RECORDER_RESOLUTION_OUOM  VARCHAR(20),
RECORDER_TYPE  VARCHAR(20),
RECORDER_USED_IND  VARCHAR(1),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_RECOVERY'
CREATE table well_test_recovery (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
RECOVERY_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
MULTIPLE_TEST_IND  VARCHAR(1),
PERIOD_OBS_NO INT,
PERIOD_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECOVERY_AMOUNT DECIMAL(12,2),
RECOVERY_AMOUNT_OUOM  VARCHAR(20),
RECOVERY_AMOUNT_PERCENT DECIMAL(5,2),
RECOVERY_AMOUNT_UOM  VARCHAR(20),
RECOVERY_DESC  VARCHAR(60),
RECOVERY_METHOD  VARCHAR(20),
RECOVERY_SHOW_TYPE  VARCHAR(20),
RECOVERY_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
REVERSE_CIRCULATION_IND  VARCHAR(1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_REMARK'
CREATE table well_test_remark (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
REMARK_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REMARK_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_SHUTOFF'
CREATE table well_test_shutoff (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
SHUTOFF_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PLUGBACK_DEPTH DECIMAL(10,5),
PLUGBACK_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHUTOFF_TYPE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TEST_STRAT_UNIT'
CREATE table well_test_strat_unit (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TEST_TYPE  VARCHAR(20) NOT NULL,
RUN_NUM  VARCHAR(4) NOT NULL,
TEST_NUM  VARCHAR(4) NOT NULL,
STRAT_UNIT_ID  VARCHAR(20) NOT NULL,
STRAT_NAME_SET_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STRAT_AGE  VARCHAR(20),
STRAT_AGE_NAME_SET_ID  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TREATMENT'
CREATE table well_treatment (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TREATMENT_TYPE  VARCHAR(20) NOT NULL,
TREATMENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ADDITIVE_TYPE  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
COMPLETION_OBS_NO INT,
COMPLETION_SOURCE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FORM_BREAK_PRESSURE DECIMAL(8,2),
FORM_BREAK_PRESSURE_OUOM  VARCHAR(20),
INJECTION_RATE DECIMAL(5,1),
INJECTION_RATE_OUOM  VARCHAR(20),
INSTANT_SI_PRESSURE DECIMAL(8,2),
INSTANT_SI_PRESSURE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROPPANT_AGENT_AMOUNT DECIMAL(9,1),
PROPPANT_AGENT_AMOUNT_OUOM  VARCHAR(20),
PROPPANT_AGENT_AMOUNT_UOM  VARCHAR(20),
PROPPANT_AGENT_MESH_SIZE SMALLINT,
PROPPANT_AGENT_TYPE  VARCHAR(20),
REMARK  VARCHAR(2000),
RUN_NUM  VARCHAR(4),
STAGE_NO SMALLINT,
STRAT_NAME_SET_ID  VARCHAR(20),
TEST_NUM  VARCHAR(4),
TEST_TYPE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
TREATMENT_AMOUNT DECIMAL(7,1),
TREATMENT_AMOUNT_OUOM  VARCHAR(20),
TREATMENT_AMOUNT_UOM  VARCHAR(20),
TREATMENT_BA_ID  VARCHAR(20),
TREATMENT_DATE TIMESTAMP(0),
TREATMENT_FLUID_TYPE  VARCHAR(20),
TREATMENT_PRESSURE DECIMAL(8,2),
TREATMENT_PRESSURE_OUOM  VARCHAR(20),
TREATMENT_STATUS  VARCHAR(20),
TREATMENT_STATUS_TYPE  VARCHAR(20),
WELL_TEST_SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_TUBULAR'
CREATE table well_tubular (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
TUBING_TYPE  VARCHAR(20) NOT NULL,
TUBING_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
CAT_EQUIP_ID  VARCHAR(20),
COLLAR_TYPE  VARCHAR(20),
COUPLING_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EQUIPMENT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
HOLE_SIZE DECIMAL(8,3),
HOLE_SIZE_OUOM  VARCHAR(20),
HUNG_TOP_DEPTH DECIMAL(10,5),
HUNG_TOP_OUOM  VARCHAR(20),
INSIDE_DIAMETER DECIMAL(8,3),
INSIDE_DIAMETER_OUOM  VARCHAR(20),
JOINT_COUNT BIGINT,
LEFT_IN_HOLE_LENGTH DECIMAL(10,5),
LEFT_IN_HOLE_LENGTH_OUOM  VARCHAR(20),
LINER_TYPE  VARCHAR(20),
MANUFACTURER_BA_ID  VARCHAR(20),
MIXED_STRING_IND  VARCHAR(1),
OBSERVATION_DATE TIMESTAMP(0),
OUTSIDE_DIAMETER DECIMAL(8,3),
OUTSIDE_DIAMETER_DESC  VARCHAR(20),
OUTSIDE_DIAMETER_OUOM  VARCHAR(20),
PACKER_SET_DEPTH DECIMAL(10,5),
PACKER_SET_DEPTH_OUOM  VARCHAR(20),
PERIOD_OBS_NO INT,
PPDM_GUID  VARCHAR(38),
PULLED_LENGTH DECIMAL(10,5),
PULLED_LENGTH_OUOM  VARCHAR(20),
REMARK  VARCHAR(2000),
REPORTED_BASE_TVD DECIMAL(10,5),
REPORTED_BASE_TVD_OUOM  VARCHAR(20),
REPORTED_TOP_TVD DECIMAL(10,5),
REPORTED_TOP_TVD_OUOM  VARCHAR(20),
SEA_FLOOR_PENETRATION DECIMAL(10,5),
SEA_FLOOR_PENETRATION_OUOM  VARCHAR(20),
SHOE_DEPTH DECIMAL(10,5),
SHOE_DEPTH_OUOM  VARCHAR(20),
STEEL_SPEC  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
TORQUE DECIMAL(10,5),
TORQUE_OUOM  VARCHAR(20),
TUBING_DENSITY DECIMAL(9,4),
TUBING_DENSITY_OUOM  VARCHAR(20),
TUBING_GRADE  VARCHAR(20),
TUBING_STRENGTH SMALLINT,
TUBING_STRENGTH_OUOM  VARCHAR(20),
TUBING_WEIGHT DECIMAL(9,4),
TUBING_WEIGHT_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_VERSION'
CREATE table well_version (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ABANDONMENT_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
ASSIGNED_FIELD  VARCHAR(20),
BASE_NODE_ID  VARCHAR(20),
BOTTOM_HOLE_LATITUDE DECIMAL(14,9),
BOTTOM_HOLE_LONGITUDE DECIMAL(14,9),
CASING_FLANGE_ELEV DECIMAL(10,5),
CASING_FLANGE_ELEV_OUOM  VARCHAR(20),
COMPLETION_DATE TIMESTAMP(0),
CONFIDENTIAL_DATE TIMESTAMP(0),
CONFIDENTIAL_DEPTH DECIMAL(10,5),
CONFIDENTIAL_DEPTH_OUOM  VARCHAR(20),
CONFIDENTIAL_TYPE  VARCHAR(20),
CONFID_STRAT_NAME_SET_ID  VARCHAR(20),
CONFID_STRAT_UNIT_ID  VARCHAR(20),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
CURRENT_CLASS  VARCHAR(20),
CURRENT_STATUS  VARCHAR(20),
CURRENT_STATUS_DATE TIMESTAMP(0),
DEEPEST_DEPTH DECIMAL(10,5),
DEEPEST_DEPTH_OUOM  VARCHAR(20),
DEPTH_DATUM  VARCHAR(20),
DEPTH_DATUM_ELEV DECIMAL(10,5),
DEPTH_DATUM_ELEV_OUOM  VARCHAR(20),
DERRICK_FLOOR_ELEV DECIMAL(10,5),
DERRICK_FLOOR_ELEV_OUOM  VARCHAR(20),
DIFFERENCE_LAT_MSL DECIMAL(10,5),
DISCOVERY_IND  VARCHAR(1),
DISTRICT  VARCHAR(20),
DRILL_TD DECIMAL(10,5),
DRILL_TD_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
ELEV_REF_DATUM  VARCHAR(20),
ENVIRONMENT_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FAULTED_IND  VARCHAR(1),
FINAL_DRILL_DATE TIMESTAMP(0),
FINAL_TD DECIMAL(10,5),
FINAL_TD_OUOM  VARCHAR(20),
GEOGRAPHIC_REGION  VARCHAR(20),
GEOLOGIC_PROVINCE  VARCHAR(20),
GROUND_ELEV DECIMAL(10,5),
GROUND_ELEV_OUOM  VARCHAR(20),
GROUND_ELEV_TYPE  VARCHAR(20),
INITIAL_CLASS  VARCHAR(20),
KB_ELEV DECIMAL(10,5),
KB_ELEV_OUOM  VARCHAR(20),
LEASE_NAME  VARCHAR(60),
LEASE_NUM  VARCHAR(20),
LEGAL_SURVEY_TYPE  VARCHAR(20),
LOCATION_TYPE  VARCHAR(20),
LOG_TD DECIMAL(10,5),
LOG_TD_OUOM  VARCHAR(20),
MAX_TVD DECIMAL(10,5),
MAX_TVD_OUOM  VARCHAR(20),
NET_PAY INT,
NET_PAY_OUOM  VARCHAR(20),
OLDEST_STRAT_AGE  VARCHAR(20),
OLDEST_STRAT_NAME_SET_AGE  VARCHAR(20),
OLDEST_STRAT_NAME_SET_ID  VARCHAR(20),
OLDEST_STRAT_UNIT_ID  VARCHAR(20),
OPERATOR  VARCHAR(20),
PLATFORM_ID  VARCHAR(20),
PLATFORM_SF_TYPE  VARCHAR(30),
PLOT_NAME  VARCHAR(20),
PLOT_SYMBOL  VARCHAR(20),
PLUGBACK_DEPTH DECIMAL(10,5),
PLUGBACK_DEPTH_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROFILE_TYPE  VARCHAR(20),
PROVINCE_STATE  VARCHAR(20),
REGULATORY_AGENCY  VARCHAR(20),
REMARK  VARCHAR(2000),
RIG_ON_SITE_DATE TIMESTAMP(0),
RIG_RELEASE_DATE TIMESTAMP(0),
ROTARY_TABLE_ELEV DECIMAL(10,5),
ROTARY_TABLE_ELEV_OUOM  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
SPUD_DATE TIMESTAMP(0),
STATUS_TYPE  VARCHAR(20),
SUBSEA_ELEV_REF_TYPE  VARCHAR(20),
SURFACE_LATITUDE DECIMAL(14,9),
SURFACE_LONGITUDE DECIMAL(14,9),
SURFACE_NODE_ID  VARCHAR(20),
TAX_CREDIT_CODE  VARCHAR(20),
TD_STRAT_AGE  VARCHAR(20),
TD_STRAT_NAME_SET_AGE  VARCHAR(20),
TD_STRAT_NAME_SET_ID  VARCHAR(20)
,
TD_STRAT_UNIT_ID  VARCHAR(20),
WATER_ACOUSTIC_VEL DECIMAL(10,5),
WATER_ACOUSTIC_VEL_OUOM  VARCHAR(20),
WATER_DEPTH DECIMAL(10,5),
WATER_DEPTH_DATUM  VARCHAR(20),
WATER_DEPTH_OUOM  VARCHAR(20),
WELL_EVENT_NUM  VARCHAR(4),
WELL_GOVERNMENT_ID  VARCHAR(20),
WELL_INTERSECT_MD DECIMAL(10,5),
WELL_LEVEL_TYPE  VARCHAR(20),
WELL_NAME  VARCHAR(255),
WELL_NUM  VARCHAR(20),
WHIPSTOCK_DEPTH DECIMAL(10,5),
WHIPSTOCK_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_XREF'
CREATE table well_xref (
UWI  VARCHAR(20) NOT NULL,
XREF_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
UWI2  VARCHAR(20),
XREF_OWNER_BA_ID  VARCHAR(20),
XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ZONE_INTERVAL'
CREATE table well_zone_interval (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
INTERVAL_ID  VARCHAR(20) NOT NULL,
ZONE_ID  VARCHAR(20) NOT NULL,
ZONE_SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BASE_MD DECIMAL(10,5),
BASE_MD_OUOM  VARCHAR(20),
BASE_TVD DECIMAL(10,5),
BASE_TVD_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
TOP_DELTA_X DECIMAL(7,2),
TOP_DELTA_X_OUOM  VARCHAR(20),
TOP_DELTA_Y DECIMAL(7,2),
TOP_DELTA_Y_OUOM  VARCHAR(20),
TOP_MD DECIMAL(10,5),
TOP_MD_OUOM  VARCHAR(20),
TOP_TVD DECIMAL(10,5),
TOP_TVD_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WELL_ZONE_INTRVL_VALUE'
CREATE table well_zone_intrvl_value (
UWI  VARCHAR(20) NOT NULL,
INTERVAL_SOURCE  VARCHAR(20) NOT NULL,
INTERVAL_ID  VARCHAR(20) NOT NULL,
ZONE_ID  VARCHAR(20) NOT NULL,
ZONE_SOURCE  VARCHAR(20) NOT NULL,
ZONE_VALUE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DATE_FORMAT_DESC  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARAMETER  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
VALUE_TYPE  VARCHAR(20),
ZONE_VALUE DECIMAL(10,5),
ZONE_VALUE_OUOM  VARCHAR(20),
ZONE_VALUE_UOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER'
CREATE table work_order (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
COMPLETE_DATE TIMESTAMP(0),
DUE_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_BILLING_DATE TIMESTAMP(0),
INSTRUCTIONS  VARCHAR(2000),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REQUEST_DATE TIMESTAMP(0),
RUSH_IND  VARCHAR(1),
SOURCE  VARCHAR(20),
WORK_ORDER_NUMBER  VARCHAR(30),
WORK_ORDER_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER_ALIAS'
CREATE table work_order_alias (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
ALIAS_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ALIAS_CODE  VARCHAR(30),
ALIAS_FULL_NAME  VARCHAR(255),
ALIAS_REASON_TYPE  VARCHAR(20),
ALIAS_SHORT_NAME  VARCHAR(30),
ALIAS_TYPE  VARCHAR(20),
AMENDED_DATE TIMESTAMP(0),
CREATED_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LANGUAGE_ID  VARCHAR(20),
ORIGINAL_IND  VARCHAR(1),
OWNER_BA_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PREFERRED_IND  VARCHAR(1),
REASON_DESC  VARCHAR(2000),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
SOURCE_DOCUMENT  VARCHAR(20),
STRUCKOFF_DATE TIMESTAMP(0),
SW_APPLICATION_ID  VARCHAR(20),
USE_RULE  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER_BA'
CREATE table work_order_ba (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
BUSINESS_ASSOCIATE_ID  VARCHAR(20) NOT NULL,
BA_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_ROLE  VARCHAR(20),
CURRENCY_CONVERSION DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_AMOUNT DECIMAL(12,2),
PAYMENT_AMOUNT_OUOM  VARCHAR(20),
PAYMENT_PERCENT DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER_COMPONENT'
CREATE table work_order_component (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_OBS_NO INT,
ANALYSIS_ID  VARCHAR(20),
APPLICATION_ID  VARCHAR(20),
AREA_ID  VARCHAR(20),
AREA_TYPE  VARCHAR(20),
AUTHORITY_ID  VARCHAR(20),
BA_ORGANIZATION_ID  VARCHAR(20),
BA_ORGANIZATION_SEQ_NO INT,
BUSINESS_ASSOCIATE  VARCHAR(20),
CATALOGUE_ADDITIVE_ID  VARCHAR(20),
CATALOGUE_EQUIP_ID  VARCHAR(20),
CIRC_ID  VARCHAR(20),
CLASSIFICATION_SYSTEM_ID  VARCHAR(20),
CLASS_LEVEL_ID  VARCHAR(20),
COMPONENT_TYPE  VARCHAR(20),
CONSENT_ID  VARCHAR(20),
CONSULT_ID  VARCHAR(20),
CONTEST_ID  VARCHAR(20),
CONTRACT_ID  VARCHAR(20),
ECOZONE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EMPLOYEE_BA_ID  VARCHAR(20),
EMPLOYEE_OBS_NO INT,
EMPLOYER_BA_ID  VARCHAR(20),
ENTITLEMENT_ID  VARCHAR(20),
EQUIPMENT_ID  VARCHAR(20),
EQUIP_MAINT_ID  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
FACILITY_ID  VARCHAR(20),
FACILITY_MAINTAIN_ID  VARCHAR(20),
FACILITY_TYPE  VARCHAR(20),
FIELD_ID  VARCHAR(20),
FINANCE_ID  VARCHAR(20),
FOSSIL_ID  VARCHAR(20),
INCIDENT_ID  VARCHAR(20),
INCIDENT_SET_ID  VARCHAR(20),
INCIDENT_TYPE  VARCHAR(20),
INFORMATION_ITEM_ID  VARCHAR(20),
INFO_ITEM_TYPE  VARCHAR(30),
INSPECTION_ID  VARCHAR(20),
INSTRUMENT_ID  VARCHAR(20),
INTEREST_SET_ID  VARCHAR(20),
INTEREST_SET_SEQ_NO INT,
JURISDICTION  VARCHAR(20),
LAND_RIGHT_ID  VARCHAR(20),
LAND_RIGHT_TYPE  VARCHAR(30),
LAND_SALE_NUMBER  VARCHAR(30),
LANGUAGE  VARCHAR(20),
LITHOLOGY_LOG_ID  VARCHAR(20),
LITH_LOG_SOURCE  VARCHAR(20),
NOTIFICATION_ID  VARCHAR(20),
OBLIGATION_ID  VARCHAR(20),
OBLIGATION_SEQ_NO INT,
ORIGIN_SEQ_NO INT,
PALEO_SUMMARY_ID  VARCHAR(20),
PDEN_ID  VARCHAR(40),
PDEN_SOURCE  VARCHAR(20),
PDEN_TYPE  VARCHAR(30),
PHYSICAL_ITEM_ID  VARCHAR(20),
POOL_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PPDM_SYSTEM_ID  VARCHAR(20),
PPDM_TABLE_NAME  VARCHAR(30),
PRODUCT_TYPE  VARCHAR(20),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PROJECT_ID  VARCHAR(20),
RATE_SCHEDULE_ID  VARCHAR(20),
REFERENCED_GUID  VARCHAR(38),
REFERENCED_SYSTEM_ID  VARCHAR(20),
REFERENCED_TABLE_NAME  VARCHAR(30),
REMARK  VARCHAR(2000),
RESENT_ID  VARCHAR(20),
RESERVE_CLASS_ID  VARCHAR(20),
SAMPLE_ANAL_SOURCE  VARCHAR(20),
SEIS_SET_ID  VARCHAR(20),
SEIS_SET_TYPE  VARCHAR(30),
SEIS_TRANSACTION_ID  VARCHAR(20),
SF_TYPE  VARCHAR(30),
SOURCE  VARCHAR(20),
SPATIAL_DESCRIPTION_ID  VARCHAR(20),
SPATIAL_OBS_NO INT,
STORE_ID  VARCHAR(20),
STORE_STRUCTURE_OBS_NO INT,
STRAT_NAME_SET_ID  VARCHAR(20),
STRAT_UNIT_ID  VARCHAR(20),
SUPPORT_FACILITY_ID  VARCHAR(20),
THESAURUS_ID  VARCHAR(20)
,
THESAURUS_WORD_ID  VARCHAR(20),
TRANSACTION_TYPE  VARCHAR(20),
UWI  VARCHAR(20),
WELL_ACTIVITY_SET_ID  VARCHAR(20),
WELL_ACTIVITY_SOURCE  VARCHAR(20),
WELL_ACTIVITY_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER_CONDITION'
CREATE table work_order_condition (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
CONDITION_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
BA_ROLE  VARCHAR(20),
BUSINESS_ASSOCIATE_ID  VARCHAR(20),
CONDITION_DESC  VARCHAR(2000),
CURRENCY_CONVERSION DECIMAL(10,5),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PAYMENT_AMOUNT DECIMAL(12,2),
PAYMENT_AMOUNT_OUOM  VARCHAR(20),
PAYMENT_PERCENT DECIMAL(15,12),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
WORK_ORDER_CONDITION  VARCHAR(20),
WORK_ORDER_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER_DELIVERY'
CREATE table work_order_delivery (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
DELIVERY_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BA_OBS_NO INT,
BUSINESS_ASSOCIATE_ID  VARCHAR(20),
DELIVERY_BA_ADDRESS_OBS_NO INT,
DELIVERY_BA_ADDRESS_SOURCE  VARCHAR(20),
DELIVERY_BA_ID  VARCHAR(20),
DELIVERY_DATE TIMESTAMP(0),
DELIVERY_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER_DELIVERY_COMP'
CREATE table work_order_delivery_comp (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
DELIVERY_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER_INSTRUCTION'
CREATE table work_order_instruction (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
INSTRUCTION_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BA_ADDRESS_OBS_NO INT,
BA_ADDRESS_SOURCE  VARCHAR(20),
BA_OBS_NO INT,
BUSINESS_ASSOCIATE_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
INSTRUCTION_TYPE  VARCHAR(20),
INSTRUCTION_DESC  VARCHAR(240),
INSTRUCTION_VALUE DECIMAL(10,5),
INSTRUCTION_VALUE_OUOM  VARCHAR(20),
INSTRUCTION_VALUE_UOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER_INST_COMP'
CREATE table work_order_inst_comp (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
INSTRUCTION_ID  VARCHAR(20) NOT NULL,
COMPONENT_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE WORK_ORDER_XREF'
CREATE table work_order_xref (
WORK_ORDER_ID  VARCHAR(20) NOT NULL,
WORK_ORDER_XREF_ID  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
BUSINESS_ASSOCIATE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PARENT_WORK_ORDER_ID  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REFERENCE_ID  VARCHAR(20),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
WO_XREF_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE ZONE'
CREATE table zone (
ZONE_ID  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ZONE_NAME  VARCHAR(60),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_CONT_COUNTY'
CREATE table z_cont_county (
CONTRACT_ID  VARCHAR(20) NOT NULL,
COUNTRY  VARCHAR(20) NOT NULL,
PROVINCE_STATE  VARCHAR(20) NOT NULL,
COUNTY  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_CONT_DISTRICT'
CREATE table z_cont_district (
CONTRACT_ID  VARCHAR(20) NOT NULL,
DISTRICT  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_CONT_PROV_STATE'
CREATE table z_cont_prov_state (
CONTRACT_ID  VARCHAR(20) NOT NULL,
COUNTRY  VARCHAR(20) NOT NULL,
PROVINCE_STATE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_FIELD_IN_COUNTY'
CREATE table z_field_in_county (
FIELD_ID  VARCHAR(20) NOT NULL,
COUNTRY  VARCHAR(20) NOT NULL,
PROVINCE_STATE  VARCHAR(20) NOT NULL,
COUNTY  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_PDEN_GAS_ANALYSIS'
CREATE table z_pden_gas_analysis (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_DATE TIMESTAMP(0),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
RQ_QUALITY  VARCHAR(20),
SAMPLE_LOCATION  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_PDEN_GAS_ANAL_DETAIL'
CREATE table z_pden_gas_anal_detail (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ANALYSIS_PROPERTY  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_VALUE DECIMAL(15,6),
ANALYSIS_VALUE_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_PDEN_OIL_ANALYSIS'
CREATE table z_pden_oil_analysis (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GOR DECIMAL(15,6),
GOR_OUOM  VARCHAR(20),
MEASURED_PRESSURE DECIMAL(8,2),
MEASURED_PRESSURE_OUOM  VARCHAR(20),
OIL_ANALYSIS_TEMPERATURE DECIMAL(5,2),
OIL_ANALYSIS_TEMP_OUOM  VARCHAR(20),
OIL_DENSITY DECIMAL(9,4),
OIL_DENSITY_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
QUALITY  VARCHAR(20),
REMARK  VARCHAR(2000),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_LOCATION  VARCHAR(20),
SULPHUR_CONTENT DECIMAL(10,6),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_PDEN_OIL_VISCOSITY'
CREATE table z_pden_oil_viscosity (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
OIL_VISCOSITY DECIMAL(8,2),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OIL_TEMPERATURE DECIMAL(5,2),
OIL_TEMPERATURE_OUOM  VARCHAR(20),
OIL_VISCOSITY_OUOM  VARCHAR(20),
OIL_VISCOSITY_UOM  VARCHAR(20),
POUR_POINT_TEMPERATURE DECIMAL(5,2),
POUR_POINT_TEMPERATURE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_PDEN_VOL_BY_DAY'
CREATE table z_pden_vol_by_day (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
VOLUME_METHOD  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
YEAR SMALLINT,
MONTH SMALLINT,
AMENDMENT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AMEND_REASON  VARCHAR(20),
CUM_VOLUME DECIMAL(16,4),
DAY01_VOLUME DECIMAL(14,4),
DAY01_VOLUME_QUAL DECIMAL(7,2),
DAY02_VOLUME DECIMAL(14,4),
DAY02_VOLUME_QUAL DECIMAL(7,2),
DAY03_VOLUME DECIMAL(14,4),
DAY03_VOLUME_QUAL DECIMAL(7,2),
DAY04_VOLUME DECIMAL(14,4),
DAY04_VOLUME_QUAL DECIMAL(7,2),
DAY05_VOLUME DECIMAL(14,4),
DAY05_VOLUME_QUAL DECIMAL(7,2),
DAY06_VOLUME DECIMAL(14,4),
DAY06_VOLUME_QUAL DECIMAL(7,2),
DAY07_VOLUME DECIMAL(14,4),
DAY07_VOLUME_QUAL DECIMAL(7,2),
DAY08_VOLUME DECIMAL(14,4),
DAY08_VOLUME_QUAL DECIMAL(7,2),
DAY09_VOLUME DECIMAL(14,4),
DAY09_VOLUME_QUAL DECIMAL(7,2),
DAY10_VOLUME DECIMAL(14,4),
DAY10_VOLUME_QUAL DECIMAL(7,2),
DAY11_VOLUME DECIMAL(14,4),
DAY11_VOLUME_QUAL DECIMAL(7,2),
DAY12_VOLUME DECIMAL(14,4),
DAY12_VOLUME_QUAL DECIMAL(7,2),
DAY13_VOLUME DECIMAL(14,4),
DAY13_VOLUME_QUAL DECIMAL(7,2),
DAY14_VOLUME DECIMAL(14,4),
DAY14_VOLUME_QUAL DECIMAL(7,2),
DAY15_VOLUME DECIMAL(14,4),
DAY15_VOLUME_QUAL DECIMAL(7,2),
DAY16_VOLUME DECIMAL(14,4),
DAY16_VOLUME_QUAL DECIMAL(7,2),
DAY17_VOLUME DECIMAL(14,4),
DAY17_VOLUME_QUAL DECIMAL(7,2),
DAY18_VOLUME DECIMAL(14,4),
DAY18_VOLUME_QUAL DECIMAL(7,2),
DAY19_VOLUME DECIMAL(14,4),
DAY19_VOLUME_QUAL DECIMAL(7,2),
DAY20_VOLUME DECIMAL(14,4),
DAY20_VOLUME_QUAL DECIMAL(7,2),
DAY21_VOLUME DECIMAL(14,4),
DAY21_VOLUME_QUAL DECIMAL(7,2),
DAY22_VOLUME DECIMAL(14,4),
DAY22_VOLUME_QUAL DECIMAL(7,2),
DAY23_VOLUME DECIMAL(14,4),
DAY23_VOLUME_QUAL DECIMAL(7,2),
DAY24_VOLUME DECIMAL(14,4),
DAY24_VOLUME_QUAL DECIMAL(7,2),
DAY25_VOLUME DECIMAL(14,4),
DAY25_VOLUME_QUAL DECIMAL(7,2),
DAY26_VOLUME DECIMAL(14,4),
DAY26_VOLUME_QUAL DECIMAL(7,2),
DAY27_VOLUME DECIMAL(14,4),
DAY27_VOLUME_QUAL DECIMAL(7,2),
DAY28_VOLUME DECIMAL(14,4),
DAY28_VOLUME_QUAL DECIMAL(7,2),
DAY29_VOLUME DECIMAL(14,4),
DAY29_VOLUME_QUAL DECIMAL(7,2),
DAY30_VOLUME DECIMAL(14,4),
DAY30_VOLUME_QUAL DECIMAL(7,2),
DAY31_VOLUME DECIMAL(14,4),
DAY31_VOLUME_QUAL DECIMAL(7,2),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
POSTED_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
VOLUME_END_DATE TIMESTAMP(0),
VOLUME_OUOM  VARCHAR(20),
VOLUME_QUAL_OUOM  VARCHAR(20),
VOLUME_START_DATE TIMESTAMP(0),
VOLUME_UOM  VARCHAR(20),
YTD_VOLUME DECIMAL(14,4),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_PDEN_VOL_BY_MONTH'
CREATE table z_pden_vol_by_month (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
VOLUME_METHOD  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
PRODUCT_TYPE  VARCHAR(20) NOT NULL,
YEAR SMALLINT,
AMENDMENT_SEQ_NO INT,
ACTIVE_IND  VARCHAR(1),
AMEND_REASON  VARCHAR(20),
APR_VOLUME DECIMAL(14,4),
APR_VOLUME_QUAL DECIMAL(7,2),
AUG_VOLUME DECIMAL(14,4),
AUG_VOLUME_QUAL DECIMAL(7,2),
CUM_VOLUME DECIMAL(16,4),
DEC_VOLUME DECIMAL(14,4),
DEC_VOLUME_QUAL DECIMAL(7,2),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FEB_VOLUME DECIMAL(14,4),
FEB_VOLUME_QUAL DECIMAL(7,2),
JAN_VOLUME DECIMAL(14,4),
JAN_VOLUME_QUAL DECIMAL(7,2),
JUL_VOLUME DECIMAL(14,4),
JUL_VOLUME_QUAL DECIMAL(7,2),
JUN_VOLUME DECIMAL(14,4),
JUN_VOLUME_QUAL DECIMAL(7,2),
MAR_VOLUME DECIMAL(14,4),
MAR_VOLUME_QUAL DECIMAL(7,2),
MAY_VOLUME DECIMAL(14,4),
MAY_VOLUME_QUAL DECIMAL(7,2),
NOV_VOLUME DECIMAL(14,4),
NOV_VOLUME_QUAL DECIMAL(7,2),
OCT_VOLUME DECIMAL(14,4),
OCT_VOLUME_QUAL DECIMAL(7,2),
POSTED_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SEP_VOLUME DECIMAL(14,4),
SEP_VOLUME_QUAL DECIMAL(7,2),
VOLUME_END_DATE TIMESTAMP(0),
VOLUME_OUOM  VARCHAR(20),
VOLUME_QUALITY_OUOM  VARCHAR(20),
VOLUME_START_DATE TIMESTAMP(0),
VOLUME_UOM  VARCHAR(20),
YTD_VOLUME DECIMAL(14,4),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_PDEN_WATER_ANALYSIS'
CREATE table z_pden_water_analysis (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FILE_NUM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
QUALITY  VARCHAR(20),
RECEIVED_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
REPORTED_DATE TIMESTAMP(0),
RESERVOIR_TEMPERATURE DECIMAL(5,2),
RESERVOIR_TEMPERATURE_OUOM  VARCHAR(20),
RW_TEMPERATURE DECIMAL(5,2),
RW_TEMPERATURE_OUOM  VARCHAR(20),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_LOCATION  VARCHAR(20),
WATER_DENSITY DECIMAL(9,4),
WATER_DENSITY_OUOM  VARCHAR(20),
WATER_PH DECIMAL(4,1),
WATER_RESISTIVITY DECIMAL(8,4),
WATER_RESISTIVITY_OUOM  VARCHAR(20),
WATER_SALINITY DECIMAL(15,6),
WATER_SALINITY_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_PDEN_WATER_ANAL_DTL'
CREATE table z_pden_water_anal_dtl (
PDEN_ID  VARCHAR(40) NOT NULL,
PDEN_TYPE  VARCHAR(30) NOT NULL,
PDEN_SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ANALYSIS_PROPERTY  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_VALUE DECIMAL(15,6),
ANALYSIS_VALUE_OUOM  VARCHAR(20),
DESCRIPTION  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_R_CITY'
CREATE table z_r_city (
CITY_ID  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_R_COUNTRY'
CREATE table z_r_country (
COUNTRY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_R_COUNTY'
CREATE table z_r_county (
COUNTRY  VARCHAR(20) NOT NULL,
PROVINCE_STATE  VARCHAR(20) NOT NULL,
COUNTY  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_R_DISTRICT'
CREATE table z_r_district (
DISTRICT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_R_GEOGRAPHIC_REGION'
CREATE table z_r_geographic_region (
GEOGRAPHIC_REGION  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_R_GEOLOGIC_PROVINCE'
CREATE table z_r_geologic_province (
GEOLOGIC_PROVINCE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_R_LAND_DISTRICT'
CREATE table z_r_land_district (
LAND_DISTRICT  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
COUNTRY  VARCHAR(20),
COUNTY  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
PROVINCE_STATE  VARCHAR(20),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_R_PROVINCE_STATE'
CREATE table z_r_province_state (
COUNTRY  VARCHAR(20) NOT NULL,
PROVINCE_STATE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_R_WELL_ACTIVITY_TYPE'
CREATE table z_r_well_activity_type (
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
ABBREVIATION  VARCHAR(12),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LONG_NAME  VARCHAR(255),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
SHORT_NAME  VARCHAR(30),
SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_WELL_DRILL_STATUS'
CREATE table z_well_drill_status (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ACTIVITY_TYPE  VARCHAR(20) NOT NULL,
STATUS_DATE TIMESTAMP(0),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
STATUS_DEPTH DECIMAL(10,5),
STATUS_DEPTH_OUOM  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_WELL_EVENT'
CREATE table z_well_event (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
EVENT_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
DOWNTIME_DURATION DECIMAL(10,5),
DOWNTIME_DURATION_OUOM  VARCHAR(20),
DOWNTIME_TYPE  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EVENT_DATE TIMESTAMP(0),
EVENT_DEPTH DECIMAL(10,5),
EVENT_DEPTH_OUOM  VARCHAR(20),
EVENT_TYPE  VARCHAR(20),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
PROD_STRING_ID  VARCHAR(20),
PROD_STRING_SOURCE  VARCHAR(20),
PR_STR_FORM_OBS_NO INT,
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
START_TIME  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_WELL_GAS_ANALYSIS'
CREATE table z_well_gas_analysis (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
FLUID_TYPE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_COMPANY  VARCHAR(20),
ANALYSIS_DATE TIMESTAMP(0),
ANALYSIS_QUALITY  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LABORATORY_REFERENCE_NUM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
RUN_NUM  VARCHAR(4),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_LOCATION  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
TEST_NUM  VARCHAR(4),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
WELL_TEST_SOURCE  VARCHAR(20),
WELL_TEST_TYPE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_WELL_GAS_ANAL_DETAIL'
CREATE table z_well_gas_anal_detail (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
FLUID_TYPE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ANALYSIS_PROPERTY  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_VALUE DECIMAL(15,6),
ANALYSIS_VALUE_OUOM  VARCHAR(20),
ANALYSIS_VALUE_UOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_WELL_OIL_ANALYSIS'
CREATE table z_well_oil_analysis (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_COMPANY  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
GOR DECIMAL(15,6),
GOR_OUOM  VARCHAR(20),
LABORATORY_REFERENCE_NUM  VARCHAR(20),
MEASURED_PRESSURE DECIMAL(8,2),
MEASURED_PRESSURE_OUOM  VARCHAR(20),
OIL_ANALYSIS_TEMPERATURE DECIMAL(5,2),
OIL_ANALYSIS_TEMP_OUOM  VARCHAR(20),
OIL_DENSITY DECIMAL(9,4),
OIL_DENSITY_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
PROD_STRING_SOURCE  VARCHAR(20),
REMARK  VARCHAR(2000),
RUN_NUM  VARCHAR(4),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_LOCATION  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
SULPHUR_CONTENT DECIMAL(10,6),
TEST_NUM  VARCHAR(4),
TEST_TYPE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
WELL_TEST_SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_WELL_OIL_VISCOSITY'
CREATE table z_well_oil_viscosity (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
OIL_VISCOSITY DECIMAL(8,3),
ACTIVE_IND  VARCHAR(1),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
OIL_TEMPERATURE DECIMAL(5,2),
OIL_TEMPERATURE_OUOM  VARCHAR(20),
OIL_TYPE  VARCHAR(20),
OIL_VISCOSITY_OUOM  VARCHAR(20),
OIL_VISCOSITY_UOM  VARCHAR(20),
POUR_POINT_TEMPERATURE DECIMAL(5,2),
POUR_POINT_TEMPERATURE_OUOM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_WELL_TOUR_OCCURRENCE'
CREATE table z_well_tour_occurrence (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
OCCURRENCE_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ACTIVITY_TYPE  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
BLOWOUT_FLUID  VARCHAR(20),
CONTROL_DATE TIMESTAMP(0),
CONTROL_DEPTH DECIMAL(10,5),
CONTROL_DEPTH_OUOM  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
FINAL_MUD_DENSITY DECIMAL(9,4),
FINAL_MUD_DENSITY_OUOM  VARCHAR(20),
FINAL_MUD_VISCOSITY DECIMAL(8,3),
FINAL_MUD_VISCOSITY_OUOM  VARCHAR(20),
LITHOLOGY  VARCHAR(20),
LOST_CIRC_SEVERITY  VARCHAR(20),
LOST_MATERIAL_AMOUNT DECIMAL(6,1),
LOST_MATERIAL_OUOM  VARCHAR(20),
LOST_MATERIAL_TYPE  VARCHAR(20),
LOST_VOLUME DECIMAL(6,1),
LOST_VOLUME_OUOM  VARCHAR(20),
LOST_VOLUME_UOM  VARCHAR(20),
MUD_DENSITY DECIMAL(9,4),
MUD_DENSITY_OUOM  VARCHAR(20),
MUD_VISCOSITY DECIMAL(8,3),
MUD_VISCOSITY_OUOM  VARCHAR(20),
OCCURRENCE_DATE TIMESTAMP(0),
OCCURRENCE_TYPE  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
WATER_FLOW_OUOM  VARCHAR(20),
WATER_FLOW_SEVERITY  VARCHAR(20),
WATER_FLOW_VOLUME DECIMAL(6,1),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_WELL_WATER_ANALYSIS'
CREATE table z_well_water_analysis (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ACTIVE_IND  VARCHAR(1),
ANALYZING_COMPANY  VARCHAR(20),
BASE_DEPTH DECIMAL(10,5),
BASE_DEPTH_OUOM  VARCHAR(20),
BASE_STRAT_UNIT_ID  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
LABORATORY_REF_NUM  VARCHAR(20),
PPDM_GUID  VARCHAR(38),
RECEIVED_DATE TIMESTAMP(0),
REMARK  VARCHAR(2000),
REPORTED_DATE TIMESTAMP(0),
REPORTED_TVD DECIMAL(10,5),
REPORTED_TVD_OUOM  VARCHAR(20),
RESERVOIR_TEMPERATURE DECIMAL(5,2),
RESERVOIR_TEMPERATURE_OUOM  VARCHAR(20),
RUN_NUM  VARCHAR(4),
RW_TEMPERATURE DECIMAL(5,2),
RW_TEMPERATURE_OUOM  VARCHAR(20),
SALINITY_TYPE  VARCHAR(20),
SAMPLE_DATE TIMESTAMP(0),
SAMPLE_LOCATION  VARCHAR(20),
STRAT_NAME_SET_ID  VARCHAR(20),
STRING_ID  VARCHAR(20),
STRING_SOURCE  VARCHAR(20),
TEST_NUM  VARCHAR(4),
TEST_TYPE  VARCHAR(20),
TOP_DEPTH DECIMAL(10,5),
TOP_DEPTH_OUOM  VARCHAR(20),
TOP_STRAT_UNIT_ID  VARCHAR(20),
WATER_DENSITY DECIMAL(9,4),
WATER_DENSITY_OUOM  VARCHAR(20),
WATER_PH DECIMAL(4,1),
WATER_RESISTIVITY DECIMAL(8,4),
WATER_RESISTIVITY_OUOM  VARCHAR(20),
WATER_SALINITY DECIMAL(15,6),
WATER_SALINITY_OUOM  VARCHAR(20),
WATER_SALINITY_UOM  VARCHAR(20),
WATER_TYPE  VARCHAR(20),
WELL_TEST_SOURCE  VARCHAR(20),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));

\qecho 'CREATING TABLE Z_WELL_WATER_ANAL_DTL'
CREATE table z_well_water_anal_dtl (
UWI  VARCHAR(20) NOT NULL,
SOURCE  VARCHAR(20) NOT NULL,
ANALYSIS_OBS_NO INT,
ANALYSIS_PROPERTY  VARCHAR(20) NOT NULL,
ACTIVE_IND  VARCHAR(1),
ANALYSIS_VALUE DECIMAL(15,6),
ANALYSIS_VALUE_OUOM  VARCHAR(20),
ANALYSIS_VALUE_UOM  VARCHAR(20),
DESCRIPTION  VARCHAR(20),
EFFECTIVE_DATE TIMESTAMP(0),
EXPIRY_DATE TIMESTAMP(0),
PPDM_GUID  VARCHAR(38),
REMARK  VARCHAR(2000),
ROW_CHANGED_BY  VARCHAR(30),
ROW_CHANGED_DATE TIMESTAMP(0),
ROW_CREATED_BY  VARCHAR(30),
ROW_CREATED_DATE TIMESTAMP(0),
ROW_QUALITY  VARCHAR(20));
